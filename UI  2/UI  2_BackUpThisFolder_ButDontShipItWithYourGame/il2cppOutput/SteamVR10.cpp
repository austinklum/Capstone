#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct VirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericVirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericVirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};

// SteamVR_Utils/RigidTransform[]
struct RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC;
// System.Action
struct Action_t591D2A86165F896B4B800BB5C25CE18672A55579;
// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Boolean[]
struct BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_Action>
struct Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245;
// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_ActionSet>
struct Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D;
// System.Collections.Generic.Dictionary`2<System.UInt64,Valve.VR.SteamVR_Input_Sources>
struct Dictionary_2_tAEA5E8A9E7453E81FE8219225916E4BC29B908B4;
// System.Collections.Generic.List`1<System.Int32>
struct List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226;
// System.Collections.Generic.List`1<System.Object>
struct List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D;
// System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_In>
struct List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039;
// System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_Out>
struct List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00;
// System.Collections.Generic.List`1<Valve.VR.SteamVR_Action>
struct List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E;
// System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Pose>
struct List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D;
// System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Skeleton>
struct List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE;
// System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>
struct List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
// System.Object[]
struct ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A;
// System.Reflection.Binder
struct Binder_t4D5CB06963501D32847C057B57157D6DC49CA759;
// System.Reflection.MemberFilter
struct MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
// System.String
struct String_t;
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
// System.Text.StringBuilder
struct StringBuilder_t;
// System.Type
struct Type_t;
// System.Type[]
struct TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F;
// System.UInt64[]
struct UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// UnityEngine.Transform
struct Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA;
// Valve.VR.CVRCompositor
struct CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A;
// Valve.VR.CVRInput
struct CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B;
// Valve.VR.CVROverlay
struct CVROverlay_t98FB767D8969B5694A45224BD8D432ACBEE020A8;
// Valve.VR.CVRSystem
struct CVRSystem_t5B252CC3E969ED765C4C346EC5CF6A79657D5380;
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511;
// Valve.VR.ISteamVR_ActionSet
struct ISteamVR_ActionSet_t53D0E3370A27522961393623C5C853FCDB37C131;
// Valve.VR.ISteamVR_Action_In
struct ISteamVR_Action_In_t087B31F77B97D0622A2D5B36D4D1EDAA86107884;
// Valve.VR.ISteamVR_Action_In[]
struct ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B;
// Valve.VR.ISteamVR_Action_Out
struct ISteamVR_Action_Out_t7D4A27346C161DD4EB2C2749A80AA06D9E728D33;
// Valve.VR.ISteamVR_Action_Out[]
struct ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9;
// Valve.VR.IVRCompositor/_CanRenderScene
struct _CanRenderScene_tDE40584447362CABAFD6B784430D04869B26118B;
// Valve.VR.IVRCompositor/_ClearLastSubmittedFrame
struct _ClearLastSubmittedFrame_t969F59C8BF5960DC8F77A0115F0175501573FC04;
// Valve.VR.IVRCompositor/_ClearSkyboxOverride
struct _ClearSkyboxOverride_tBCB6CDEB6C6666B82FBE0AEDC560CECF4DE1D971;
// Valve.VR.IVRCompositor/_ClearStageOverride
struct _ClearStageOverride_tB488A86430006C3CA94432039471F0C25023B8A6;
// Valve.VR.IVRCompositor/_CompositorBringToFront
struct _CompositorBringToFront_tE24705ABB39CFB124042B89DAC3C38BB1F85795C;
// Valve.VR.IVRCompositor/_CompositorDumpImages
struct _CompositorDumpImages_t81E6DBB82D35105B8D16AD44BDCCAD3624F3E81D;
// Valve.VR.IVRCompositor/_CompositorGoToBack
struct _CompositorGoToBack_tF3E1201BFC1F50E0784404489C3E552797E43346;
// Valve.VR.IVRCompositor/_CompositorQuit
struct _CompositorQuit_t640663BAA37F6746BE5809D4AFD80EC61C568902;
// Valve.VR.IVRCompositor/_FadeGrid
struct _FadeGrid_t4D11F0591C69AB2A3E55A6437C3287C9D9009A56;
// Valve.VR.IVRCompositor/_FadeToColor
struct _FadeToColor_tCBF39ACC5136AE7F23D3C035A5C4677A2DE597E8;
// Valve.VR.IVRCompositor/_ForceInterleavedReprojectionOn
struct _ForceInterleavedReprojectionOn_tF28FFD3507DC2B8D195A004B96D0790B439862CB;
// Valve.VR.IVRCompositor/_ForceReconnectProcess
struct _ForceReconnectProcess_t05157A153AAD86C2875B13E6EE4B4CAA836F0E07;
// Valve.VR.IVRCompositor/_GetCompositorBenchmarkResults
struct _GetCompositorBenchmarkResults_tB2C659809CCAA2BE44A5F4179ADBED5759E912C8;
// Valve.VR.IVRCompositor/_GetCumulativeStats
struct _GetCumulativeStats_t1106FF48E357EC92BB3568A7D4C6A35CB50E7506;
// Valve.VR.IVRCompositor/_GetCurrentFadeColor
struct _GetCurrentFadeColor_t0760486B9A0AD7E2768E3E94C96CD17F6F87368E;
// Valve.VR.IVRCompositor/_GetCurrentGridAlpha
struct _GetCurrentGridAlpha_t09CBC75362318D28B915C57BCE32C0542BECA0A6;
// Valve.VR.IVRCompositor/_GetCurrentSceneFocusProcess
struct _GetCurrentSceneFocusProcess_t828C1D2E50898584E302A12EF23D5DF3B85A66D5;
// Valve.VR.IVRCompositor/_GetFrameTimeRemaining
struct _GetFrameTimeRemaining_tAFC5580926959947E3DD985F1B8232B3419DF96C;
// Valve.VR.IVRCompositor/_GetFrameTiming
struct _GetFrameTiming_tF72A3B101432CF529D180E6E69CA2DDEC58EB241;
// Valve.VR.IVRCompositor/_GetFrameTimings
struct _GetFrameTimings_tE3353CDF4C760697793654FBA910DDD49EF6EC2C;
// Valve.VR.IVRCompositor/_GetLastFrameRenderer
struct _GetLastFrameRenderer_tF6A454F9792D13D6CCBAC715E9B8EC5C9ED5476C;
// Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex
struct _GetLastPoseForTrackedDeviceIndex_t05CF8BE0EE9758E4AFE7EC6F14BF25BD287B40F7;
// Valve.VR.IVRCompositor/_GetLastPosePredictionIDs
struct _GetLastPosePredictionIDs_t33EDCA00D00EC065C5EF0E3206AA18CBB0E2F009;
// Valve.VR.IVRCompositor/_GetLastPoses
struct _GetLastPoses_t877DF4406C3AC035C9ABCB128E63F54D3F5AB2A7;
// Valve.VR.IVRCompositor/_GetMirrorTextureD3D11
struct _GetMirrorTextureD3D11_t3821C937B45635C32287945301C38059DB069FB8;
// Valve.VR.IVRCompositor/_GetMirrorTextureGL
struct _GetMirrorTextureGL_t50B5BE7FFEE8616FF874BAF2C2AF05898F0C9328;
// Valve.VR.IVRCompositor/_GetPosesForFrame
struct _GetPosesForFrame_t2E59880E3A298AE799E6E71D68BED9A95ABE1F06;
// Valve.VR.IVRCompositor/_GetTrackingSpace
struct _GetTrackingSpace_tF0B604887238FB14F8B2DAD3C935CBD74444EC34;
// Valve.VR.IVRCompositor/_GetVulkanDeviceExtensionsRequired
struct _GetVulkanDeviceExtensionsRequired_tCC05B455C0965E80ADBBD3B7BCF1F27FED8C0D7A;
// Valve.VR.IVRCompositor/_GetVulkanInstanceExtensionsRequired
struct _GetVulkanInstanceExtensionsRequired_t9751CFE333A87BB7FBCD392C4BC9F0DC2D1C5153;
// Valve.VR.IVRCompositor/_HideMirrorWindow
struct _HideMirrorWindow_t4A3D32F44081DF29C9A6104F0FC6C556399D706E;
// Valve.VR.IVRCompositor/_IsCurrentSceneFocusAppLoading
struct _IsCurrentSceneFocusAppLoading_t392DA4A7C28A1CDA9865CF18B8C2FD519EC71E70;
// Valve.VR.IVRCompositor/_IsFullscreen
struct _IsFullscreen_t7D2C12F6A41A525E0D22CD1FCEAA101AD6D194D0;
// Valve.VR.IVRCompositor/_IsMirrorWindowVisible
struct _IsMirrorWindowVisible_t7B3DE5AD3A0163C9BDD47BD1FBC05D9125221BFC;
// Valve.VR.IVRCompositor/_IsMotionSmoothingEnabled
struct _IsMotionSmoothingEnabled_t7FEC42C083D4FE3D908A21DFC5F4F77C67739920;
// Valve.VR.IVRCompositor/_IsMotionSmoothingSupported
struct _IsMotionSmoothingSupported_t5F76D030811D39ABABFFBCF99AA6F0C5786C3BD8;
// Valve.VR.IVRCompositor/_LockGLSharedTextureForAccess
struct _LockGLSharedTextureForAccess_t4455F055E92E573DC7A8FD6C490A9AA90A888011;
// Valve.VR.IVRCompositor/_PostPresentHandoff
struct _PostPresentHandoff_t2DA780AB403F80C444E2508DB828BB0D7AA22296;
// Valve.VR.IVRCompositor/_ReleaseMirrorTextureD3D11
struct _ReleaseMirrorTextureD3D11_tD5895D0FC5B1A609E2E53A9F6A5C74EA68B942ED;
// Valve.VR.IVRCompositor/_ReleaseSharedGLTexture
struct _ReleaseSharedGLTexture_t4EAF2DEAA554E95A148CCC62460AA630159B342A;
// Valve.VR.IVRCompositor/_SetExplicitTimingMode
struct _SetExplicitTimingMode_tB9F2ED124C61E42FF38352711118877D470D69B1;
// Valve.VR.IVRCompositor/_SetSkyboxOverride
struct _SetSkyboxOverride_tC5019711FFA65B037E95A4F3A8BCB8B63A2690CD;
// Valve.VR.IVRCompositor/_SetStageOverride_Async
struct _SetStageOverride_Async_t781CA9835AF190B2729A37A8E5BB5DF143DD32BA;
// Valve.VR.IVRCompositor/_SetTrackingSpace
struct _SetTrackingSpace_tDAC6F374480D3A83BE4C1C0CC6525D543BC8D7D6;
// Valve.VR.IVRCompositor/_ShouldAppRenderWithLowResources
struct _ShouldAppRenderWithLowResources_t07BEE5FBB23B1DDA47EE6C459CEEE5702E8A17BE;
// Valve.VR.IVRCompositor/_ShowMirrorWindow
struct _ShowMirrorWindow_t8C04F03CF7C80BB81F0499DFD76073FE969644B5;
// Valve.VR.IVRCompositor/_Submit
struct _Submit_t80D004BD057D9431F39A5D22809D5A68B9F0B1D2;
// Valve.VR.IVRCompositor/_SubmitExplicitTimingData
struct _SubmitExplicitTimingData_t039BD93DD97E6020AA0C5AC1E6C7AC9FBE5390EC;
// Valve.VR.IVRCompositor/_SuspendRendering
struct _SuspendRendering_tC812DC4CE9D26AF62AC7E37E0FF3E120EC2DC008;
// Valve.VR.IVRCompositor/_UnlockGLSharedTextureForAccess
struct _UnlockGLSharedTextureForAccess_tF654CBBC933AAC2FAB5B9E7702A1F6E130250B67;
// Valve.VR.IVRCompositor/_WaitGetPoses
struct _WaitGetPoses_t44D69BD3F698D7DB94A2351E1FDFEA3D1DA9C3B5;
// Valve.VR.IVRInput/_DecompressSkeletalBoneData
struct _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277;
// Valve.VR.IVRInput/_GetActionBindingInfo
struct _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5;
// Valve.VR.IVRInput/_GetActionHandle
struct _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988;
// Valve.VR.IVRInput/_GetActionOrigins
struct _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69;
// Valve.VR.IVRInput/_GetActionSetHandle
struct _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56;
// Valve.VR.IVRInput/_GetAnalogActionData
struct _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB;
// Valve.VR.IVRInput/_GetBindingVariant
struct _GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96;
// Valve.VR.IVRInput/_GetBoneCount
struct _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1;
// Valve.VR.IVRInput/_GetBoneHierarchy
struct _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876;
// Valve.VR.IVRInput/_GetBoneName
struct _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF;
// Valve.VR.IVRInput/_GetComponentStateForBinding
struct _GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA;
// Valve.VR.IVRInput/_GetDigitalActionData
struct _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8;
// Valve.VR.IVRInput/_GetDominantHand
struct _GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029;
// Valve.VR.IVRInput/_GetInputSourceHandle
struct _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF;
// Valve.VR.IVRInput/_GetOriginLocalizedName
struct _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F;
// Valve.VR.IVRInput/_GetOriginTrackedDeviceInfo
struct _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B;
// Valve.VR.IVRInput/_GetPoseActionDataForNextFrame
struct _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E;
// Valve.VR.IVRInput/_GetPoseActionDataRelativeToNow
struct _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8;
// Valve.VR.IVRInput/_GetSkeletalActionData
struct _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A;
// Valve.VR.IVRInput/_GetSkeletalBoneData
struct _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A;
// Valve.VR.IVRInput/_GetSkeletalBoneDataCompressed
struct _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B;
// Valve.VR.IVRInput/_GetSkeletalReferenceTransforms
struct _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5;
// Valve.VR.IVRInput/_GetSkeletalSummaryData
struct _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822;
// Valve.VR.IVRInput/_GetSkeletalTrackingLevel
struct _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93;
// Valve.VR.IVRInput/_IsUsingLegacyInput
struct _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7;
// Valve.VR.IVRInput/_OpenBindingUI
struct _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F;
// Valve.VR.IVRInput/_SetActionManifestPath
struct _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE;
// Valve.VR.IVRInput/_SetDominantHand
struct _SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D;
// Valve.VR.IVRInput/_ShowActionOrigins
struct _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71;
// Valve.VR.IVRInput/_ShowBindingsForActionSet
struct _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A;
// Valve.VR.IVRInput/_TriggerHapticVibrationAction
struct _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8;
// Valve.VR.IVRInput/_UpdateActionState
struct _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5;
// Valve.VR.SteamVR
struct SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F;
// Valve.VR.SteamVR_Action
struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734;
// Valve.VR.SteamVR_ActionSet
struct SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6;
// Valve.VR.SteamVR_ActionSet[]
struct SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA;
// Valve.VR.SteamVR_ActionSet_Data
struct SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529;
// Valve.VR.SteamVR_Action[]
struct SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB;
// Valve.VR.SteamVR_Action_Boolean
struct SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20;
// Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler
struct ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884;
// Valve.VR.SteamVR_Action_Boolean/ChangeHandler
struct ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0;
// Valve.VR.SteamVR_Action_Boolean/StateDownHandler
struct StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464;
// Valve.VR.SteamVR_Action_Boolean/StateHandler
struct StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA;
// Valve.VR.SteamVR_Action_Boolean/StateUpHandler
struct StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8;
// Valve.VR.SteamVR_Action_Boolean/UpdateHandler
struct UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B;
// Valve.VR.SteamVR_Action_Boolean[]
struct SteamVR_Action_BooleanU5BU5D_tBB030CD0CA82DB08AEB7456EC4C614EA8B7A5E34;
// Valve.VR.SteamVR_Action_Boolean_Source
struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB;
// Valve.VR.SteamVR_Action_Boolean_Source[]
struct SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D;
// Valve.VR.SteamVR_Action_Boolean_Source_Map
struct SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B;
// Valve.VR.SteamVR_Action_In_Source
struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB;
// Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>
struct SteamVR_Action_In_Source_Map_1_t7F4F1E354FE5A814AEA83C884D31215ED36A1A8D;
// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE;
// Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>
struct SteamVR_Action_In_2_t69D3F3E304EB8FE2A070ACD581E61CDFF8732243;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9;
// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02;
// Valve.VR.SteamVR_Action_Out_Source
struct SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6;
// Valve.VR.SteamVR_Action_Pose
struct SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C;
// Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler
struct ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E;
// Valve.VR.SteamVR_Action_Pose/ChangeHandler
struct ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE;
// Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler
struct DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9;
// Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler
struct TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914;
// Valve.VR.SteamVR_Action_Pose/UpdateHandler
struct UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1;
// Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler
struct ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A;
// Valve.VR.SteamVR_Action_Pose[]
struct SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968;
// Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>
struct SteamVR_Action_Pose_Base_2_tE4721EEBBC945BAAF6FF57A49BF6EB4ACDB13900;
// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A;
// Valve.VR.SteamVR_Action_Pose_Source
struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27;
// Valve.VR.SteamVR_Action_Pose_Source[]
struct SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18;
// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9;
// Valve.VR.SteamVR_Action_Single
struct SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81;
// Valve.VR.SteamVR_Action_Single/ActiveChangeHandler
struct ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE;
// Valve.VR.SteamVR_Action_Single/AxisHandler
struct AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843;
// Valve.VR.SteamVR_Action_Single/ChangeHandler
struct ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED;
// Valve.VR.SteamVR_Action_Single/UpdateHandler
struct UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D;
// Valve.VR.SteamVR_Action_Single[]
struct SteamVR_Action_SingleU5BU5D_t17606A7D166DFF733AFE6D853883DEBF3D7A34A2;
// Valve.VR.SteamVR_Action_Single_Source
struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F;
// Valve.VR.SteamVR_Action_Single_Source[]
struct SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277;
// Valve.VR.SteamVR_Action_Single_Source_Map
struct SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37;
// Valve.VR.SteamVR_Action_Skeleton
struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504;
// Valve.VR.SteamVR_Action_Skeleton[]
struct SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56;
// Valve.VR.SteamVR_Action_Skeleton_Source_Map
struct SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB;
// Valve.VR.SteamVR_Action_Source
struct SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0;
// Valve.VR.SteamVR_Action_Source_Map`1<System.Object>
struct SteamVR_Action_Source_Map_1_tCAA2C8FE17BA000619F1ADE00A17D8037F5B4B14;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20;
// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1;
// Valve.VR.SteamVR_Action_Vector2[]
struct SteamVR_Action_Vector2U5BU5D_t59620E37FA97264ED8B42C392F939C8ECCC6AC1B;
// Valve.VR.SteamVR_Action_Vector3[]
struct SteamVR_Action_Vector3U5BU5D_tCB49AE6A470D2C2A5C963F6B94A56EFE0E0B9E9D;
// Valve.VR.SteamVR_Action_Vibration[]
struct SteamVR_Action_VibrationU5BU5D_tD7B0D0DE94599F6D17C88113C883DC686AE1BD12;
// Valve.VR.SteamVR_Action`2<System.Object,System.Object>
struct SteamVR_Action_2_t17CE6363B177E4D037F3097259B68D6F8842CC5B;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC;
// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170;
// Valve.VR.SteamVR_Input/PosesUpdatedHandler
struct PosesUpdatedHandler_tFA469337ADC152B8E747DB034400AE77D45238CA;
// Valve.VR.SteamVR_Input/SkeletonsUpdatedHandler
struct SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6;
// Valve.VR.SteamVR_Input_ActionFile
struct SteamVR_Input_ActionFile_tC425AB8156D447975E61DFF0C51888DE25BA09B1;
// Valve.VR.SteamVR_Input_Sources[]
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A;
// Valve.VR.SteamVR_Settings
struct SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C;
// Valve.VR.VRActiveActionSet_t[]
struct VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5;
// Valve.VR.VRTextureBounds_t[]
struct VRTextureBounds_tU5BU5D_tAE079634A0FDBA61CBA97C5AE3C69BD032940E02;

IL2CPP_EXTERN_C Il2CppSequencePoint g_sequencePointsSteamVR[];
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ISteamVR_Action_Boolean_t8CDD2F5A44326969F039DC858F8684734DA427D2_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ISteamVR_Action_In_t087B31F77B97D0622A2D5B36D4D1EDAA86107884_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ISteamVR_Action_Out_t7D4A27346C161DD4EB2C2749A80AA06D9E728D33_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ISteamVR_Action_Single_tD46A103FE251329BF5EBF9A7BEE38B6AE78A5562_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ISteamVR_Action_Vector2_t00FBC4A3D9043744BFC49EC00B5E2DBA6B7868D4_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ISteamVR_Action_Vector3_t2FB9D59D2C266F6BF4E9FE14EBA4C0DD8B470647_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringBuilder_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Type_t_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C RuntimeClass* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var;
IL2CPP_EXTERN_C String_t* _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B;
IL2CPP_EXTERN_C String_t* _stringLiteral1FD9E143C289F97C9834DDDBFD3CAA4FF064024F;
IL2CPP_EXTERN_C String_t* _stringLiteral23F9C830C2F7B5EEA2CFEF2E6227481A1E13ED72;
IL2CPP_EXTERN_C String_t* _stringLiteral3A7CDEF52D3DE29B65F025A01642173D5069CE13;
IL2CPP_EXTERN_C String_t* _stringLiteral3C1DAA6957F3D30C74E902B0E1239020BD2032EB;
IL2CPP_EXTERN_C String_t* _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45;
IL2CPP_EXTERN_C String_t* _stringLiteral835969BE246438C0C1F94252E3DAA388ABE21BBE;
IL2CPP_EXTERN_C String_t* _stringLiteral86E8370248F8FE7578E8A312953CA12AE864509D;
IL2CPP_EXTERN_C String_t* _stringLiteral89D0E943F4CBF79958E13F52A770E6F67C06F387;
IL2CPP_EXTERN_C String_t* _stringLiteral8F81A123645902E7859F319F49E4414C0F77D44E;
IL2CPP_EXTERN_C String_t* _stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73;
IL2CPP_EXTERN_C String_t* _stringLiteralAC897ED588F0446677581414C46F231807AB2556;
IL2CPP_EXTERN_C String_t* _stringLiteralAC9231DA4082430AFE8F4D40127814C613648D8E;
IL2CPP_EXTERN_C String_t* _stringLiteralADC83B19E793491B1C6EA0FD8B46CD9F32E592FC;
IL2CPP_EXTERN_C String_t* _stringLiteralBF36B31510F1F60267BB121C5485B7F7FC7D7D59;
IL2CPP_EXTERN_C String_t* _stringLiteralE3B64D915824C645A785624AFF1FCD3F38554B93;
IL2CPP_EXTERN_C String_t* _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_m2F40A46649DE9F41DA5EFF00B1BE9E6398B8C230_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mDF2F700986FF96334AB4BDF4A6C59B21F5D363BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mE2CD0AD29CD6CE0EEA987C0060B8888D7BBA7D97_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mEF5A942248F62F6C41B60715025920933A09D025_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Add_mF78B2826BBA103681C33B9B3324B40499714D270_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_Insert_m8E1B4C1E07BEE076D186D8F353B70C36EB7D3162_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_ToArray_m1108FB082C3C5F9F61019E3418CBEEBC8683A2CC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_ToArray_m1DEF39891430F5006DACED95FF5635E20E5383AB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_ToArray_m2BDB1565BA0CC1BD90519A604819C49271EBF994_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_ToArray_m470F0A969BF075D357A86483EAE70044615743A9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_ToArray_mAD65CA979E887314BE09D9F86956A71F4DD0C63D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_ToArray_mC869178ED852E7FAD653B847FFD1D68B7E3442AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m457F51332DF249D2915C9C74417863E1FFE39421_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m4B6E82AE7F17F9C7BA593C6B9560A953DAF7669A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m6DD1A135C8AAA0CABC4E324E43DDC01B8E5DA377_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_m7B9B03A716E37A20B0DEADEC320577C95FEF69EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mDE47585A983559D5FF01B691252B7916A522D8BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1__ctor_mF06B82312E78C159AEDF13A8DD791208649F24D8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_Activate_m8C958814A91F7C665A0BFCAF67627BAAEC93B3AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_Deactivate_mE0A9AC1E44C88BE94147501C11CE88E193FCF627_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_FinishPreInitialize_m8C0EAC503979427BADE6B4BDC78F96FFD1313814_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_GetShortName_mDEEB621483F8E19D8AD132B2E0225CD2A2AF467D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_GetTimeLastChanged_m5ECECC1C5DE2077B835B5BD2F7BE0876638EEF8F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_Initialize_m0BE37476A9F4DCEA304B33032F3FABC598282A67_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_IsActive_mC6E31ADAB67DCCF82B2E27F64161BC66DC4DB25B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_PreInitialize_m87876D8B244F011424022EEC7ADF26A3BAD1E0B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_ReadRawSetActive_m891E7459F99CA50296CDA3B125BFD30A5354E885_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_ReadRawSetLastChanged_m919EB49DF19CF40FE2656A04DD3426CEBAFDB17F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_ReadRawSetPriority_mED5DD82308639337336BB89EAD040FC46E0063C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data__ctor_m812A76A6EE69B1EC1169664FE8943FB654017719_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_usage_mC3F7B583669D0E55F049F3D1022FF1707ABCD75F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Equals_m33289198F04431CE9945A4B99A73206DE68F4110_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Equals_mFD436DEBDAA9D1FF4B19B80F16AB1F59D723D6B5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_FinishPreInitialize_m70B79F27A12FC273FC4F973BB36BC186FBC8364D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_GetHashCode_m9908CECA319994BE6D7C21E64B10472310E0B395_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_GetPath_mAF6DADB564441DA1A937E81E61A235008C75D124_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_GetShortName_mA622B5396AA3CB274F8290FD4C0DD1BF6504769E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_GetTimeLastChanged_mDE79600B7D30E830487C824CA58E5FDB6ADDDF91_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Initialize_m4C0A7CCA08EA428ECBA226CDCA56752D02F2C7EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Manager_DisableAllActionSets_m12EB6122FBA645AB44644A2D46785CEBB3FB3B35_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Manager_GetSetFromHandle_m9F9E7D5DFFC04B5C8CBAAB15B6E9F75997B9C22D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Manager_Initialize_m5B739027E6B67DDDE636C29896058342FA235D7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Manager_UpdateActionSetsArray_m5B38E7C7984AA6B00A0D53678600DA349B88D4B3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Manager_UpdateActionStates_m6F0D76FF654C97F1700EBBB1D6E00A7FEBE426AF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Manager_UpdateDebugText_m650FC8288DEEC6717EAFD78F778D990DE023F14F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_Manager__cctor_mF9DD347E731DCED17050FA5DA5FBCCD90163C6E7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_PreInitialize_m12C2199310C3984FF48A7D8A4C598D1F3C68F87C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_ReadRawSetActive_m161B1A01E1A47E416D34A1221B95214693E51952_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_ReadRawSetLastChanged_m91B3EC744644009BCF35304756E9521931E0716B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_ReadRawSetPriority_m58E0F9561136FBE76C799447547C14C1C4FB8476_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_ShowBindingHints_mB909AC05EE8CDFDDC3378208BF53789A28508D7D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mBD177016456C229158B18513D6D42A73DC1D161D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m57517F475143B3FA3F8B76EFC37B2A8189882804_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet__ctor_m219C95976CE339EC6C3221895BB110986F1DC84B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_allActions_m62CE49140438A5C8B93840F945587E2BDCA22413_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_fullPath_m04E577C3FD515068729E2DB651CE8767995DC432_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_handle_m3C1592C47E16A579B14F77D84DE50B89BDB9405F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_nonVisualInActions_m4D86AC17F666B3ED42B07F2487F49982B60B16D9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_outActionArray_mC0550B0E6E1027097D6DD5D5876088959EF72072_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_poseActions_m53164D70956166FE1E44DE8C6D9B27C911DA167A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_skeletonActions_mAD34C5C7F47FD4FA7C97ED7DD80B1AC1D99009FD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_usage_mB535DF8D539763EE2D97E92829825879BFF6DCD2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_get_visualActions_m3FC0BF9AF969A8B1B8E3ABAEB9202915CEAD05F1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_op_Equality_mE7F907A29CA5B03F5449D3B017572D85A7D7667E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m2F768D4CC6A466FA8C4227575AAF7AE0B58FE8EA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m631EE116B3831060F47CC659AE2A5FBF7186559A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_2_InitAfterDeserialize_m6A42B25463661C95EFB21E4291307959C9F0E647_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_AddOnActiveBindingChangeListener_m5910008B1E06400710E7124CF610CE6CF1C8BEF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_AddOnActiveChangeListener_mF32B5AFCCD10C1460B7C13697EEFF65E0EB61D23_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_AddOnChangeListener_mCF5FCD63EF55DD3723E4C650DA603AC5C6A0DDFD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_AddOnStateDownListener_m81FDDC6C1F9DD9B04DA9F701B68926379FCE9FD9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_AddOnStateUpListener_mF11EDC53EF1D2CB4FD87211B54A3505E9094887B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_AddOnUpdateListener_mECB6B8646EAC45266923098D9BAF539DF3D05C5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_GetLastStateDown_mDF8F5659705B49C23F77CEB13884086AA05BD446_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_GetLastStateUp_mCD7A04FC288B34EFBC4597E2E6D7395CB7838D7B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_GetLastState_m5BCD65EBEC51B93D30C31C727CFB4958B5E02019_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_GetStateDown_m86915AC100687E07E0796D52FAB721DD30D5CDC6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_GetStateUp_m83F063805256AEBD01AFF9368025D9D5DDAE9457_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_GetState_m2D6400A61EA7E39E3ECE024B7542FFCEF1242908_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_RemoveOnActiveBindingChangeListener_m887837BCEA9D6F0E75AD281B4CC7ED02F28CA88A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_RemoveOnActiveChangeListener_m0A5E33C0D2C705EF74246AC6E2B10F34716D2E55_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_RemoveOnChangeListener_mCE6B6CA0C80E2C83C62305AC9A5181E0F9C8C033_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_RemoveOnStateDownListener_mD35F3C39B9080D819E483837F37513624601060E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_RemoveOnStateUpListener_mBDF4B15FB6844F70884083D81956A740670DA845_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_RemoveOnUpdateListener_mFDF8AC7BDE485488AD051616A88B15135A78B3B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_Initialize_mD35F8622AC0834DB1852656DA9F8EF3F740A2E6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_Map__ctor_mAAF780ED996AD99DCFC4B1E148A4AA7E419EEEFC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_Preinitialize_mE398BE018ADFDF3FD3BE8AEA0835F41D17C23AAD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_UpdateValue_m8B285B523C9A51B99909979E7AD647A1D36E8754_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source__cctor_m8822ACDFE8D4D06D68D64A938FEDDCCFCD8F9BA5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source__ctor_mDBC93FE6A1BDB4E3FCF081D526DE205DBEEA4604_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_add_onActiveBindingChange_m3E749DFEECD4756269020C7159A8848C05503C7E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_add_onActiveChange_m7E094E7B60FD19A1F34DDD37589C37878DB6F636_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_activeBinding_mCD6C653E26B9C2E6B6712A37D2CD6724EAF745CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_activeOrigin_mAAA82EC4C6BC594A5C5B0BAB5AD8F35CCE4F3322_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_active_mC72D03F26731C6193A7CF3CC589A5975F59293E2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_changed_m54D495C9FD36559978602102646A286CFDD39AEB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_lastActiveBinding_mB22A66B79AA1D726B31ECEDB7A6ED94CB9CA84B5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_lastActiveOrigin_m28B22A1100F371F273B4840367B2FA6865976799_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_lastActive_m6D694E7B47E3C0915A50F91098D251F430F150A6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_lastChanged_mBF64A8A0A5779C3C2E10056F777459E86230C906_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_lastStateDown_mC33753F4A4DB7BF33BF0727E0B441D556EF9FE96_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_lastStateUp_mECCC96AB8645D1EA185DCCA78478B47850850276_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_lastState_m3738D53D87B67856DCF3E6C32DB0A4DF72B828DD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_m2FBB2D79C11CDAD80D58D3558DAA55377F7FC42F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_remove_onActiveChange_m929F8C0D16D3EB930B80201ED30C2B06ABB153E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_set_changed_m1CB090872A0E6E8356D1DCD5507335D3A6D42B92_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_set_lastActive_mF553E65B29771B7ED438601E55DF6FA7986A51EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_Source_set_lastChanged_mAE8A94856F9C04264EEEA2B6F1A6C03F683EFEEA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m5E920BA13AE0EF0BDE92264615FB690CF0A5AE66_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m50DEA2A00F7179CA460458CCE26547855C3F852E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean__ctor_m0E0938333888A2EBC06EB368DC37BC4686F8093B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_add_onActiveBindingChange_mBDBB80F0FD7810164E27701BDA5E1798B4554788_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_add_onActiveChange_m1E2FA167B7AC342D02F27E15C5F3074AFD3C3CE3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_add_onChange_m7B0D49054E855F76E3B6CC0A275AAD0C183B891C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_add_onStateDown_m1A5D1FF097F7C411A428C347BAD0CD4BE14A8F7B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_add_onStateUp_m784A9D29CD9EE31E8FA28BCA458ED59C4A989B75_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_add_onState_m15FBFBFCB8B0E902475BC583C34C6B34CED020BE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_add_onUpdate_m6D5FF31323BDD55FEDCB493F233A1FB08ACA4B48_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_get_lastStateDown_m63B05087D4E2131C2438AEC60F1BE63932C7BC00_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_get_lastStateUp_m4FB0D1BA1D24D0A1CDB00C49A447FBE37BEE28CB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_get_lastState_m70E82A3A7FA8B736966EC95CCF9128DABC1090BC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_get_stateDown_m4178138E7D39243E86ECADD56416A31E902B24BA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_get_stateUp_mDC96596EA265A6EB09F69F68E62E7A6D032EF433_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_get_state_m6B3B4CD7594ABBFCD9DF45FDEDAD47DE27873FD9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_remove_onActiveBindingChange_m1B9E622090040B4B45F15A9A414C96363D7F6FE8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_remove_onActiveChange_mAFBBAE5B2ED269DE18C06DBC9197AC826C0BB6FD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_remove_onChange_m1C931656596969E280B81F6A8BBAFAF82615E5F7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_remove_onStateDown_m4583281E4E97D5357C1BD28558EFDC7C41B7CC7E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_remove_onStateUp_m68A919C2D693F81D12ACCB7769B179C6D83B4A00_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_remove_onState_m7FFCE1D294F192CAA994986A467891829A777433_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Boolean_remove_onUpdate_m9764ED6836A812B8C6FDF052FDE77702EBB31DC3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2__ctor_m3D48B8CB47E690C4518B62F2A6AEEAA715C58756_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_2__ctor_m421E8FB8CFB44A3AAAE42D765F4158180B98B9B1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_GetLocalizedOriginPart_m8A1FC7BEF4660C4D7D7573EE13F399C76D325938_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_GetLocalizedOrigin_m3F7940786DFA6BAC3C618A67EA65C503E585D9CC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_Map_1__ctor_mE09AB88DCEFF91428F5A5C11BC337B2DEA0E492B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source__cctor_m36E304B105D4788BDC6EB9B808AE5147F2F1E91F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_get_activeDevice_m889780B67CDEDA524D6D5B264228DF2598AC3ED7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_get_changedTime_m55B868F934C945AF841AD79C7418EE75F54B9319_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_get_isUpdating_m85A55DF822095397B0032B8627D56ABA9F1F0A60_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_get_localizedOriginName_mDC95A0FF89C4C7DC1DE3C14CB77709E74A0F5508_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_get_renderModelComponentName_mC1CB2C1D9A4CC549A42F33229CA0A897918DC116_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_set_isUpdating_m907328DCCD2733DA877A4914FCEEAA08BF4527EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_AddOnActiveChangeListener_mBBBEE095B66D0EF219F53B0FC4B6A229D1D8332D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_AddOnChangeListener_mE2A71EBE8C1F94A46CA2C4FC318926B5DF779678_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_AddOnDeviceConnectedChanged_m80082F78AEA2CBCAB4DCB78A8CD9CBB274846209_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_AddOnTrackingChanged_m05560B3FD5E3B66303CE4B8A9652A450C0A89D55_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_AddOnUpdateListener_m7AC52C7B2731C86A35B684D8061A40DCEEF1DF37_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_AddOnValidPoseChanged_m6EDFA42DACF408A48A96BFB2E949BEE84119D9CA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m9C4D69476F261793A9C024F0B06DE9B549EE8C2C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Base_2__ctor_m04D9EF0A3BBF604D9C6F5846B1DC9A4A852AC7D8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_RemoveOnActiveChangeListener_m69ECF77A80ADF89DD301AF65324001517F00DC3E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_RemoveOnChangeListener_m521DDEC9E3616B72746F67EAEC417D87268265F8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_RemoveOnDeviceConnectedChanged_m364AA5B2A2F44F0E1135422C18F886038F4134E9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_RemoveOnTrackingChanged_m275E06D55C0CEA46D0A8B8C1223D082C9EB739EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_RemoveOnUpdateListener_m3EAE0FCC4813C60A464C863BAD05906A8DAD4157_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_RemoveOnValidPoseChanged_m6619193D1BA39DEB98C872B29CA28BA7FA64F98A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_SetTrackingUniverseOrigin_m4B3FEF00455AAC74A5D52CB5247CDB351BD85122_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_CheckAndSendEvents_m3A6C265E2B9EAB93C11B8AD1A8A23006A77920A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_GetChanged_mDCF9B89311A87C0C4E58E86E4D87002F8DEFF8E5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_m139061D3915BC3462FBEA4CBFCB3BD8DDB7FF4C7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m64A302D834078EB5F852E2454736416EFAA6094D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m170A3FFF941B012949E57D5DA611B896170AD4BD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_Initialize_mE07A70E1AF9A3257AFD2BB0C4FA228D748F88B43_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_Preinitialize_m9D4858F6CD07854B44FEABF972A396AD52BF2979_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_SetCacheVariables_m0BC40967351405886DCA503AC1DB8D0FEE51E51E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_UpdateTransform_m83614007AB0B80DB53701A76344CCDFCF92CC730_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_UpdateValue_m391570D77BB5CE3B0082C689A0D7AEE5AC0CC5CE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_UpdateValue_mD4FCEA491C3040D805773739C9A00420DB876447_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source__cctor_mB91677EC6687DBEACF312A80A30E464B6A53DAFB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source__ctor_mADDAC326C7500D82492B45F896F5F57C4B60D880_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_add_onActiveBindingChange_m2CCB91E08B318C4D6A45A8356BBAA73BC9831580_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_add_onActiveChange_m6C3297DBA3E2608BE985FA75EE8D46EAC5C792B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_add_onValidPoseChanged_m35C4DDEF19BCA4F9606F36E545FF6D39461DF637_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_activeBinding_mC4796E57EDF00116563A0D70474F55E457E2C223_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_activeOrigin_mD4B10DF73C4B47C672FF81DEE758BA87AD48E384_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_active_m4D9B8F64C7DCCC89A18264EA3CCAB388FE46A7B2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_changed_m8E77CE07064415FB25C71536050FA78CC9A712D7_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastActiveBinding_m318C41747487845418710A9C551548A08F51F5C6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastActiveOrigin_m7C47B89C0F4A75F118BC894A63D1722BA5E15802_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastActive_m0B8F257126F8B3654DF9C06DA32FC81D60619D5C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastChanged_m5F4A93F1CE0B35353814569A5D3E678B2EB33A57_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m800A450B68164A69677E890066A3C6CE0B59BD15_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_remove_onActiveChange_m0D6A09A4D2599E4EECF2460CF2A3B7466BC0B739_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_remove_onValidPoseChanged_m30DDDE1F913F495779B5369059C11D07D18A8749_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_changed_m60BCF947C4C21E9B0EEECB47939451CE961CB88D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_lastActive_m1C75FF7AD28E6E3E7688BBC0090225405738B2C4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_lastChanged_m03E860AEEB41776E285FCBAA8ACA87982C4C525B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m12CF0CC15BB991562407D6C483B7570F5BE4AA1D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m22BDD78F639B413C506505CD777EFEC3ED51FC15_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose__ctor_m6CC3B700F655C32E13184306C5A1A021AA3D7C5F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_add_onActiveBindingChange_m4E51D8BA780E1CD094EA1D5F9D268147ED655C3A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_add_onActiveChange_m2C9460C4B684E83B5E42E964A1248F7A1502E619_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_add_onChange_mFB47B69DF9CCD9457EED2CDC3BA02ECD5319C8A4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_add_onDeviceConnectedChanged_m52B59F6B261F37924D761281073948E423B6C935_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_add_onTrackingChanged_m173F94A21080D3BFB441E77226685BDDB028E094_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_add_onUpdate_m9D1B219D37CA69D76CB0BC892B25EA535D74EE52_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_add_onValidPoseChanged_m6B627239BB39BE78A8FCD289EF78C285D437E959_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_remove_onActiveBindingChange_m1251EBFEF53A76139F9DC74AD1C57B5279A0BFAB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_remove_onActiveChange_m4893657BF47B36BA49B49EF674AA405D56DBAD36_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_remove_onChange_m572391872A10026D1F3A893109200E1D8CFBFF68_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_remove_onDeviceConnectedChanged_m663D3DE49E146E4EE2A5D21E1ECAAB27883E257A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_remove_onTrackingChanged_m2E8165405E4A93E6A72DE9EE8DD1A11027A4A185_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_remove_onUpdate_m0611D358B7BAEC00E1F2FDF0D2307DCDB0E04071_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Pose_remove_onValidPoseChanged_mFFD4D9D7B0C1E4F143E06F2245A509F4BC557D85_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_AddOnActiveBindingChangeListener_mC470F870182CEDDF291595E2B0ACDBEB0A34D47C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_AddOnActiveChangeListener_m3423FDCE1372AFA80166AFEC40D98C6039ADD56F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_AddOnAxisListener_m4155FA132B1D8D345B8E0A916049412919087DC3_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_AddOnChangeListener_m6237EE838A5DCF5554F66582A94676E1677882C2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_AddOnUpdateListener_m4FF9671C2A36838AE6540EB0AA147E1070E156EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_GetAxisDelta_mE450C143DCA1DA3593748C49F13A55DC5EDD55DE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_GetLastAxisDelta_m832E2D6B334522EB20BC2571B5C287B6888BE65B_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_GetLastAxis_mBDFD323C7FDCE109EDE4A3A8F7713FAF08A68466_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_RemoveOnActiveBindingChangeListener_m11F50D6606A3B231202E7D515BBE10A8966C04AC_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_RemoveOnActiveChangeListener_mE6A81267A982AF4F2ABF5959B44E4516DDE0568C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_RemoveOnAxisListener_m4C693DB70D179DCA4E2A96DA7AAA6802DBA69D02_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_RemoveOnChangeListener_m8A7A3A5D41982BE2C3C2339BA76BE273E1811477_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_RemoveOnUpdateListener_m07A534D20CE531C158C55A52E9890833AC928E94_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_Initialize_m19B01804BE3D508029178256FA59CAE7E0C663C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_Preinitialize_m87FA95C685A8CE7AF09A0200945376B06056A6EE_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_UpdateValue_m33E85789043F4C950EA13896E2EA2E737351BE88_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source__cctor_m596BE481DDFC3520E3FF84BBF43FA2AEFEAAB375_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source__ctor_m03FB42F617454AB8391E54E28CB798A5856D60C0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_add_onActiveBindingChange_m6187F6A9C25E278771AB9620CC3A622C2DA6B91C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_add_onActiveChange_m1F6680C2292E111DB5C646ACF18B915E97FCAD65_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_activeBinding_m1400EDE9F002640A152E2635925F6666EEC806AA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_activeOrigin_m6FDD59534C163B6AC7BBE49F4EA127761130FC5E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_active_m1A1995551D8574BB97828B82688B80ADEEBB3727_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_changed_m0DEF56E0E974A4A54A1B48147183089962ADD8D4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_lastActiveBinding_mE75BBB1B630DE00D561B4DFBD17CD656E0D3E350_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_lastActiveOrigin_m4D4DDECE23B149181AF0B67A534B43C5D456E1B9_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_lastActive_mC698067D49CFF214C0E3DFE2843561B40ED7F5D4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_lastAxis_m3BB3B19BEE34D02E4B2482059D7E7B5F3F752DAF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_lastChanged_m015B96344356A885CA454F8F71753FCB8E26BCEB_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_get_lastDelta_m4D35501771FFC7984A62619FEF732F456B8F4CFD_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_remove_onActiveBindingChange_mBCD97A3A9E5EF5A9D861D8540468DDA5347D386D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_remove_onActiveChange_m57429A6EDBB434A11FAD387C6A4FE3C1A87D45EF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_set_changed_m975DAD579B9F574DE2622AEE8F8B0FB0D483BB29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_set_lastActive_mF260D32E1A3743CE519A71245463E212BD5041B6_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_Source_set_lastChanged_m01F66502FD0C22144111B65AD8F92C766AF9D636_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m4DD9E6A600F937A3C391B083A236CC6669DE19E0_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m8223F5E473177BE4E4768121775790E88C42F37D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single__ctor_m27F8A10B2EE4474D28D1C208D06E13D74411C571_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_add_onActiveBindingChange_mA48443D7D4920B450EF8DEFE5F0C732290336F29_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_add_onActiveChange_m95961D3E9AB48A49EC3540D85FB6953C55208C4C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_add_onAxis_mA63E548682E754C613E2D7A015217E81D0F90A0E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_add_onChange_m0E181DD6C8A9E26A110E3B30EA0047B3F5731C9C_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_add_onUpdate_mC78D02D73CDE8B2C89CDC5A61F48489674435205_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_get_axis_m44519104AA50E7E5F50435818CD46866C7BF612D_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_get_delta_mF29B6CCFC6BAFE59C2A91CCEB61CB13134ACDADF_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_get_lastAxis_m1DCFA8843AE035E2889036BD29186D1561B42E2A_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_get_lastDelta_m9FC36C5747FA41CC68CE99E29A60D85FA7E17C33_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_remove_onActiveBindingChange_m9F6ACF548E2519654A83D71278031442FB05EE34_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_remove_onActiveChange_m22CEF366F030B5DB12818FEE553B97611CF9D1DA_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_remove_onAxis_m2DF4D424C0FF71247620FC539C1DF2D72986F4A8_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_remove_onChange_mB860B6CBC6D9A38CE3709BA007FFC24DE6C0DE86_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Single_remove_onUpdate_mB6CFF884E7A23B01E90F1B25276A64FC0F688A04_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeMethod* SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_RuntimeMethod_var;
IL2CPP_EXTERN_C const RuntimeType* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* StringBuilder_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* String_t_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38_0_0_0_var;
IL2CPP_EXTERN_C const RuntimeType* Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_0_0_0_var;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_m42B71B85E68FB4F1E70EDCF2DEF69CE9D075580C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mF13BFC1490F6D843023205C2EEE973E757334212_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ActiveChangeHandler_BeginInvoke_mFC1B005A218DD86C7DB84D83358426B04B271CB7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t AxisHandler_BeginInvoke_m2046E54809E6335910D833CADBA133D4EF372DC3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m09B25A03BB84C5879140989A4A010C59A6532C45_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_m28D5C9378486AB13DD81E132F3F4B64B3FE76BBE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ChangeHandler_BeginInvoke_mB7EF01CE8944172870E8000443000CEAADDC92CD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t DeviceConnectedChangeHandler_BeginInvoke_m573DE424C6A60F581F69ADBF44C63D647D2B8513_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFESteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateDownHandler_BeginInvoke_mAEDD2E6F9F121012F770B41A0083279507BDF27B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateHandler_BeginInvoke_m0AA9B5228B44CED761DB4135DD80C73CA3618F05_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t StateUpHandler_BeginInvoke_m23FCD385677F0DF1EB14760EC91C2DC602E30EBC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_Activate_m8C958814A91F7C665A0BFCAF67627BAAEC93B3AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_Deactivate_mE0A9AC1E44C88BE94147501C11CE88E193FCF627_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_FinishPreInitialize_m8C0EAC503979427BADE6B4BDC78F96FFD1313814_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_GetShortName_mDEEB621483F8E19D8AD132B2E0225CD2A2AF467D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_GetTimeLastChanged_m5ECECC1C5DE2077B835B5BD2F7BE0876638EEF8F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_Initialize_m0BE37476A9F4DCEA304B33032F3FABC598282A67_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_IsActive_mC6E31ADAB67DCCF82B2E27F64161BC66DC4DB25B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_PreInitialize_m87876D8B244F011424022EEC7ADF26A3BAD1E0B6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_ReadRawSetActive_m891E7459F99CA50296CDA3B125BFD30A5354E885_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_ReadRawSetLastChanged_m919EB49DF19CF40FE2656A04DD3426CEBAFDB17F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_ReadRawSetPriority_mED5DD82308639337336BB89EAD040FC46E0063C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data__ctor_m812A76A6EE69B1EC1169664FE8943FB654017719_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5BSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554ASteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937CSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6CSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68BSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7ASteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061DSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_usage_mC3F7B583669D0E55F049F3D1022FF1707ABCD75F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Equals_m33289198F04431CE9945A4B99A73206DE68F4110_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Equals_mFD436DEBDAA9D1FF4B19B80F16AB1F59D723D6B5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_FinishPreInitialize_m70B79F27A12FC273FC4F973BB36BC186FBC8364D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_GetHashCode_m9908CECA319994BE6D7C21E64B10472310E0B395_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_GetPath_mAF6DADB564441DA1A937E81E61A235008C75D124_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_GetShortName_mA622B5396AA3CB274F8290FD4C0DD1BF6504769E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_GetTimeLastChanged_mDE79600B7D30E830487C824CA58E5FDB6ADDDF91_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Initialize_m4C0A7CCA08EA428ECBA226CDCA56752D02F2C7EA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Manager_DisableAllActionSets_m12EB6122FBA645AB44644A2D46785CEBB3FB3B35_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Manager_GetSetFromHandle_m9F9E7D5DFFC04B5C8CBAAB15B6E9F75997B9C22D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Manager_Initialize_m5B739027E6B67DDDE636C29896058342FA235D7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Manager_UpdateActionSetsArray_m5B38E7C7984AA6B00A0D53678600DA349B88D4B3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Manager_UpdateActionStates_m6F0D76FF654C97F1700EBBB1D6E00A7FEBE426AF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Manager_UpdateDebugText_m650FC8288DEEC6717EAFD78F778D990DE023F14F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_Manager__cctor_mF9DD347E731DCED17050FA5DA5FBCCD90163C6E7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_PreInitialize_m12C2199310C3984FF48A7D8A4C598D1F3C68F87C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_ReadRawSetActive_m161B1A01E1A47E416D34A1221B95214693E51952_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_ReadRawSetLastChanged_m91B3EC744644009BCF35304756E9521931E0716B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_ReadRawSetPriority_m58E0F9561136FBE76C799447547C14C1C4FB8476_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_ShowBindingHints_mB909AC05EE8CDFDDC3378208BF53789A28508D7D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mBD177016456C229158B18513D6D42A73DC1D161D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m57517F475143B3FA3F8B76EFC37B2A8189882804_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet__ctor_m219C95976CE339EC6C3221895BB110986F1DC84B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_allActions_m62CE49140438A5C8B93840F945587E2BDCA22413_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_fullPath_m04E577C3FD515068729E2DB651CE8767995DC432_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_handle_m3C1592C47E16A579B14F77D84DE50B89BDB9405F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_nonVisualInActions_m4D86AC17F666B3ED42B07F2487F49982B60B16D9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_outActionArray_mC0550B0E6E1027097D6DD5D5876088959EF72072_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_poseActions_m53164D70956166FE1E44DE8C6D9B27C911DA167A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_skeletonActions_mAD34C5C7F47FD4FA7C97ED7DD80B1AC1D99009FD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_usage_mB535DF8D539763EE2D97E92829825879BFF6DCD2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_get_visualActions_m3FC0BF9AF969A8B1B8E3ABAEB9202915CEAD05F1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_op_Equality_mE7F907A29CA5B03F5449D3B017572D85A7D7667E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_AddOnActiveBindingChangeListener_m5910008B1E06400710E7124CF610CE6CF1C8BEF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_AddOnActiveChangeListener_mF32B5AFCCD10C1460B7C13697EEFF65E0EB61D23_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_AddOnChangeListener_mCF5FCD63EF55DD3723E4C650DA603AC5C6A0DDFD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_AddOnStateDownListener_m81FDDC6C1F9DD9B04DA9F701B68926379FCE9FD9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_AddOnStateUpListener_mF11EDC53EF1D2CB4FD87211B54A3505E9094887B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_AddOnUpdateListener_mECB6B8646EAC45266923098D9BAF539DF3D05C5C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_GetLastStateDown_mDF8F5659705B49C23F77CEB13884086AA05BD446_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_GetLastStateUp_mCD7A04FC288B34EFBC4597E2E6D7395CB7838D7B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_GetLastState_m5BCD65EBEC51B93D30C31C727CFB4958B5E02019_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_GetStateDown_m86915AC100687E07E0796D52FAB721DD30D5CDC6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_GetStateUp_m83F063805256AEBD01AFF9368025D9D5DDAE9457_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_GetState_m2D6400A61EA7E39E3ECE024B7542FFCEF1242908_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_RemoveOnActiveBindingChangeListener_m887837BCEA9D6F0E75AD281B4CC7ED02F28CA88A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_RemoveOnActiveChangeListener_m0A5E33C0D2C705EF74246AC6E2B10F34716D2E55_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_RemoveOnChangeListener_mCE6B6CA0C80E2C83C62305AC9A5181E0F9C8C033_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_RemoveOnStateDownListener_mD35F3C39B9080D819E483837F37513624601060E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_RemoveOnStateUpListener_mBDF4B15FB6844F70884083D81956A740670DA845_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_RemoveOnUpdateListener_mFDF8AC7BDE485488AD051616A88B15135A78B3B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_Initialize_mD35F8622AC0834DB1852656DA9F8EF3F740A2E6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_Map__ctor_mAAF780ED996AD99DCFC4B1E148A4AA7E419EEEFC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_Preinitialize_mE398BE018ADFDF3FD3BE8AEA0835F41D17C23AAD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_UpdateValue_m8B285B523C9A51B99909979E7AD647A1D36E8754_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source__cctor_m8822ACDFE8D4D06D68D64A938FEDDCCFCD8F9BA5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source__ctor_mDBC93FE6A1BDB4E3FCF081D526DE205DBEEA4604_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onActiveBindingChange_m3E749DFEECD4756269020C7159A8848C05503C7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onActiveChange_m7E094E7B60FD19A1F34DDD37589C37878DB6F636_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_activeBinding_mCD6C653E26B9C2E6B6712A37D2CD6724EAF745CB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_activeOrigin_mAAA82EC4C6BC594A5C5B0BAB5AD8F35CCE4F3322_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_active_mC72D03F26731C6193A7CF3CC589A5975F59293E2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_changed_m54D495C9FD36559978602102646A286CFDD39AEB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_lastActiveBinding_mB22A66B79AA1D726B31ECEDB7A6ED94CB9CA84B5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_lastActiveOrigin_m28B22A1100F371F273B4840367B2FA6865976799_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_lastActive_m6D694E7B47E3C0915A50F91098D251F430F150A6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_lastChanged_mBF64A8A0A5779C3C2E10056F777459E86230C906_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_lastStateDown_mC33753F4A4DB7BF33BF0727E0B441D556EF9FE96_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_lastStateUp_mECCC96AB8645D1EA185DCCA78478B47850850276_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_lastState_m3738D53D87B67856DCF3E6C32DB0A4DF72B828DD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_m2FBB2D79C11CDAD80D58D3558DAA55377F7FC42F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onActiveChange_m929F8C0D16D3EB930B80201ED30C2B06ABB153E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_set_changed_m1CB090872A0E6E8356D1DCD5507335D3A6D42B92_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_set_lastActive_mF553E65B29771B7ED438601E55DF6FA7986A51EF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_Source_set_lastChanged_mAE8A94856F9C04264EEEA2B6F1A6C03F683EFEEA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m5E920BA13AE0EF0BDE92264615FB690CF0A5AE66_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m50DEA2A00F7179CA460458CCE26547855C3F852E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean__ctor_m0E0938333888A2EBC06EB368DC37BC4686F8093B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_add_onActiveBindingChange_mBDBB80F0FD7810164E27701BDA5E1798B4554788_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_add_onActiveChange_m1E2FA167B7AC342D02F27E15C5F3074AFD3C3CE3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_add_onChange_m7B0D49054E855F76E3B6CC0A275AAD0C183B891C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_add_onStateDown_m1A5D1FF097F7C411A428C347BAD0CD4BE14A8F7B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_add_onStateUp_m784A9D29CD9EE31E8FA28BCA458ED59C4A989B75_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_add_onState_m15FBFBFCB8B0E902475BC583C34C6B34CED020BE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_add_onUpdate_m6D5FF31323BDD55FEDCB493F233A1FB08ACA4B48_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_get_lastStateDown_m63B05087D4E2131C2438AEC60F1BE63932C7BC00_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_get_lastStateUp_m4FB0D1BA1D24D0A1CDB00C49A447FBE37BEE28CB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_get_lastState_m70E82A3A7FA8B736966EC95CCF9128DABC1090BC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_get_stateDown_m4178138E7D39243E86ECADD56416A31E902B24BA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_get_stateUp_mDC96596EA265A6EB09F69F68E62E7A6D032EF433_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_get_state_m6B3B4CD7594ABBFCD9DF45FDEDAD47DE27873FD9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_remove_onActiveBindingChange_m1B9E622090040B4B45F15A9A414C96363D7F6FE8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_remove_onActiveChange_mAFBBAE5B2ED269DE18C06DBC9197AC826C0BB6FD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_remove_onChange_m1C931656596969E280B81F6A8BBAFAF82615E5F7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_remove_onStateDown_m4583281E4E97D5357C1BD28558EFDC7C41B7CC7E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_remove_onStateUp_m68A919C2D693F81D12ACCB7769B179C6D83B4A00_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_remove_onState_m7FFCE1D294F192CAA994986A467891829A777433_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Boolean_remove_onUpdate_m9764ED6836A812B8C6FDF052FDE77702EBB31DC3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_GetLocalizedOriginPart_m8A1FC7BEF4660C4D7D7573EE13F399C76D325938_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_GetLocalizedOrigin_m3F7940786DFA6BAC3C618A67EA65C503E585D9CC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source__cctor_m36E304B105D4788BDC6EB9B808AE5147F2F1E91F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_activeDevice_m889780B67CDEDA524D6D5B264228DF2598AC3ED7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_changedTime_m55B868F934C945AF841AD79C7418EE75F54B9319_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_isUpdating_m85A55DF822095397B0032B8627D56ABA9F1F0A60_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264ASteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_localizedOriginName_mDC95A0FF89C4C7DC1DE3C14CB77709E74A0F5508_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_renderModelComponentName_mC1CB2C1D9A4CC549A42F33229CA0A897918DC116_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DASteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_set_isUpdating_m907328DCCD2733DA877A4914FCEEAA08BF4527EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnActiveChangeListener_mBBBEE095B66D0EF219F53B0FC4B6A229D1D8332D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnChangeListener_mE2A71EBE8C1F94A46CA2C4FC318926B5DF779678_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnDeviceConnectedChanged_m80082F78AEA2CBCAB4DCB78A8CD9CBB274846209_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnTrackingChanged_m05560B3FD5E3B66303CE4B8A9652A450C0A89D55_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnUpdateListener_m7AC52C7B2731C86A35B684D8061A40DCEEF1DF37_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_AddOnValidPoseChanged_m6EDFA42DACF408A48A96BFB2E949BEE84119D9CA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnActiveChangeListener_m69ECF77A80ADF89DD301AF65324001517F00DC3E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnChangeListener_m521DDEC9E3616B72746F67EAEC417D87268265F8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnDeviceConnectedChanged_m364AA5B2A2F44F0E1135422C18F886038F4134E9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnTrackingChanged_m275E06D55C0CEA46D0A8B8C1223D082C9EB739EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnUpdateListener_m3EAE0FCC4813C60A464C863BAD05906A8DAD4157_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_RemoveOnValidPoseChanged_m6619193D1BA39DEB98C872B29CA28BA7FA64F98A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_SetTrackingUniverseOrigin_m4B3FEF00455AAC74A5D52CB5247CDB351BD85122_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_CheckAndSendEvents_m3A6C265E2B9EAB93C11B8AD1A8A23006A77920A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetChanged_mDCF9B89311A87C0C4E58E86E4D87002F8DEFF8E5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_m139061D3915BC3462FBEA4CBFCB3BD8DDB7FF4C7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m64A302D834078EB5F852E2454736416EFAA6094D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m170A3FFF941B012949E57D5DA611B896170AD4BD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_Initialize_mE07A70E1AF9A3257AFD2BB0C4FA228D748F88B43_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_Preinitialize_m9D4858F6CD07854B44FEABF972A396AD52BF2979_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_SetCacheVariables_m0BC40967351405886DCA503AC1DB8D0FEE51E51E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_UpdateTransform_m83614007AB0B80DB53701A76344CCDFCF92CC730_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_UpdateValue_m391570D77BB5CE3B0082C689A0D7AEE5AC0CC5CE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_UpdateValue_mD4FCEA491C3040D805773739C9A00420DB876447_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source__cctor_mB91677EC6687DBEACF312A80A30E464B6A53DAFB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source__ctor_mADDAC326C7500D82492B45F896F5F57C4B60D880_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onActiveBindingChange_m2CCB91E08B318C4D6A45A8356BBAA73BC9831580_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onActiveChange_m6C3297DBA3E2608BE985FA75EE8D46EAC5C792B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_add_onValidPoseChanged_m35C4DDEF19BCA4F9606F36E545FF6D39461DF637_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_activeBinding_mC4796E57EDF00116563A0D70474F55E457E2C223_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_activeOrigin_mD4B10DF73C4B47C672FF81DEE758BA87AD48E384_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_active_m4D9B8F64C7DCCC89A18264EA3CCAB388FE46A7B2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_changed_m8E77CE07064415FB25C71536050FA78CC9A712D7_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastActiveBinding_m318C41747487845418710A9C551548A08F51F5C6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastActiveOrigin_m7C47B89C0F4A75F118BC894A63D1722BA5E15802_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastActive_m0B8F257126F8B3654DF9C06DA32FC81D60619D5C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55FSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastChanged_m5F4A93F1CE0B35353814569A5D3E678B2EB33A57_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2ASteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BFSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m800A450B68164A69677E890066A3C6CE0B59BD15_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onActiveChange_m0D6A09A4D2599E4EECF2460CF2A3B7466BC0B739_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_remove_onValidPoseChanged_m30DDDE1F913F495779B5369059C11D07D18A8749_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088ESteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_changed_m60BCF947C4C21E9B0EEECB47939451CE961CB88D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastActive_m1C75FF7AD28E6E3E7688BBC0090225405738B2C4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastChanged_m03E860AEEB41776E285FCBAA8ACA87982C4C525B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FDSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44DSteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m12CF0CC15BB991562407D6C483B7570F5BE4AA1D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m22BDD78F639B413C506505CD777EFEC3ED51FC15_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose__ctor_m6CC3B700F655C32E13184306C5A1A021AA3D7C5F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onActiveBindingChange_m4E51D8BA780E1CD094EA1D5F9D268147ED655C3A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onActiveChange_m2C9460C4B684E83B5E42E964A1248F7A1502E619_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onChange_mFB47B69DF9CCD9457EED2CDC3BA02ECD5319C8A4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onDeviceConnectedChanged_m52B59F6B261F37924D761281073948E423B6C935_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onTrackingChanged_m173F94A21080D3BFB441E77226685BDDB028E094_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onUpdate_m9D1B219D37CA69D76CB0BC892B25EA535D74EE52_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_add_onValidPoseChanged_m6B627239BB39BE78A8FCD289EF78C285D437E959_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onActiveBindingChange_m1251EBFEF53A76139F9DC74AD1C57B5279A0BFAB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onActiveChange_m4893657BF47B36BA49B49EF674AA405D56DBAD36_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onChange_m572391872A10026D1F3A893109200E1D8CFBFF68_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onDeviceConnectedChanged_m663D3DE49E146E4EE2A5D21E1ECAAB27883E257A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onTrackingChanged_m2E8165405E4A93E6A72DE9EE8DD1A11027A4A185_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onUpdate_m0611D358B7BAEC00E1F2FDF0D2307DCDB0E04071_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Pose_remove_onValidPoseChanged_mFFD4D9D7B0C1E4F143E06F2245A509F4BC557D85_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnActiveBindingChangeListener_mC470F870182CEDDF291595E2B0ACDBEB0A34D47C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnActiveChangeListener_m3423FDCE1372AFA80166AFEC40D98C6039ADD56F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnAxisListener_m4155FA132B1D8D345B8E0A916049412919087DC3_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnChangeListener_m6237EE838A5DCF5554F66582A94676E1677882C2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_AddOnUpdateListener_m4FF9671C2A36838AE6540EB0AA147E1070E156EF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_GetAxisDelta_mE450C143DCA1DA3593748C49F13A55DC5EDD55DE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_GetLastAxisDelta_m832E2D6B334522EB20BC2571B5C287B6888BE65B_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_GetLastAxis_mBDFD323C7FDCE109EDE4A3A8F7713FAF08A68466_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnActiveBindingChangeListener_m11F50D6606A3B231202E7D515BBE10A8966C04AC_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnActiveChangeListener_mE6A81267A982AF4F2ABF5959B44E4516DDE0568C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnAxisListener_m4C693DB70D179DCA4E2A96DA7AAA6802DBA69D02_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnChangeListener_m8A7A3A5D41982BE2C3C2339BA76BE273E1811477_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_RemoveOnUpdateListener_m07A534D20CE531C158C55A52E9890833AC928E94_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_Initialize_m19B01804BE3D508029178256FA59CAE7E0C663C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_Preinitialize_m87FA95C685A8CE7AF09A0200945376B06056A6EE_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_UpdateValue_m33E85789043F4C950EA13896E2EA2E737351BE88_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source__cctor_m596BE481DDFC3520E3FF84BBF43FA2AEFEAAB375_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source__ctor_m03FB42F617454AB8391E54E28CB798A5856D60C0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onActiveBindingChange_m6187F6A9C25E278771AB9620CC3A622C2DA6B91C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onActiveChange_m1F6680C2292E111DB5C646ACF18B915E97FCAD65_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_activeBinding_m1400EDE9F002640A152E2635925F6666EEC806AA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_activeOrigin_m6FDD59534C163B6AC7BBE49F4EA127761130FC5E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_active_m1A1995551D8574BB97828B82688B80ADEEBB3727_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_changed_m0DEF56E0E974A4A54A1B48147183089962ADD8D4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_lastActiveBinding_mE75BBB1B630DE00D561B4DFBD17CD656E0D3E350_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_lastActiveOrigin_m4D4DDECE23B149181AF0B67A534B43C5D456E1B9_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_lastActive_mC698067D49CFF214C0E3DFE2843561B40ED7F5D4_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_lastAxis_m3BB3B19BEE34D02E4B2482059D7E7B5F3F752DAF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_lastChanged_m015B96344356A885CA454F8F71753FCB8E26BCEB_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_get_lastDelta_m4D35501771FFC7984A62619FEF732F456B8F4CFD_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onActiveBindingChange_mBCD97A3A9E5EF5A9D861D8540468DDA5347D386D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onActiveChange_m57429A6EDBB434A11FAD387C6A4FE3C1A87D45EF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_set_changed_m975DAD579B9F574DE2622AEE8F8B0FB0D483BB29_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_set_lastActive_mF260D32E1A3743CE519A71245463E212BD5041B6_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_Source_set_lastChanged_m01F66502FD0C22144111B65AD8F92C766AF9D636_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m4DD9E6A600F937A3C391B083A236CC6669DE19E0_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m8223F5E473177BE4E4768121775790E88C42F37D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single__ctor_m27F8A10B2EE4474D28D1C208D06E13D74411C571_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onActiveBindingChange_mA48443D7D4920B450EF8DEFE5F0C732290336F29_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onActiveChange_m95961D3E9AB48A49EC3540D85FB6953C55208C4C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onAxis_mA63E548682E754C613E2D7A015217E81D0F90A0E_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onChange_m0E181DD6C8A9E26A110E3B30EA0047B3F5731C9C_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_add_onUpdate_mC78D02D73CDE8B2C89CDC5A61F48489674435205_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_get_axis_m44519104AA50E7E5F50435818CD46866C7BF612D_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_get_delta_mF29B6CCFC6BAFE59C2A91CCEB61CB13134ACDADF_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_get_lastAxis_m1DCFA8843AE035E2889036BD29186D1561B42E2A_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_get_lastDelta_m9FC36C5747FA41CC68CE99E29A60D85FA7E17C33_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onActiveBindingChange_m9F6ACF548E2519654A83D71278031442FB05EE34_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onActiveChange_m22CEF366F030B5DB12818FEE553B97611CF9D1DA_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onAxis_m2DF4D424C0FF71247620FC539C1DF2D72986F4A8_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onChange_mB860B6CBC6D9A38CE3709BA007FFC24DE6C0DE86_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Single_remove_onUpdate_mB6CFF884E7A23B01E90F1B25276A64FC0F688A04_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4SteamVR10_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t TrackingChangeHandler_BeginInvoke_mA9B9D225C9CE967D4F1BE98FC861BACDCA083038_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_m240FEE9478B708A9992CB332DD40867A109DDA19_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_mD6B2EC8E0B4A8360088DFD875E33F74ECB890A40_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t UpdateHandler_BeginInvoke_mFC754024692F24E0BA7233998ED5FC996472F471_MetadataUsageId;
IL2CPP_EXTERN_C const uint32_t ValidPoseChangeHandler_BeginInvoke_mBC72D5D31D1AC1747015DB931A8E3A7A449B9A51_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;

struct BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83;
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5;
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E;
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511;
struct ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B;
struct ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9;
struct SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA;
struct SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB;
struct SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968;
struct SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56;
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A;
struct VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5;

IL2CPP_EXTERN_C_BEGIN
IL2CPP_EXTERN_C_END

#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

struct Il2CppArrayBounds;

// System.Array


// System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_In>
struct  List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039, ____items_1)); }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* get__items_1() const { return ____items_1; }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039_StaticFields, ____emptyArray_5)); }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* get__emptyArray_5() const { return ____emptyArray_5; }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_Out>
struct  List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00, ____items_1)); }
	inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* get__items_1() const { return ____items_1; }
	inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00_StaticFields, ____emptyArray_5)); }
	inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* get__emptyArray_5() const { return ____emptyArray_5; }
	inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<Valve.VR.SteamVR_Action>
struct  List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E, ____items_1)); }
	inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* get__items_1() const { return ____items_1; }
	inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E_StaticFields, ____emptyArray_5)); }
	inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* get__emptyArray_5() const { return ____emptyArray_5; }
	inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Pose>
struct  List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D, ____items_1)); }
	inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* get__items_1() const { return ____items_1; }
	inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D_StaticFields, ____emptyArray_5)); }
	inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* get__emptyArray_5() const { return ____emptyArray_5; }
	inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Skeleton>
struct  List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE, ____items_1)); }
	inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* get__items_1() const { return ____items_1; }
	inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE_StaticFields, ____emptyArray_5)); }
	inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* get__emptyArray_5() const { return ____emptyArray_5; }
	inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>
struct  List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA  : public RuntimeObject
{
public:
	// T[] System.Collections.Generic.List`1::_items
	VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* ____items_1;
	// System.Int32 System.Collections.Generic.List`1::_size
	int32_t ____size_2;
	// System.Int32 System.Collections.Generic.List`1::_version
	int32_t ____version_3;
	// System.Object System.Collections.Generic.List`1::_syncRoot
	RuntimeObject * ____syncRoot_4;

public:
	inline static int32_t get_offset_of__items_1() { return static_cast<int32_t>(offsetof(List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA, ____items_1)); }
	inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* get__items_1() const { return ____items_1; }
	inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5** get_address_of__items_1() { return &____items_1; }
	inline void set__items_1(VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* value)
	{
		____items_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____items_1), (void*)value);
	}

	inline static int32_t get_offset_of__size_2() { return static_cast<int32_t>(offsetof(List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA, ____size_2)); }
	inline int32_t get__size_2() const { return ____size_2; }
	inline int32_t* get_address_of__size_2() { return &____size_2; }
	inline void set__size_2(int32_t value)
	{
		____size_2 = value;
	}

	inline static int32_t get_offset_of__version_3() { return static_cast<int32_t>(offsetof(List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA, ____version_3)); }
	inline int32_t get__version_3() const { return ____version_3; }
	inline int32_t* get_address_of__version_3() { return &____version_3; }
	inline void set__version_3(int32_t value)
	{
		____version_3 = value;
	}

	inline static int32_t get_offset_of__syncRoot_4() { return static_cast<int32_t>(offsetof(List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA, ____syncRoot_4)); }
	inline RuntimeObject * get__syncRoot_4() const { return ____syncRoot_4; }
	inline RuntimeObject ** get_address_of__syncRoot_4() { return &____syncRoot_4; }
	inline void set__syncRoot_4(RuntimeObject * value)
	{
		____syncRoot_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____syncRoot_4), (void*)value);
	}
};

struct List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA_StaticFields
{
public:
	// T[] System.Collections.Generic.List`1::_emptyArray
	VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* ____emptyArray_5;

public:
	inline static int32_t get_offset_of__emptyArray_5() { return static_cast<int32_t>(offsetof(List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA_StaticFields, ____emptyArray_5)); }
	inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* get__emptyArray_5() const { return ____emptyArray_5; }
	inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5** get_address_of__emptyArray_5() { return &____emptyArray_5; }
	inline void set__emptyArray_5(VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* value)
	{
		____emptyArray_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____emptyArray_5), (void*)value);
	}
};


// System.Reflection.MemberInfo
struct  MemberInfo_t  : public RuntimeObject
{
public:

public:
};


// System.String
struct  String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Empty_5), (void*)value);
	}
};


// System.Text.StringBuilder
struct  StringBuilder_t  : public RuntimeObject
{
public:
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t * ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;

public:
	inline static int32_t get_offset_of_m_ChunkChars_0() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkChars_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_m_ChunkChars_0() const { return ___m_ChunkChars_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_m_ChunkChars_0() { return &___m_ChunkChars_0; }
	inline void set_m_ChunkChars_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___m_ChunkChars_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkChars_0), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkPrevious_1() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkPrevious_1)); }
	inline StringBuilder_t * get_m_ChunkPrevious_1() const { return ___m_ChunkPrevious_1; }
	inline StringBuilder_t ** get_address_of_m_ChunkPrevious_1() { return &___m_ChunkPrevious_1; }
	inline void set_m_ChunkPrevious_1(StringBuilder_t * value)
	{
		___m_ChunkPrevious_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_ChunkPrevious_1), (void*)value);
	}

	inline static int32_t get_offset_of_m_ChunkLength_2() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkLength_2)); }
	inline int32_t get_m_ChunkLength_2() const { return ___m_ChunkLength_2; }
	inline int32_t* get_address_of_m_ChunkLength_2() { return &___m_ChunkLength_2; }
	inline void set_m_ChunkLength_2(int32_t value)
	{
		___m_ChunkLength_2 = value;
	}

	inline static int32_t get_offset_of_m_ChunkOffset_3() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkOffset_3)); }
	inline int32_t get_m_ChunkOffset_3() const { return ___m_ChunkOffset_3; }
	inline int32_t* get_address_of_m_ChunkOffset_3() { return &___m_ChunkOffset_3; }
	inline void set_m_ChunkOffset_3(int32_t value)
	{
		___m_ChunkOffset_3 = value;
	}

	inline static int32_t get_offset_of_m_MaxCapacity_4() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_MaxCapacity_4)); }
	inline int32_t get_m_MaxCapacity_4() const { return ___m_MaxCapacity_4; }
	inline int32_t* get_address_of_m_MaxCapacity_4() { return &___m_MaxCapacity_4; }
	inline void set_m_MaxCapacity_4(int32_t value)
	{
		___m_MaxCapacity_4 = value;
	}
};


// System.ValueType
struct  ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};

// Valve.VR.SteamVR_Action
struct  SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action::actionPath
	String_t* ___actionPath_0;
	// System.Boolean Valve.VR.SteamVR_Action::needsReinit
	bool ___needsReinit_1;
	// System.String Valve.VR.SteamVR_Action::cachedShortName
	String_t* ___cachedShortName_3;

public:
	inline static int32_t get_offset_of_actionPath_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___actionPath_0)); }
	inline String_t* get_actionPath_0() const { return ___actionPath_0; }
	inline String_t** get_address_of_actionPath_0() { return &___actionPath_0; }
	inline void set_actionPath_0(String_t* value)
	{
		___actionPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_needsReinit_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___needsReinit_1)); }
	inline bool get_needsReinit_1() const { return ___needsReinit_1; }
	inline bool* get_address_of_needsReinit_1() { return &___needsReinit_1; }
	inline void set_needsReinit_1(bool value)
	{
		___needsReinit_1 = value;
	}

	inline static int32_t get_offset_of_cachedShortName_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734, ___cachedShortName_3)); }
	inline String_t* get_cachedShortName_3() const { return ___cachedShortName_3; }
	inline String_t** get_address_of_cachedShortName_3() { return &___cachedShortName_3; }
	inline void set_cachedShortName_3(String_t* value)
	{
		___cachedShortName_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cachedShortName_3), (void*)value);
	}
};

struct SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Action::startUpdatingSourceOnAccess
	bool ___startUpdatingSourceOnAccess_2;

public:
	inline static int32_t get_offset_of_startUpdatingSourceOnAccess_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734_StaticFields, ___startUpdatingSourceOnAccess_2)); }
	inline bool get_startUpdatingSourceOnAccess_2() const { return ___startUpdatingSourceOnAccess_2; }
	inline bool* get_address_of_startUpdatingSourceOnAccess_2() { return &___startUpdatingSourceOnAccess_2; }
	inline void set_startUpdatingSourceOnAccess_2(bool value)
	{
		___startUpdatingSourceOnAccess_2 = value;
	}
};


// Valve.VR.SteamVR_ActionSet
struct  SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_ActionSet::actionSetPath
	String_t* ___actionSetPath_0;
	// Valve.VR.SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet::setData
	SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * ___setData_1;
	// System.Boolean Valve.VR.SteamVR_ActionSet::initialized
	bool ___initialized_2;

public:
	inline static int32_t get_offset_of_actionSetPath_0() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___actionSetPath_0)); }
	inline String_t* get_actionSetPath_0() const { return ___actionSetPath_0; }
	inline String_t** get_address_of_actionSetPath_0() { return &___actionSetPath_0; }
	inline void set_actionSetPath_0(String_t* value)
	{
		___actionSetPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_setData_1() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___setData_1)); }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * get_setData_1() const { return ___setData_1; }
	inline SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 ** get_address_of_setData_1() { return &___setData_1; }
	inline void set_setData_1(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * value)
	{
		___setData_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setData_1), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_2() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6, ___initialized_2)); }
	inline bool get_initialized_2() const { return ___initialized_2; }
	inline bool* get_address_of_initialized_2() { return &___initialized_2; }
	inline void set_initialized_2(bool value)
	{
		___initialized_2 = value;
	}
};


// Valve.VR.SteamVR_ActionSet_Data
struct  SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529  : public RuntimeObject
{
public:
	// Valve.VR.SteamVR_Action[] Valve.VR.SteamVR_ActionSet_Data::<allActions>k__BackingField
	SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* ___U3CallActionsU3Ek__BackingField_0;
	// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_ActionSet_Data::<nonVisualInActions>k__BackingField
	ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___U3CnonVisualInActionsU3Ek__BackingField_1;
	// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_ActionSet_Data::<visualActions>k__BackingField
	ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___U3CvisualActionsU3Ek__BackingField_2;
	// Valve.VR.SteamVR_Action_Pose[] Valve.VR.SteamVR_ActionSet_Data::<poseActions>k__BackingField
	SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* ___U3CposeActionsU3Ek__BackingField_3;
	// Valve.VR.SteamVR_Action_Skeleton[] Valve.VR.SteamVR_ActionSet_Data::<skeletonActions>k__BackingField
	SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* ___U3CskeletonActionsU3Ek__BackingField_4;
	// Valve.VR.ISteamVR_Action_Out[] Valve.VR.SteamVR_ActionSet_Data::<outActionArray>k__BackingField
	ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* ___U3CoutActionArrayU3Ek__BackingField_5;
	// System.String Valve.VR.SteamVR_ActionSet_Data::<fullPath>k__BackingField
	String_t* ___U3CfullPathU3Ek__BackingField_6;
	// System.String Valve.VR.SteamVR_ActionSet_Data::<usage>k__BackingField
	String_t* ___U3CusageU3Ek__BackingField_7;
	// System.UInt64 Valve.VR.SteamVR_ActionSet_Data::<handle>k__BackingField
	uint64_t ___U3ChandleU3Ek__BackingField_8;
	// System.Boolean[] Valve.VR.SteamVR_ActionSet_Data::rawSetActive
	BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* ___rawSetActive_9;
	// System.Single[] Valve.VR.SteamVR_ActionSet_Data::rawSetLastChanged
	SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* ___rawSetLastChanged_10;
	// System.Int32[] Valve.VR.SteamVR_ActionSet_Data::rawSetPriority
	Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* ___rawSetPriority_11;
	// System.Boolean Valve.VR.SteamVR_ActionSet_Data::initialized
	bool ___initialized_12;
	// System.String Valve.VR.SteamVR_ActionSet_Data::cachedShortName
	String_t* ___cachedShortName_13;

public:
	inline static int32_t get_offset_of_U3CallActionsU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3CallActionsU3Ek__BackingField_0)); }
	inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* get_U3CallActionsU3Ek__BackingField_0() const { return ___U3CallActionsU3Ek__BackingField_0; }
	inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB** get_address_of_U3CallActionsU3Ek__BackingField_0() { return &___U3CallActionsU3Ek__BackingField_0; }
	inline void set_U3CallActionsU3Ek__BackingField_0(SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* value)
	{
		___U3CallActionsU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CallActionsU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3CnonVisualInActionsU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3CnonVisualInActionsU3Ek__BackingField_1)); }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* get_U3CnonVisualInActionsU3Ek__BackingField_1() const { return ___U3CnonVisualInActionsU3Ek__BackingField_1; }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B** get_address_of_U3CnonVisualInActionsU3Ek__BackingField_1() { return &___U3CnonVisualInActionsU3Ek__BackingField_1; }
	inline void set_U3CnonVisualInActionsU3Ek__BackingField_1(ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* value)
	{
		___U3CnonVisualInActionsU3Ek__BackingField_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CnonVisualInActionsU3Ek__BackingField_1), (void*)value);
	}

	inline static int32_t get_offset_of_U3CvisualActionsU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3CvisualActionsU3Ek__BackingField_2)); }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* get_U3CvisualActionsU3Ek__BackingField_2() const { return ___U3CvisualActionsU3Ek__BackingField_2; }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B** get_address_of_U3CvisualActionsU3Ek__BackingField_2() { return &___U3CvisualActionsU3Ek__BackingField_2; }
	inline void set_U3CvisualActionsU3Ek__BackingField_2(ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* value)
	{
		___U3CvisualActionsU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CvisualActionsU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CposeActionsU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3CposeActionsU3Ek__BackingField_3)); }
	inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* get_U3CposeActionsU3Ek__BackingField_3() const { return ___U3CposeActionsU3Ek__BackingField_3; }
	inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968** get_address_of_U3CposeActionsU3Ek__BackingField_3() { return &___U3CposeActionsU3Ek__BackingField_3; }
	inline void set_U3CposeActionsU3Ek__BackingField_3(SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* value)
	{
		___U3CposeActionsU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CposeActionsU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CskeletonActionsU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3CskeletonActionsU3Ek__BackingField_4)); }
	inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* get_U3CskeletonActionsU3Ek__BackingField_4() const { return ___U3CskeletonActionsU3Ek__BackingField_4; }
	inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56** get_address_of_U3CskeletonActionsU3Ek__BackingField_4() { return &___U3CskeletonActionsU3Ek__BackingField_4; }
	inline void set_U3CskeletonActionsU3Ek__BackingField_4(SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* value)
	{
		___U3CskeletonActionsU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CskeletonActionsU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CoutActionArrayU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3CoutActionArrayU3Ek__BackingField_5)); }
	inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* get_U3CoutActionArrayU3Ek__BackingField_5() const { return ___U3CoutActionArrayU3Ek__BackingField_5; }
	inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9** get_address_of_U3CoutActionArrayU3Ek__BackingField_5() { return &___U3CoutActionArrayU3Ek__BackingField_5; }
	inline void set_U3CoutActionArrayU3Ek__BackingField_5(ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* value)
	{
		___U3CoutActionArrayU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CoutActionArrayU3Ek__BackingField_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CfullPathU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3CfullPathU3Ek__BackingField_6)); }
	inline String_t* get_U3CfullPathU3Ek__BackingField_6() const { return ___U3CfullPathU3Ek__BackingField_6; }
	inline String_t** get_address_of_U3CfullPathU3Ek__BackingField_6() { return &___U3CfullPathU3Ek__BackingField_6; }
	inline void set_U3CfullPathU3Ek__BackingField_6(String_t* value)
	{
		___U3CfullPathU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfullPathU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CusageU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3CusageU3Ek__BackingField_7)); }
	inline String_t* get_U3CusageU3Ek__BackingField_7() const { return ___U3CusageU3Ek__BackingField_7; }
	inline String_t** get_address_of_U3CusageU3Ek__BackingField_7() { return &___U3CusageU3Ek__BackingField_7; }
	inline void set_U3CusageU3Ek__BackingField_7(String_t* value)
	{
		___U3CusageU3Ek__BackingField_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CusageU3Ek__BackingField_7), (void*)value);
	}

	inline static int32_t get_offset_of_U3ChandleU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___U3ChandleU3Ek__BackingField_8)); }
	inline uint64_t get_U3ChandleU3Ek__BackingField_8() const { return ___U3ChandleU3Ek__BackingField_8; }
	inline uint64_t* get_address_of_U3ChandleU3Ek__BackingField_8() { return &___U3ChandleU3Ek__BackingField_8; }
	inline void set_U3ChandleU3Ek__BackingField_8(uint64_t value)
	{
		___U3ChandleU3Ek__BackingField_8 = value;
	}

	inline static int32_t get_offset_of_rawSetActive_9() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___rawSetActive_9)); }
	inline BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* get_rawSetActive_9() const { return ___rawSetActive_9; }
	inline BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040** get_address_of_rawSetActive_9() { return &___rawSetActive_9; }
	inline void set_rawSetActive_9(BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* value)
	{
		___rawSetActive_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rawSetActive_9), (void*)value);
	}

	inline static int32_t get_offset_of_rawSetLastChanged_10() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___rawSetLastChanged_10)); }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* get_rawSetLastChanged_10() const { return ___rawSetLastChanged_10; }
	inline SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5** get_address_of_rawSetLastChanged_10() { return &___rawSetLastChanged_10; }
	inline void set_rawSetLastChanged_10(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* value)
	{
		___rawSetLastChanged_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rawSetLastChanged_10), (void*)value);
	}

	inline static int32_t get_offset_of_rawSetPriority_11() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___rawSetPriority_11)); }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* get_rawSetPriority_11() const { return ___rawSetPriority_11; }
	inline Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83** get_address_of_rawSetPriority_11() { return &___rawSetPriority_11; }
	inline void set_rawSetPriority_11(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* value)
	{
		___rawSetPriority_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rawSetPriority_11), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_12() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___initialized_12)); }
	inline bool get_initialized_12() const { return ___initialized_12; }
	inline bool* get_address_of_initialized_12() { return &___initialized_12; }
	inline void set_initialized_12(bool value)
	{
		___initialized_12 = value;
	}

	inline static int32_t get_offset_of_cachedShortName_13() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529, ___cachedShortName_13)); }
	inline String_t* get_cachedShortName_13() const { return ___cachedShortName_13; }
	inline String_t** get_address_of_cachedShortName_13() { return &___cachedShortName_13; }
	inline void set_cachedShortName_13(String_t* value)
	{
		___cachedShortName_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___cachedShortName_13), (void*)value);
	}
};


// Valve.VR.SteamVR_ActionSet_Manager
struct  SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB  : public RuntimeObject
{
public:

public:
};

struct SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields
{
public:
	// Valve.VR.VRActiveActionSet_t[] Valve.VR.SteamVR_ActionSet_Manager::rawActiveActionSetArray
	VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* ___rawActiveActionSetArray_0;
	// System.UInt32 Valve.VR.SteamVR_ActionSet_Manager::activeActionSetSize
	uint32_t ___activeActionSetSize_1;
	// System.Boolean Valve.VR.SteamVR_ActionSet_Manager::changed
	bool ___changed_2;
	// System.Int32 Valve.VR.SteamVR_ActionSet_Manager::lastFrameUpdated
	int32_t ___lastFrameUpdated_3;
	// System.String Valve.VR.SteamVR_ActionSet_Manager::debugActiveSetListText
	String_t* ___debugActiveSetListText_4;
	// System.Boolean Valve.VR.SteamVR_ActionSet_Manager::updateDebugTextInBuilds
	bool ___updateDebugTextInBuilds_5;

public:
	inline static int32_t get_offset_of_rawActiveActionSetArray_0() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields, ___rawActiveActionSetArray_0)); }
	inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* get_rawActiveActionSetArray_0() const { return ___rawActiveActionSetArray_0; }
	inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5** get_address_of_rawActiveActionSetArray_0() { return &___rawActiveActionSetArray_0; }
	inline void set_rawActiveActionSetArray_0(VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* value)
	{
		___rawActiveActionSetArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___rawActiveActionSetArray_0), (void*)value);
	}

	inline static int32_t get_offset_of_activeActionSetSize_1() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields, ___activeActionSetSize_1)); }
	inline uint32_t get_activeActionSetSize_1() const { return ___activeActionSetSize_1; }
	inline uint32_t* get_address_of_activeActionSetSize_1() { return &___activeActionSetSize_1; }
	inline void set_activeActionSetSize_1(uint32_t value)
	{
		___activeActionSetSize_1 = value;
	}

	inline static int32_t get_offset_of_changed_2() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields, ___changed_2)); }
	inline bool get_changed_2() const { return ___changed_2; }
	inline bool* get_address_of_changed_2() { return &___changed_2; }
	inline void set_changed_2(bool value)
	{
		___changed_2 = value;
	}

	inline static int32_t get_offset_of_lastFrameUpdated_3() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields, ___lastFrameUpdated_3)); }
	inline int32_t get_lastFrameUpdated_3() const { return ___lastFrameUpdated_3; }
	inline int32_t* get_address_of_lastFrameUpdated_3() { return &___lastFrameUpdated_3; }
	inline void set_lastFrameUpdated_3(int32_t value)
	{
		___lastFrameUpdated_3 = value;
	}

	inline static int32_t get_offset_of_debugActiveSetListText_4() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields, ___debugActiveSetListText_4)); }
	inline String_t* get_debugActiveSetListText_4() const { return ___debugActiveSetListText_4; }
	inline String_t** get_address_of_debugActiveSetListText_4() { return &___debugActiveSetListText_4; }
	inline void set_debugActiveSetListText_4(String_t* value)
	{
		___debugActiveSetListText_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___debugActiveSetListText_4), (void*)value);
	}

	inline static int32_t get_offset_of_updateDebugTextInBuilds_5() { return static_cast<int32_t>(offsetof(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields, ___updateDebugTextInBuilds_5)); }
	inline bool get_updateDebugTextInBuilds_5() const { return ___updateDebugTextInBuilds_5; }
	inline bool* get_address_of_updateDebugTextInBuilds_5() { return &___updateDebugTextInBuilds_5; }
	inline void set_updateDebugTextInBuilds_5(bool value)
	{
		___updateDebugTextInBuilds_5 = value;
	}
};


// Valve.VR.SteamVR_Input
struct  SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF  : public RuntimeObject
{
public:

public:
};

struct SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR_Input::fileInitialized
	bool ___fileInitialized_2;
	// System.Boolean Valve.VR.SteamVR_Input::initialized
	bool ___initialized_3;
	// System.Boolean Valve.VR.SteamVR_Input::preInitialized
	bool ___preInitialized_4;
	// Valve.VR.SteamVR_Input_ActionFile Valve.VR.SteamVR_Input::actionFile
	SteamVR_Input_ActionFile_tC425AB8156D447975E61DFF0C51888DE25BA09B1 * ___actionFile_5;
	// System.String Valve.VR.SteamVR_Input::actionFileHash
	String_t* ___actionFileHash_6;
	// System.Action Valve.VR.SteamVR_Input::onNonVisualActionsUpdated
	Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * ___onNonVisualActionsUpdated_7;
	// Valve.VR.SteamVR_Input_PosesUpdatedHandler Valve.VR.SteamVR_Input::onPosesUpdated
	PosesUpdatedHandler_tFA469337ADC152B8E747DB034400AE77D45238CA * ___onPosesUpdated_8;
	// Valve.VR.SteamVR_Input_SkeletonsUpdatedHandler Valve.VR.SteamVR_Input::onSkeletonsUpdated
	SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 * ___onSkeletonsUpdated_9;
	// System.Boolean Valve.VR.SteamVR_Input::initializing
	bool ___initializing_10;
	// System.Int32 Valve.VR.SteamVR_Input::startupFrame
	int32_t ___startupFrame_11;
	// Valve.VR.SteamVR_ActionSet[] Valve.VR.SteamVR_Input::actionSets
	SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* ___actionSets_12;
	// Valve.VR.SteamVR_Action[] Valve.VR.SteamVR_Input::actions
	SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* ___actions_13;
	// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_Input::actionsIn
	ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___actionsIn_14;
	// Valve.VR.ISteamVR_Action_Out[] Valve.VR.SteamVR_Input::actionsOut
	ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* ___actionsOut_15;
	// Valve.VR.SteamVR_Action_Boolean[] Valve.VR.SteamVR_Input::actionsBoolean
	SteamVR_Action_BooleanU5BU5D_tBB030CD0CA82DB08AEB7456EC4C614EA8B7A5E34* ___actionsBoolean_16;
	// Valve.VR.SteamVR_Action_Single[] Valve.VR.SteamVR_Input::actionsSingle
	SteamVR_Action_SingleU5BU5D_t17606A7D166DFF733AFE6D853883DEBF3D7A34A2* ___actionsSingle_17;
	// Valve.VR.SteamVR_Action_Vector2[] Valve.VR.SteamVR_Input::actionsVector2
	SteamVR_Action_Vector2U5BU5D_t59620E37FA97264ED8B42C392F939C8ECCC6AC1B* ___actionsVector2_18;
	// Valve.VR.SteamVR_Action_Vector3[] Valve.VR.SteamVR_Input::actionsVector3
	SteamVR_Action_Vector3U5BU5D_tCB49AE6A470D2C2A5C963F6B94A56EFE0E0B9E9D* ___actionsVector3_19;
	// Valve.VR.SteamVR_Action_Pose[] Valve.VR.SteamVR_Input::actionsPose
	SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* ___actionsPose_20;
	// Valve.VR.SteamVR_Action_Skeleton[] Valve.VR.SteamVR_Input::actionsSkeleton
	SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* ___actionsSkeleton_21;
	// Valve.VR.SteamVR_Action_Vibration[] Valve.VR.SteamVR_Input::actionsVibration
	SteamVR_Action_VibrationU5BU5D_tD7B0D0DE94599F6D17C88113C883DC686AE1BD12* ___actionsVibration_22;
	// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_Input::actionsNonPoseNonSkeletonIn
	ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___actionsNonPoseNonSkeletonIn_23;
	// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_ActionSet> Valve.VR.SteamVR_Input::actionSetsByPath
	Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * ___actionSetsByPath_24;
	// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_ActionSet> Valve.VR.SteamVR_Input::actionSetsByPathLowered
	Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * ___actionSetsByPathLowered_25;
	// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_Action> Valve.VR.SteamVR_Input::actionsByPath
	Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * ___actionsByPath_26;
	// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_Action> Valve.VR.SteamVR_Input::actionsByPathLowered
	Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * ___actionsByPathLowered_27;
	// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_ActionSet> Valve.VR.SteamVR_Input::actionSetsByPathCache
	Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * ___actionSetsByPathCache_28;
	// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_Action> Valve.VR.SteamVR_Input::actionsByPathCache
	Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * ___actionsByPathCache_29;
	// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_Action> Valve.VR.SteamVR_Input::actionsByNameCache
	Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * ___actionsByNameCache_30;
	// System.Collections.Generic.Dictionary`2<System.String,Valve.VR.SteamVR_ActionSet> Valve.VR.SteamVR_Input::actionSetsByNameCache
	Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * ___actionSetsByNameCache_31;
	// System.UInt32 Valve.VR.SteamVR_Input::sizeVRActiveActionSet_t
	uint32_t ___sizeVRActiveActionSet_t_32;
	// Valve.VR.VRActiveActionSet_t[] Valve.VR.SteamVR_Input::setCache
	VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* ___setCache_33;

public:
	inline static int32_t get_offset_of_fileInitialized_2() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___fileInitialized_2)); }
	inline bool get_fileInitialized_2() const { return ___fileInitialized_2; }
	inline bool* get_address_of_fileInitialized_2() { return &___fileInitialized_2; }
	inline void set_fileInitialized_2(bool value)
	{
		___fileInitialized_2 = value;
	}

	inline static int32_t get_offset_of_initialized_3() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___initialized_3)); }
	inline bool get_initialized_3() const { return ___initialized_3; }
	inline bool* get_address_of_initialized_3() { return &___initialized_3; }
	inline void set_initialized_3(bool value)
	{
		___initialized_3 = value;
	}

	inline static int32_t get_offset_of_preInitialized_4() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___preInitialized_4)); }
	inline bool get_preInitialized_4() const { return ___preInitialized_4; }
	inline bool* get_address_of_preInitialized_4() { return &___preInitialized_4; }
	inline void set_preInitialized_4(bool value)
	{
		___preInitialized_4 = value;
	}

	inline static int32_t get_offset_of_actionFile_5() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionFile_5)); }
	inline SteamVR_Input_ActionFile_tC425AB8156D447975E61DFF0C51888DE25BA09B1 * get_actionFile_5() const { return ___actionFile_5; }
	inline SteamVR_Input_ActionFile_tC425AB8156D447975E61DFF0C51888DE25BA09B1 ** get_address_of_actionFile_5() { return &___actionFile_5; }
	inline void set_actionFile_5(SteamVR_Input_ActionFile_tC425AB8156D447975E61DFF0C51888DE25BA09B1 * value)
	{
		___actionFile_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionFile_5), (void*)value);
	}

	inline static int32_t get_offset_of_actionFileHash_6() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionFileHash_6)); }
	inline String_t* get_actionFileHash_6() const { return ___actionFileHash_6; }
	inline String_t** get_address_of_actionFileHash_6() { return &___actionFileHash_6; }
	inline void set_actionFileHash_6(String_t* value)
	{
		___actionFileHash_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionFileHash_6), (void*)value);
	}

	inline static int32_t get_offset_of_onNonVisualActionsUpdated_7() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___onNonVisualActionsUpdated_7)); }
	inline Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * get_onNonVisualActionsUpdated_7() const { return ___onNonVisualActionsUpdated_7; }
	inline Action_t591D2A86165F896B4B800BB5C25CE18672A55579 ** get_address_of_onNonVisualActionsUpdated_7() { return &___onNonVisualActionsUpdated_7; }
	inline void set_onNonVisualActionsUpdated_7(Action_t591D2A86165F896B4B800BB5C25CE18672A55579 * value)
	{
		___onNonVisualActionsUpdated_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onNonVisualActionsUpdated_7), (void*)value);
	}

	inline static int32_t get_offset_of_onPosesUpdated_8() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___onPosesUpdated_8)); }
	inline PosesUpdatedHandler_tFA469337ADC152B8E747DB034400AE77D45238CA * get_onPosesUpdated_8() const { return ___onPosesUpdated_8; }
	inline PosesUpdatedHandler_tFA469337ADC152B8E747DB034400AE77D45238CA ** get_address_of_onPosesUpdated_8() { return &___onPosesUpdated_8; }
	inline void set_onPosesUpdated_8(PosesUpdatedHandler_tFA469337ADC152B8E747DB034400AE77D45238CA * value)
	{
		___onPosesUpdated_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onPosesUpdated_8), (void*)value);
	}

	inline static int32_t get_offset_of_onSkeletonsUpdated_9() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___onSkeletonsUpdated_9)); }
	inline SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 * get_onSkeletonsUpdated_9() const { return ___onSkeletonsUpdated_9; }
	inline SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 ** get_address_of_onSkeletonsUpdated_9() { return &___onSkeletonsUpdated_9; }
	inline void set_onSkeletonsUpdated_9(SkeletonsUpdatedHandler_t87EC02E2FFD91D305E5C4E8B64110AA2981F3DD6 * value)
	{
		___onSkeletonsUpdated_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onSkeletonsUpdated_9), (void*)value);
	}

	inline static int32_t get_offset_of_initializing_10() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___initializing_10)); }
	inline bool get_initializing_10() const { return ___initializing_10; }
	inline bool* get_address_of_initializing_10() { return &___initializing_10; }
	inline void set_initializing_10(bool value)
	{
		___initializing_10 = value;
	}

	inline static int32_t get_offset_of_startupFrame_11() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___startupFrame_11)); }
	inline int32_t get_startupFrame_11() const { return ___startupFrame_11; }
	inline int32_t* get_address_of_startupFrame_11() { return &___startupFrame_11; }
	inline void set_startupFrame_11(int32_t value)
	{
		___startupFrame_11 = value;
	}

	inline static int32_t get_offset_of_actionSets_12() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionSets_12)); }
	inline SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* get_actionSets_12() const { return ___actionSets_12; }
	inline SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA** get_address_of_actionSets_12() { return &___actionSets_12; }
	inline void set_actionSets_12(SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* value)
	{
		___actionSets_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSets_12), (void*)value);
	}

	inline static int32_t get_offset_of_actions_13() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actions_13)); }
	inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* get_actions_13() const { return ___actions_13; }
	inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB** get_address_of_actions_13() { return &___actions_13; }
	inline void set_actions_13(SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* value)
	{
		___actions_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actions_13), (void*)value);
	}

	inline static int32_t get_offset_of_actionsIn_14() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsIn_14)); }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* get_actionsIn_14() const { return ___actionsIn_14; }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B** get_address_of_actionsIn_14() { return &___actionsIn_14; }
	inline void set_actionsIn_14(ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* value)
	{
		___actionsIn_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsIn_14), (void*)value);
	}

	inline static int32_t get_offset_of_actionsOut_15() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsOut_15)); }
	inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* get_actionsOut_15() const { return ___actionsOut_15; }
	inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9** get_address_of_actionsOut_15() { return &___actionsOut_15; }
	inline void set_actionsOut_15(ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* value)
	{
		___actionsOut_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsOut_15), (void*)value);
	}

	inline static int32_t get_offset_of_actionsBoolean_16() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsBoolean_16)); }
	inline SteamVR_Action_BooleanU5BU5D_tBB030CD0CA82DB08AEB7456EC4C614EA8B7A5E34* get_actionsBoolean_16() const { return ___actionsBoolean_16; }
	inline SteamVR_Action_BooleanU5BU5D_tBB030CD0CA82DB08AEB7456EC4C614EA8B7A5E34** get_address_of_actionsBoolean_16() { return &___actionsBoolean_16; }
	inline void set_actionsBoolean_16(SteamVR_Action_BooleanU5BU5D_tBB030CD0CA82DB08AEB7456EC4C614EA8B7A5E34* value)
	{
		___actionsBoolean_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsBoolean_16), (void*)value);
	}

	inline static int32_t get_offset_of_actionsSingle_17() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsSingle_17)); }
	inline SteamVR_Action_SingleU5BU5D_t17606A7D166DFF733AFE6D853883DEBF3D7A34A2* get_actionsSingle_17() const { return ___actionsSingle_17; }
	inline SteamVR_Action_SingleU5BU5D_t17606A7D166DFF733AFE6D853883DEBF3D7A34A2** get_address_of_actionsSingle_17() { return &___actionsSingle_17; }
	inline void set_actionsSingle_17(SteamVR_Action_SingleU5BU5D_t17606A7D166DFF733AFE6D853883DEBF3D7A34A2* value)
	{
		___actionsSingle_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsSingle_17), (void*)value);
	}

	inline static int32_t get_offset_of_actionsVector2_18() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsVector2_18)); }
	inline SteamVR_Action_Vector2U5BU5D_t59620E37FA97264ED8B42C392F939C8ECCC6AC1B* get_actionsVector2_18() const { return ___actionsVector2_18; }
	inline SteamVR_Action_Vector2U5BU5D_t59620E37FA97264ED8B42C392F939C8ECCC6AC1B** get_address_of_actionsVector2_18() { return &___actionsVector2_18; }
	inline void set_actionsVector2_18(SteamVR_Action_Vector2U5BU5D_t59620E37FA97264ED8B42C392F939C8ECCC6AC1B* value)
	{
		___actionsVector2_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsVector2_18), (void*)value);
	}

	inline static int32_t get_offset_of_actionsVector3_19() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsVector3_19)); }
	inline SteamVR_Action_Vector3U5BU5D_tCB49AE6A470D2C2A5C963F6B94A56EFE0E0B9E9D* get_actionsVector3_19() const { return ___actionsVector3_19; }
	inline SteamVR_Action_Vector3U5BU5D_tCB49AE6A470D2C2A5C963F6B94A56EFE0E0B9E9D** get_address_of_actionsVector3_19() { return &___actionsVector3_19; }
	inline void set_actionsVector3_19(SteamVR_Action_Vector3U5BU5D_tCB49AE6A470D2C2A5C963F6B94A56EFE0E0B9E9D* value)
	{
		___actionsVector3_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsVector3_19), (void*)value);
	}

	inline static int32_t get_offset_of_actionsPose_20() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsPose_20)); }
	inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* get_actionsPose_20() const { return ___actionsPose_20; }
	inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968** get_address_of_actionsPose_20() { return &___actionsPose_20; }
	inline void set_actionsPose_20(SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* value)
	{
		___actionsPose_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsPose_20), (void*)value);
	}

	inline static int32_t get_offset_of_actionsSkeleton_21() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsSkeleton_21)); }
	inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* get_actionsSkeleton_21() const { return ___actionsSkeleton_21; }
	inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56** get_address_of_actionsSkeleton_21() { return &___actionsSkeleton_21; }
	inline void set_actionsSkeleton_21(SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* value)
	{
		___actionsSkeleton_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsSkeleton_21), (void*)value);
	}

	inline static int32_t get_offset_of_actionsVibration_22() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsVibration_22)); }
	inline SteamVR_Action_VibrationU5BU5D_tD7B0D0DE94599F6D17C88113C883DC686AE1BD12* get_actionsVibration_22() const { return ___actionsVibration_22; }
	inline SteamVR_Action_VibrationU5BU5D_tD7B0D0DE94599F6D17C88113C883DC686AE1BD12** get_address_of_actionsVibration_22() { return &___actionsVibration_22; }
	inline void set_actionsVibration_22(SteamVR_Action_VibrationU5BU5D_tD7B0D0DE94599F6D17C88113C883DC686AE1BD12* value)
	{
		___actionsVibration_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsVibration_22), (void*)value);
	}

	inline static int32_t get_offset_of_actionsNonPoseNonSkeletonIn_23() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsNonPoseNonSkeletonIn_23)); }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* get_actionsNonPoseNonSkeletonIn_23() const { return ___actionsNonPoseNonSkeletonIn_23; }
	inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B** get_address_of_actionsNonPoseNonSkeletonIn_23() { return &___actionsNonPoseNonSkeletonIn_23; }
	inline void set_actionsNonPoseNonSkeletonIn_23(ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* value)
	{
		___actionsNonPoseNonSkeletonIn_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsNonPoseNonSkeletonIn_23), (void*)value);
	}

	inline static int32_t get_offset_of_actionSetsByPath_24() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionSetsByPath_24)); }
	inline Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * get_actionSetsByPath_24() const { return ___actionSetsByPath_24; }
	inline Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D ** get_address_of_actionSetsByPath_24() { return &___actionSetsByPath_24; }
	inline void set_actionSetsByPath_24(Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * value)
	{
		___actionSetsByPath_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetsByPath_24), (void*)value);
	}

	inline static int32_t get_offset_of_actionSetsByPathLowered_25() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionSetsByPathLowered_25)); }
	inline Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * get_actionSetsByPathLowered_25() const { return ___actionSetsByPathLowered_25; }
	inline Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D ** get_address_of_actionSetsByPathLowered_25() { return &___actionSetsByPathLowered_25; }
	inline void set_actionSetsByPathLowered_25(Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * value)
	{
		___actionSetsByPathLowered_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetsByPathLowered_25), (void*)value);
	}

	inline static int32_t get_offset_of_actionsByPath_26() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsByPath_26)); }
	inline Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * get_actionsByPath_26() const { return ___actionsByPath_26; }
	inline Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 ** get_address_of_actionsByPath_26() { return &___actionsByPath_26; }
	inline void set_actionsByPath_26(Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * value)
	{
		___actionsByPath_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsByPath_26), (void*)value);
	}

	inline static int32_t get_offset_of_actionsByPathLowered_27() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsByPathLowered_27)); }
	inline Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * get_actionsByPathLowered_27() const { return ___actionsByPathLowered_27; }
	inline Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 ** get_address_of_actionsByPathLowered_27() { return &___actionsByPathLowered_27; }
	inline void set_actionsByPathLowered_27(Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * value)
	{
		___actionsByPathLowered_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsByPathLowered_27), (void*)value);
	}

	inline static int32_t get_offset_of_actionSetsByPathCache_28() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionSetsByPathCache_28)); }
	inline Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * get_actionSetsByPathCache_28() const { return ___actionSetsByPathCache_28; }
	inline Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D ** get_address_of_actionSetsByPathCache_28() { return &___actionSetsByPathCache_28; }
	inline void set_actionSetsByPathCache_28(Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * value)
	{
		___actionSetsByPathCache_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetsByPathCache_28), (void*)value);
	}

	inline static int32_t get_offset_of_actionsByPathCache_29() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsByPathCache_29)); }
	inline Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * get_actionsByPathCache_29() const { return ___actionsByPathCache_29; }
	inline Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 ** get_address_of_actionsByPathCache_29() { return &___actionsByPathCache_29; }
	inline void set_actionsByPathCache_29(Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * value)
	{
		___actionsByPathCache_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsByPathCache_29), (void*)value);
	}

	inline static int32_t get_offset_of_actionsByNameCache_30() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionsByNameCache_30)); }
	inline Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * get_actionsByNameCache_30() const { return ___actionsByNameCache_30; }
	inline Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 ** get_address_of_actionsByNameCache_30() { return &___actionsByNameCache_30; }
	inline void set_actionsByNameCache_30(Dictionary_2_tEA505316CA2FE10B186C980E36CFDA57F4EA7245 * value)
	{
		___actionsByNameCache_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionsByNameCache_30), (void*)value);
	}

	inline static int32_t get_offset_of_actionSetsByNameCache_31() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___actionSetsByNameCache_31)); }
	inline Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * get_actionSetsByNameCache_31() const { return ___actionSetsByNameCache_31; }
	inline Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D ** get_address_of_actionSetsByNameCache_31() { return &___actionSetsByNameCache_31; }
	inline void set_actionSetsByNameCache_31(Dictionary_2_t1BA72EAB6CBC0542D28379D19A5333D3EDD4559D * value)
	{
		___actionSetsByNameCache_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___actionSetsByNameCache_31), (void*)value);
	}

	inline static int32_t get_offset_of_sizeVRActiveActionSet_t_32() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___sizeVRActiveActionSet_t_32)); }
	inline uint32_t get_sizeVRActiveActionSet_t_32() const { return ___sizeVRActiveActionSet_t_32; }
	inline uint32_t* get_address_of_sizeVRActiveActionSet_t_32() { return &___sizeVRActiveActionSet_t_32; }
	inline void set_sizeVRActiveActionSet_t_32(uint32_t value)
	{
		___sizeVRActiveActionSet_t_32 = value;
	}

	inline static int32_t get_offset_of_setCache_33() { return static_cast<int32_t>(offsetof(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields, ___setCache_33)); }
	inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* get_setCache_33() const { return ___setCache_33; }
	inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5** get_address_of_setCache_33() { return &___setCache_33; }
	inline void set_setCache_33(VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* value)
	{
		___setCache_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___setCache_33), (void*)value);
	}
};


// Valve.VR.SteamVR_Input_Source
struct  SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0  : public RuntimeObject
{
public:

public:
};

struct SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields
{
public:
	// System.Int32 Valve.VR.SteamVR_Input_Source::numSources
	int32_t ___numSources_0;
	// System.UInt64[] Valve.VR.SteamVR_Input_Source::inputSourceHandlesBySource
	UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* ___inputSourceHandlesBySource_1;
	// System.Collections.Generic.Dictionary`2<System.UInt64,Valve.VR.SteamVR_Input_Sources> Valve.VR.SteamVR_Input_Source::inputSourceSourcesByHandle
	Dictionary_2_tAEA5E8A9E7453E81FE8219225916E4BC29B908B4 * ___inputSourceSourcesByHandle_2;
	// System.Type Valve.VR.SteamVR_Input_Source::enumType
	Type_t * ___enumType_3;
	// System.Type Valve.VR.SteamVR_Input_Source::descriptionType
	Type_t * ___descriptionType_4;
	// Valve.VR.SteamVR_Input_Sources[] Valve.VR.SteamVR_Input_Source::allSources
	SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* ___allSources_5;

public:
	inline static int32_t get_offset_of_numSources_0() { return static_cast<int32_t>(offsetof(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields, ___numSources_0)); }
	inline int32_t get_numSources_0() const { return ___numSources_0; }
	inline int32_t* get_address_of_numSources_0() { return &___numSources_0; }
	inline void set_numSources_0(int32_t value)
	{
		___numSources_0 = value;
	}

	inline static int32_t get_offset_of_inputSourceHandlesBySource_1() { return static_cast<int32_t>(offsetof(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields, ___inputSourceHandlesBySource_1)); }
	inline UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* get_inputSourceHandlesBySource_1() const { return ___inputSourceHandlesBySource_1; }
	inline UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4** get_address_of_inputSourceHandlesBySource_1() { return &___inputSourceHandlesBySource_1; }
	inline void set_inputSourceHandlesBySource_1(UInt64U5BU5D_tA808FE881491284FF25AFDF5C4BC92A826031EF4* value)
	{
		___inputSourceHandlesBySource_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputSourceHandlesBySource_1), (void*)value);
	}

	inline static int32_t get_offset_of_inputSourceSourcesByHandle_2() { return static_cast<int32_t>(offsetof(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields, ___inputSourceSourcesByHandle_2)); }
	inline Dictionary_2_tAEA5E8A9E7453E81FE8219225916E4BC29B908B4 * get_inputSourceSourcesByHandle_2() const { return ___inputSourceSourcesByHandle_2; }
	inline Dictionary_2_tAEA5E8A9E7453E81FE8219225916E4BC29B908B4 ** get_address_of_inputSourceSourcesByHandle_2() { return &___inputSourceSourcesByHandle_2; }
	inline void set_inputSourceSourcesByHandle_2(Dictionary_2_tAEA5E8A9E7453E81FE8219225916E4BC29B908B4 * value)
	{
		___inputSourceSourcesByHandle_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inputSourceSourcesByHandle_2), (void*)value);
	}

	inline static int32_t get_offset_of_enumType_3() { return static_cast<int32_t>(offsetof(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields, ___enumType_3)); }
	inline Type_t * get_enumType_3() const { return ___enumType_3; }
	inline Type_t ** get_address_of_enumType_3() { return &___enumType_3; }
	inline void set_enumType_3(Type_t * value)
	{
		___enumType_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumType_3), (void*)value);
	}

	inline static int32_t get_offset_of_descriptionType_4() { return static_cast<int32_t>(offsetof(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields, ___descriptionType_4)); }
	inline Type_t * get_descriptionType_4() const { return ___descriptionType_4; }
	inline Type_t ** get_address_of_descriptionType_4() { return &___descriptionType_4; }
	inline void set_descriptionType_4(Type_t * value)
	{
		___descriptionType_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___descriptionType_4), (void*)value);
	}

	inline static int32_t get_offset_of_allSources_5() { return static_cast<int32_t>(offsetof(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields, ___allSources_5)); }
	inline SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* get_allSources_5() const { return ___allSources_5; }
	inline SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A** get_address_of_allSources_5() { return &___allSources_5; }
	inline void set_allSources_5(SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* value)
	{
		___allSources_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___allSources_5), (void*)value);
	}
};


// System.Boolean
struct  Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TrueString_5), (void*)value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FalseString_6), (void*)value);
	}
};


// System.Enum
struct  Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___enumSeperatorCharArray_0), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};

// System.Int32
struct  Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};


// System.IntPtr
struct  IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};


// System.Single
struct  Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};


// System.UInt32
struct  UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};


// System.UInt64
struct  UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};


// System.Void
struct  Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};


// UnityEngine.Mathf
struct  Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB__padding[1];
	};

public:
};

struct Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields
{
public:
	// System.Single UnityEngine.Mathf::Epsilon
	float ___Epsilon_0;

public:
	inline static int32_t get_offset_of_Epsilon_0() { return static_cast<int32_t>(offsetof(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields, ___Epsilon_0)); }
	inline float get_Epsilon_0() const { return ___Epsilon_0; }
	inline float* get_address_of_Epsilon_0() { return &___Epsilon_0; }
	inline void set_Epsilon_0(float value)
	{
		___Epsilon_0 = value;
	}
};


// UnityEngine.Quaternion
struct  Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 
{
public:
	// System.Single UnityEngine.Quaternion::x
	float ___x_0;
	// System.Single UnityEngine.Quaternion::y
	float ___y_1;
	// System.Single UnityEngine.Quaternion::z
	float ___z_2;
	// System.Single UnityEngine.Quaternion::w
	float ___w_3;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_z_2() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___z_2)); }
	inline float get_z_2() const { return ___z_2; }
	inline float* get_address_of_z_2() { return &___z_2; }
	inline void set_z_2(float value)
	{
		___z_2 = value;
	}

	inline static int32_t get_offset_of_w_3() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357, ___w_3)); }
	inline float get_w_3() const { return ___w_3; }
	inline float* get_address_of_w_3() { return &___w_3; }
	inline void set_w_3(float value)
	{
		___w_3 = value;
	}
};

struct Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields
{
public:
	// UnityEngine.Quaternion UnityEngine.Quaternion::identityQuaternion
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___identityQuaternion_4;

public:
	inline static int32_t get_offset_of_identityQuaternion_4() { return static_cast<int32_t>(offsetof(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_StaticFields, ___identityQuaternion_4)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_identityQuaternion_4() const { return ___identityQuaternion_4; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_identityQuaternion_4() { return &___identityQuaternion_4; }
	inline void set_identityQuaternion_4(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___identityQuaternion_4 = value;
	}
};


// UnityEngine.Vector2
struct  Vector2_tA85D2DD88578276CA8A8796756458277E72D073D 
{
public:
	// System.Single UnityEngine.Vector2::x
	float ___x_0;
	// System.Single UnityEngine.Vector2::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

struct Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields
{
public:
	// UnityEngine.Vector2 UnityEngine.Vector2::zeroVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___zeroVector_2;
	// UnityEngine.Vector2 UnityEngine.Vector2::oneVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___oneVector_3;
	// UnityEngine.Vector2 UnityEngine.Vector2::upVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___upVector_4;
	// UnityEngine.Vector2 UnityEngine.Vector2::downVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___downVector_5;
	// UnityEngine.Vector2 UnityEngine.Vector2::leftVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___leftVector_6;
	// UnityEngine.Vector2 UnityEngine.Vector2::rightVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___rightVector_7;
	// UnityEngine.Vector2 UnityEngine.Vector2::positiveInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___positiveInfinityVector_8;
	// UnityEngine.Vector2 UnityEngine.Vector2::negativeInfinityVector
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___negativeInfinityVector_9;

public:
	inline static int32_t get_offset_of_zeroVector_2() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___zeroVector_2)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_zeroVector_2() const { return ___zeroVector_2; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_zeroVector_2() { return &___zeroVector_2; }
	inline void set_zeroVector_2(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___zeroVector_2 = value;
	}

	inline static int32_t get_offset_of_oneVector_3() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___oneVector_3)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_oneVector_3() const { return ___oneVector_3; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_oneVector_3() { return &___oneVector_3; }
	inline void set_oneVector_3(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___oneVector_3 = value;
	}

	inline static int32_t get_offset_of_upVector_4() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___upVector_4)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_upVector_4() const { return ___upVector_4; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_upVector_4() { return &___upVector_4; }
	inline void set_upVector_4(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___upVector_4 = value;
	}

	inline static int32_t get_offset_of_downVector_5() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___downVector_5)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_downVector_5() const { return ___downVector_5; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_downVector_5() { return &___downVector_5; }
	inline void set_downVector_5(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___downVector_5 = value;
	}

	inline static int32_t get_offset_of_leftVector_6() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___leftVector_6)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_leftVector_6() const { return ___leftVector_6; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_leftVector_6() { return &___leftVector_6; }
	inline void set_leftVector_6(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___leftVector_6 = value;
	}

	inline static int32_t get_offset_of_rightVector_7() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___rightVector_7)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_rightVector_7() const { return ___rightVector_7; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_rightVector_7() { return &___rightVector_7; }
	inline void set_rightVector_7(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___rightVector_7 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_8() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___positiveInfinityVector_8)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_positiveInfinityVector_8() const { return ___positiveInfinityVector_8; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_positiveInfinityVector_8() { return &___positiveInfinityVector_8; }
	inline void set_positiveInfinityVector_8(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___positiveInfinityVector_8 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_9() { return static_cast<int32_t>(offsetof(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D_StaticFields, ___negativeInfinityVector_9)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_negativeInfinityVector_9() const { return ___negativeInfinityVector_9; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_negativeInfinityVector_9() { return &___negativeInfinityVector_9; }
	inline void set_negativeInfinityVector_9(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___negativeInfinityVector_9 = value;
	}
};


// UnityEngine.Vector3
struct  Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 
{
public:
	// System.Single UnityEngine.Vector3::x
	float ___x_2;
	// System.Single UnityEngine.Vector3::y
	float ___y_3;
	// System.Single UnityEngine.Vector3::z
	float ___z_4;

public:
	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}
};

struct Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields
{
public:
	// UnityEngine.Vector3 UnityEngine.Vector3::zeroVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___zeroVector_5;
	// UnityEngine.Vector3 UnityEngine.Vector3::oneVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___oneVector_6;
	// UnityEngine.Vector3 UnityEngine.Vector3::upVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___upVector_7;
	// UnityEngine.Vector3 UnityEngine.Vector3::downVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___downVector_8;
	// UnityEngine.Vector3 UnityEngine.Vector3::leftVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___leftVector_9;
	// UnityEngine.Vector3 UnityEngine.Vector3::rightVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___rightVector_10;
	// UnityEngine.Vector3 UnityEngine.Vector3::forwardVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___forwardVector_11;
	// UnityEngine.Vector3 UnityEngine.Vector3::backVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___backVector_12;
	// UnityEngine.Vector3 UnityEngine.Vector3::positiveInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___positiveInfinityVector_13;
	// UnityEngine.Vector3 UnityEngine.Vector3::negativeInfinityVector
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___negativeInfinityVector_14;

public:
	inline static int32_t get_offset_of_zeroVector_5() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___zeroVector_5)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_zeroVector_5() const { return ___zeroVector_5; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_zeroVector_5() { return &___zeroVector_5; }
	inline void set_zeroVector_5(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___zeroVector_5 = value;
	}

	inline static int32_t get_offset_of_oneVector_6() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___oneVector_6)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_oneVector_6() const { return ___oneVector_6; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_oneVector_6() { return &___oneVector_6; }
	inline void set_oneVector_6(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___oneVector_6 = value;
	}

	inline static int32_t get_offset_of_upVector_7() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___upVector_7)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_upVector_7() const { return ___upVector_7; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_upVector_7() { return &___upVector_7; }
	inline void set_upVector_7(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___upVector_7 = value;
	}

	inline static int32_t get_offset_of_downVector_8() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___downVector_8)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_downVector_8() const { return ___downVector_8; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_downVector_8() { return &___downVector_8; }
	inline void set_downVector_8(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___downVector_8 = value;
	}

	inline static int32_t get_offset_of_leftVector_9() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___leftVector_9)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_leftVector_9() const { return ___leftVector_9; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_leftVector_9() { return &___leftVector_9; }
	inline void set_leftVector_9(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___leftVector_9 = value;
	}

	inline static int32_t get_offset_of_rightVector_10() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___rightVector_10)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_rightVector_10() const { return ___rightVector_10; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_rightVector_10() { return &___rightVector_10; }
	inline void set_rightVector_10(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___rightVector_10 = value;
	}

	inline static int32_t get_offset_of_forwardVector_11() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___forwardVector_11)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_forwardVector_11() const { return ___forwardVector_11; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_forwardVector_11() { return &___forwardVector_11; }
	inline void set_forwardVector_11(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___forwardVector_11 = value;
	}

	inline static int32_t get_offset_of_backVector_12() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___backVector_12)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_backVector_12() const { return ___backVector_12; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_backVector_12() { return &___backVector_12; }
	inline void set_backVector_12(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___backVector_12 = value;
	}

	inline static int32_t get_offset_of_positiveInfinityVector_13() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___positiveInfinityVector_13)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_positiveInfinityVector_13() const { return ___positiveInfinityVector_13; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_positiveInfinityVector_13() { return &___positiveInfinityVector_13; }
	inline void set_positiveInfinityVector_13(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___positiveInfinityVector_13 = value;
	}

	inline static int32_t get_offset_of_negativeInfinityVector_14() { return static_cast<int32_t>(offsetof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_StaticFields, ___negativeInfinityVector_14)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_negativeInfinityVector_14() const { return ___negativeInfinityVector_14; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_negativeInfinityVector_14() { return &___negativeInfinityVector_14; }
	inline void set_negativeInfinityVector_14(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___negativeInfinityVector_14 = value;
	}
};


// Valve.VR.HmdMatrix34_t
struct  HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 
{
public:
	// System.Single Valve.VR.HmdMatrix34_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix34_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix34_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix34_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix34_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix34_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix34_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix34_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix34_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix34_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix34_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix34_t::m11
	float ___m11_11;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}
};


// Valve.VR.HmdVector3_t
struct  HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A 
{
public:
	// System.Single Valve.VR.HmdVector3_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector3_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector3_t::v2
	float ___v2_2;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}
};


// Valve.VR.IVRCompositor
struct  IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554 
{
public:
	// Valve.VR.IVRCompositor__SetTrackingSpace Valve.VR.IVRCompositor::SetTrackingSpace
	_SetTrackingSpace_tDAC6F374480D3A83BE4C1C0CC6525D543BC8D7D6 * ___SetTrackingSpace_0;
	// Valve.VR.IVRCompositor__GetTrackingSpace Valve.VR.IVRCompositor::GetTrackingSpace
	_GetTrackingSpace_tF0B604887238FB14F8B2DAD3C935CBD74444EC34 * ___GetTrackingSpace_1;
	// Valve.VR.IVRCompositor__WaitGetPoses Valve.VR.IVRCompositor::WaitGetPoses
	_WaitGetPoses_t44D69BD3F698D7DB94A2351E1FDFEA3D1DA9C3B5 * ___WaitGetPoses_2;
	// Valve.VR.IVRCompositor__GetLastPoses Valve.VR.IVRCompositor::GetLastPoses
	_GetLastPoses_t877DF4406C3AC035C9ABCB128E63F54D3F5AB2A7 * ___GetLastPoses_3;
	// Valve.VR.IVRCompositor__GetLastPoseForTrackedDeviceIndex Valve.VR.IVRCompositor::GetLastPoseForTrackedDeviceIndex
	_GetLastPoseForTrackedDeviceIndex_t05CF8BE0EE9758E4AFE7EC6F14BF25BD287B40F7 * ___GetLastPoseForTrackedDeviceIndex_4;
	// Valve.VR.IVRCompositor__Submit Valve.VR.IVRCompositor::Submit
	_Submit_t80D004BD057D9431F39A5D22809D5A68B9F0B1D2 * ___Submit_5;
	// Valve.VR.IVRCompositor__ClearLastSubmittedFrame Valve.VR.IVRCompositor::ClearLastSubmittedFrame
	_ClearLastSubmittedFrame_t969F59C8BF5960DC8F77A0115F0175501573FC04 * ___ClearLastSubmittedFrame_6;
	// Valve.VR.IVRCompositor__PostPresentHandoff Valve.VR.IVRCompositor::PostPresentHandoff
	_PostPresentHandoff_t2DA780AB403F80C444E2508DB828BB0D7AA22296 * ___PostPresentHandoff_7;
	// Valve.VR.IVRCompositor__GetFrameTiming Valve.VR.IVRCompositor::GetFrameTiming
	_GetFrameTiming_tF72A3B101432CF529D180E6E69CA2DDEC58EB241 * ___GetFrameTiming_8;
	// Valve.VR.IVRCompositor__GetFrameTimings Valve.VR.IVRCompositor::GetFrameTimings
	_GetFrameTimings_tE3353CDF4C760697793654FBA910DDD49EF6EC2C * ___GetFrameTimings_9;
	// Valve.VR.IVRCompositor__GetFrameTimeRemaining Valve.VR.IVRCompositor::GetFrameTimeRemaining
	_GetFrameTimeRemaining_tAFC5580926959947E3DD985F1B8232B3419DF96C * ___GetFrameTimeRemaining_10;
	// Valve.VR.IVRCompositor__GetCumulativeStats Valve.VR.IVRCompositor::GetCumulativeStats
	_GetCumulativeStats_t1106FF48E357EC92BB3568A7D4C6A35CB50E7506 * ___GetCumulativeStats_11;
	// Valve.VR.IVRCompositor__FadeToColor Valve.VR.IVRCompositor::FadeToColor
	_FadeToColor_tCBF39ACC5136AE7F23D3C035A5C4677A2DE597E8 * ___FadeToColor_12;
	// Valve.VR.IVRCompositor__GetCurrentFadeColor Valve.VR.IVRCompositor::GetCurrentFadeColor
	_GetCurrentFadeColor_t0760486B9A0AD7E2768E3E94C96CD17F6F87368E * ___GetCurrentFadeColor_13;
	// Valve.VR.IVRCompositor__FadeGrid Valve.VR.IVRCompositor::FadeGrid
	_FadeGrid_t4D11F0591C69AB2A3E55A6437C3287C9D9009A56 * ___FadeGrid_14;
	// Valve.VR.IVRCompositor__GetCurrentGridAlpha Valve.VR.IVRCompositor::GetCurrentGridAlpha
	_GetCurrentGridAlpha_t09CBC75362318D28B915C57BCE32C0542BECA0A6 * ___GetCurrentGridAlpha_15;
	// Valve.VR.IVRCompositor__SetSkyboxOverride Valve.VR.IVRCompositor::SetSkyboxOverride
	_SetSkyboxOverride_tC5019711FFA65B037E95A4F3A8BCB8B63A2690CD * ___SetSkyboxOverride_16;
	// Valve.VR.IVRCompositor__ClearSkyboxOverride Valve.VR.IVRCompositor::ClearSkyboxOverride
	_ClearSkyboxOverride_tBCB6CDEB6C6666B82FBE0AEDC560CECF4DE1D971 * ___ClearSkyboxOverride_17;
	// Valve.VR.IVRCompositor__CompositorBringToFront Valve.VR.IVRCompositor::CompositorBringToFront
	_CompositorBringToFront_tE24705ABB39CFB124042B89DAC3C38BB1F85795C * ___CompositorBringToFront_18;
	// Valve.VR.IVRCompositor__CompositorGoToBack Valve.VR.IVRCompositor::CompositorGoToBack
	_CompositorGoToBack_tF3E1201BFC1F50E0784404489C3E552797E43346 * ___CompositorGoToBack_19;
	// Valve.VR.IVRCompositor__CompositorQuit Valve.VR.IVRCompositor::CompositorQuit
	_CompositorQuit_t640663BAA37F6746BE5809D4AFD80EC61C568902 * ___CompositorQuit_20;
	// Valve.VR.IVRCompositor__IsFullscreen Valve.VR.IVRCompositor::IsFullscreen
	_IsFullscreen_t7D2C12F6A41A525E0D22CD1FCEAA101AD6D194D0 * ___IsFullscreen_21;
	// Valve.VR.IVRCompositor__GetCurrentSceneFocusProcess Valve.VR.IVRCompositor::GetCurrentSceneFocusProcess
	_GetCurrentSceneFocusProcess_t828C1D2E50898584E302A12EF23D5DF3B85A66D5 * ___GetCurrentSceneFocusProcess_22;
	// Valve.VR.IVRCompositor__GetLastFrameRenderer Valve.VR.IVRCompositor::GetLastFrameRenderer
	_GetLastFrameRenderer_tF6A454F9792D13D6CCBAC715E9B8EC5C9ED5476C * ___GetLastFrameRenderer_23;
	// Valve.VR.IVRCompositor__CanRenderScene Valve.VR.IVRCompositor::CanRenderScene
	_CanRenderScene_tDE40584447362CABAFD6B784430D04869B26118B * ___CanRenderScene_24;
	// Valve.VR.IVRCompositor__ShowMirrorWindow Valve.VR.IVRCompositor::ShowMirrorWindow
	_ShowMirrorWindow_t8C04F03CF7C80BB81F0499DFD76073FE969644B5 * ___ShowMirrorWindow_25;
	// Valve.VR.IVRCompositor__HideMirrorWindow Valve.VR.IVRCompositor::HideMirrorWindow
	_HideMirrorWindow_t4A3D32F44081DF29C9A6104F0FC6C556399D706E * ___HideMirrorWindow_26;
	// Valve.VR.IVRCompositor__IsMirrorWindowVisible Valve.VR.IVRCompositor::IsMirrorWindowVisible
	_IsMirrorWindowVisible_t7B3DE5AD3A0163C9BDD47BD1FBC05D9125221BFC * ___IsMirrorWindowVisible_27;
	// Valve.VR.IVRCompositor__CompositorDumpImages Valve.VR.IVRCompositor::CompositorDumpImages
	_CompositorDumpImages_t81E6DBB82D35105B8D16AD44BDCCAD3624F3E81D * ___CompositorDumpImages_28;
	// Valve.VR.IVRCompositor__ShouldAppRenderWithLowResources Valve.VR.IVRCompositor::ShouldAppRenderWithLowResources
	_ShouldAppRenderWithLowResources_t07BEE5FBB23B1DDA47EE6C459CEEE5702E8A17BE * ___ShouldAppRenderWithLowResources_29;
	// Valve.VR.IVRCompositor__ForceInterleavedReprojectionOn Valve.VR.IVRCompositor::ForceInterleavedReprojectionOn
	_ForceInterleavedReprojectionOn_tF28FFD3507DC2B8D195A004B96D0790B439862CB * ___ForceInterleavedReprojectionOn_30;
	// Valve.VR.IVRCompositor__ForceReconnectProcess Valve.VR.IVRCompositor::ForceReconnectProcess
	_ForceReconnectProcess_t05157A153AAD86C2875B13E6EE4B4CAA836F0E07 * ___ForceReconnectProcess_31;
	// Valve.VR.IVRCompositor__SuspendRendering Valve.VR.IVRCompositor::SuspendRendering
	_SuspendRendering_tC812DC4CE9D26AF62AC7E37E0FF3E120EC2DC008 * ___SuspendRendering_32;
	// Valve.VR.IVRCompositor__GetMirrorTextureD3D11 Valve.VR.IVRCompositor::GetMirrorTextureD3D11
	_GetMirrorTextureD3D11_t3821C937B45635C32287945301C38059DB069FB8 * ___GetMirrorTextureD3D11_33;
	// Valve.VR.IVRCompositor__ReleaseMirrorTextureD3D11 Valve.VR.IVRCompositor::ReleaseMirrorTextureD3D11
	_ReleaseMirrorTextureD3D11_tD5895D0FC5B1A609E2E53A9F6A5C74EA68B942ED * ___ReleaseMirrorTextureD3D11_34;
	// Valve.VR.IVRCompositor__GetMirrorTextureGL Valve.VR.IVRCompositor::GetMirrorTextureGL
	_GetMirrorTextureGL_t50B5BE7FFEE8616FF874BAF2C2AF05898F0C9328 * ___GetMirrorTextureGL_35;
	// Valve.VR.IVRCompositor__ReleaseSharedGLTexture Valve.VR.IVRCompositor::ReleaseSharedGLTexture
	_ReleaseSharedGLTexture_t4EAF2DEAA554E95A148CCC62460AA630159B342A * ___ReleaseSharedGLTexture_36;
	// Valve.VR.IVRCompositor__LockGLSharedTextureForAccess Valve.VR.IVRCompositor::LockGLSharedTextureForAccess
	_LockGLSharedTextureForAccess_t4455F055E92E573DC7A8FD6C490A9AA90A888011 * ___LockGLSharedTextureForAccess_37;
	// Valve.VR.IVRCompositor__UnlockGLSharedTextureForAccess Valve.VR.IVRCompositor::UnlockGLSharedTextureForAccess
	_UnlockGLSharedTextureForAccess_tF654CBBC933AAC2FAB5B9E7702A1F6E130250B67 * ___UnlockGLSharedTextureForAccess_38;
	// Valve.VR.IVRCompositor__GetVulkanInstanceExtensionsRequired Valve.VR.IVRCompositor::GetVulkanInstanceExtensionsRequired
	_GetVulkanInstanceExtensionsRequired_t9751CFE333A87BB7FBCD392C4BC9F0DC2D1C5153 * ___GetVulkanInstanceExtensionsRequired_39;
	// Valve.VR.IVRCompositor__GetVulkanDeviceExtensionsRequired Valve.VR.IVRCompositor::GetVulkanDeviceExtensionsRequired
	_GetVulkanDeviceExtensionsRequired_tCC05B455C0965E80ADBBD3B7BCF1F27FED8C0D7A * ___GetVulkanDeviceExtensionsRequired_40;
	// Valve.VR.IVRCompositor__SetExplicitTimingMode Valve.VR.IVRCompositor::SetExplicitTimingMode
	_SetExplicitTimingMode_tB9F2ED124C61E42FF38352711118877D470D69B1 * ___SetExplicitTimingMode_41;
	// Valve.VR.IVRCompositor__SubmitExplicitTimingData Valve.VR.IVRCompositor::SubmitExplicitTimingData
	_SubmitExplicitTimingData_t039BD93DD97E6020AA0C5AC1E6C7AC9FBE5390EC * ___SubmitExplicitTimingData_42;
	// Valve.VR.IVRCompositor__IsMotionSmoothingEnabled Valve.VR.IVRCompositor::IsMotionSmoothingEnabled
	_IsMotionSmoothingEnabled_t7FEC42C083D4FE3D908A21DFC5F4F77C67739920 * ___IsMotionSmoothingEnabled_43;
	// Valve.VR.IVRCompositor__IsMotionSmoothingSupported Valve.VR.IVRCompositor::IsMotionSmoothingSupported
	_IsMotionSmoothingSupported_t5F76D030811D39ABABFFBCF99AA6F0C5786C3BD8 * ___IsMotionSmoothingSupported_44;
	// Valve.VR.IVRCompositor__IsCurrentSceneFocusAppLoading Valve.VR.IVRCompositor::IsCurrentSceneFocusAppLoading
	_IsCurrentSceneFocusAppLoading_t392DA4A7C28A1CDA9865CF18B8C2FD519EC71E70 * ___IsCurrentSceneFocusAppLoading_45;
	// Valve.VR.IVRCompositor__SetStageOverride_Async Valve.VR.IVRCompositor::SetStageOverride_Async
	_SetStageOverride_Async_t781CA9835AF190B2729A37A8E5BB5DF143DD32BA * ___SetStageOverride_Async_46;
	// Valve.VR.IVRCompositor__ClearStageOverride Valve.VR.IVRCompositor::ClearStageOverride
	_ClearStageOverride_tB488A86430006C3CA94432039471F0C25023B8A6 * ___ClearStageOverride_47;
	// Valve.VR.IVRCompositor__GetCompositorBenchmarkResults Valve.VR.IVRCompositor::GetCompositorBenchmarkResults
	_GetCompositorBenchmarkResults_tB2C659809CCAA2BE44A5F4179ADBED5759E912C8 * ___GetCompositorBenchmarkResults_48;
	// Valve.VR.IVRCompositor__GetLastPosePredictionIDs Valve.VR.IVRCompositor::GetLastPosePredictionIDs
	_GetLastPosePredictionIDs_t33EDCA00D00EC065C5EF0E3206AA18CBB0E2F009 * ___GetLastPosePredictionIDs_49;
	// Valve.VR.IVRCompositor__GetPosesForFrame Valve.VR.IVRCompositor::GetPosesForFrame
	_GetPosesForFrame_t2E59880E3A298AE799E6E71D68BED9A95ABE1F06 * ___GetPosesForFrame_50;

public:
	inline static int32_t get_offset_of_SetTrackingSpace_0() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___SetTrackingSpace_0)); }
	inline _SetTrackingSpace_tDAC6F374480D3A83BE4C1C0CC6525D543BC8D7D6 * get_SetTrackingSpace_0() const { return ___SetTrackingSpace_0; }
	inline _SetTrackingSpace_tDAC6F374480D3A83BE4C1C0CC6525D543BC8D7D6 ** get_address_of_SetTrackingSpace_0() { return &___SetTrackingSpace_0; }
	inline void set_SetTrackingSpace_0(_SetTrackingSpace_tDAC6F374480D3A83BE4C1C0CC6525D543BC8D7D6 * value)
	{
		___SetTrackingSpace_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetTrackingSpace_0), (void*)value);
	}

	inline static int32_t get_offset_of_GetTrackingSpace_1() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetTrackingSpace_1)); }
	inline _GetTrackingSpace_tF0B604887238FB14F8B2DAD3C935CBD74444EC34 * get_GetTrackingSpace_1() const { return ___GetTrackingSpace_1; }
	inline _GetTrackingSpace_tF0B604887238FB14F8B2DAD3C935CBD74444EC34 ** get_address_of_GetTrackingSpace_1() { return &___GetTrackingSpace_1; }
	inline void set_GetTrackingSpace_1(_GetTrackingSpace_tF0B604887238FB14F8B2DAD3C935CBD74444EC34 * value)
	{
		___GetTrackingSpace_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetTrackingSpace_1), (void*)value);
	}

	inline static int32_t get_offset_of_WaitGetPoses_2() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___WaitGetPoses_2)); }
	inline _WaitGetPoses_t44D69BD3F698D7DB94A2351E1FDFEA3D1DA9C3B5 * get_WaitGetPoses_2() const { return ___WaitGetPoses_2; }
	inline _WaitGetPoses_t44D69BD3F698D7DB94A2351E1FDFEA3D1DA9C3B5 ** get_address_of_WaitGetPoses_2() { return &___WaitGetPoses_2; }
	inline void set_WaitGetPoses_2(_WaitGetPoses_t44D69BD3F698D7DB94A2351E1FDFEA3D1DA9C3B5 * value)
	{
		___WaitGetPoses_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___WaitGetPoses_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetLastPoses_3() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetLastPoses_3)); }
	inline _GetLastPoses_t877DF4406C3AC035C9ABCB128E63F54D3F5AB2A7 * get_GetLastPoses_3() const { return ___GetLastPoses_3; }
	inline _GetLastPoses_t877DF4406C3AC035C9ABCB128E63F54D3F5AB2A7 ** get_address_of_GetLastPoses_3() { return &___GetLastPoses_3; }
	inline void set_GetLastPoses_3(_GetLastPoses_t877DF4406C3AC035C9ABCB128E63F54D3F5AB2A7 * value)
	{
		___GetLastPoses_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetLastPoses_3), (void*)value);
	}

	inline static int32_t get_offset_of_GetLastPoseForTrackedDeviceIndex_4() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetLastPoseForTrackedDeviceIndex_4)); }
	inline _GetLastPoseForTrackedDeviceIndex_t05CF8BE0EE9758E4AFE7EC6F14BF25BD287B40F7 * get_GetLastPoseForTrackedDeviceIndex_4() const { return ___GetLastPoseForTrackedDeviceIndex_4; }
	inline _GetLastPoseForTrackedDeviceIndex_t05CF8BE0EE9758E4AFE7EC6F14BF25BD287B40F7 ** get_address_of_GetLastPoseForTrackedDeviceIndex_4() { return &___GetLastPoseForTrackedDeviceIndex_4; }
	inline void set_GetLastPoseForTrackedDeviceIndex_4(_GetLastPoseForTrackedDeviceIndex_t05CF8BE0EE9758E4AFE7EC6F14BF25BD287B40F7 * value)
	{
		___GetLastPoseForTrackedDeviceIndex_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetLastPoseForTrackedDeviceIndex_4), (void*)value);
	}

	inline static int32_t get_offset_of_Submit_5() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___Submit_5)); }
	inline _Submit_t80D004BD057D9431F39A5D22809D5A68B9F0B1D2 * get_Submit_5() const { return ___Submit_5; }
	inline _Submit_t80D004BD057D9431F39A5D22809D5A68B9F0B1D2 ** get_address_of_Submit_5() { return &___Submit_5; }
	inline void set_Submit_5(_Submit_t80D004BD057D9431F39A5D22809D5A68B9F0B1D2 * value)
	{
		___Submit_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Submit_5), (void*)value);
	}

	inline static int32_t get_offset_of_ClearLastSubmittedFrame_6() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ClearLastSubmittedFrame_6)); }
	inline _ClearLastSubmittedFrame_t969F59C8BF5960DC8F77A0115F0175501573FC04 * get_ClearLastSubmittedFrame_6() const { return ___ClearLastSubmittedFrame_6; }
	inline _ClearLastSubmittedFrame_t969F59C8BF5960DC8F77A0115F0175501573FC04 ** get_address_of_ClearLastSubmittedFrame_6() { return &___ClearLastSubmittedFrame_6; }
	inline void set_ClearLastSubmittedFrame_6(_ClearLastSubmittedFrame_t969F59C8BF5960DC8F77A0115F0175501573FC04 * value)
	{
		___ClearLastSubmittedFrame_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ClearLastSubmittedFrame_6), (void*)value);
	}

	inline static int32_t get_offset_of_PostPresentHandoff_7() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___PostPresentHandoff_7)); }
	inline _PostPresentHandoff_t2DA780AB403F80C444E2508DB828BB0D7AA22296 * get_PostPresentHandoff_7() const { return ___PostPresentHandoff_7; }
	inline _PostPresentHandoff_t2DA780AB403F80C444E2508DB828BB0D7AA22296 ** get_address_of_PostPresentHandoff_7() { return &___PostPresentHandoff_7; }
	inline void set_PostPresentHandoff_7(_PostPresentHandoff_t2DA780AB403F80C444E2508DB828BB0D7AA22296 * value)
	{
		___PostPresentHandoff_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___PostPresentHandoff_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetFrameTiming_8() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetFrameTiming_8)); }
	inline _GetFrameTiming_tF72A3B101432CF529D180E6E69CA2DDEC58EB241 * get_GetFrameTiming_8() const { return ___GetFrameTiming_8; }
	inline _GetFrameTiming_tF72A3B101432CF529D180E6E69CA2DDEC58EB241 ** get_address_of_GetFrameTiming_8() { return &___GetFrameTiming_8; }
	inline void set_GetFrameTiming_8(_GetFrameTiming_tF72A3B101432CF529D180E6E69CA2DDEC58EB241 * value)
	{
		___GetFrameTiming_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetFrameTiming_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetFrameTimings_9() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetFrameTimings_9)); }
	inline _GetFrameTimings_tE3353CDF4C760697793654FBA910DDD49EF6EC2C * get_GetFrameTimings_9() const { return ___GetFrameTimings_9; }
	inline _GetFrameTimings_tE3353CDF4C760697793654FBA910DDD49EF6EC2C ** get_address_of_GetFrameTimings_9() { return &___GetFrameTimings_9; }
	inline void set_GetFrameTimings_9(_GetFrameTimings_tE3353CDF4C760697793654FBA910DDD49EF6EC2C * value)
	{
		___GetFrameTimings_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetFrameTimings_9), (void*)value);
	}

	inline static int32_t get_offset_of_GetFrameTimeRemaining_10() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetFrameTimeRemaining_10)); }
	inline _GetFrameTimeRemaining_tAFC5580926959947E3DD985F1B8232B3419DF96C * get_GetFrameTimeRemaining_10() const { return ___GetFrameTimeRemaining_10; }
	inline _GetFrameTimeRemaining_tAFC5580926959947E3DD985F1B8232B3419DF96C ** get_address_of_GetFrameTimeRemaining_10() { return &___GetFrameTimeRemaining_10; }
	inline void set_GetFrameTimeRemaining_10(_GetFrameTimeRemaining_tAFC5580926959947E3DD985F1B8232B3419DF96C * value)
	{
		___GetFrameTimeRemaining_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetFrameTimeRemaining_10), (void*)value);
	}

	inline static int32_t get_offset_of_GetCumulativeStats_11() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetCumulativeStats_11)); }
	inline _GetCumulativeStats_t1106FF48E357EC92BB3568A7D4C6A35CB50E7506 * get_GetCumulativeStats_11() const { return ___GetCumulativeStats_11; }
	inline _GetCumulativeStats_t1106FF48E357EC92BB3568A7D4C6A35CB50E7506 ** get_address_of_GetCumulativeStats_11() { return &___GetCumulativeStats_11; }
	inline void set_GetCumulativeStats_11(_GetCumulativeStats_t1106FF48E357EC92BB3568A7D4C6A35CB50E7506 * value)
	{
		___GetCumulativeStats_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCumulativeStats_11), (void*)value);
	}

	inline static int32_t get_offset_of_FadeToColor_12() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___FadeToColor_12)); }
	inline _FadeToColor_tCBF39ACC5136AE7F23D3C035A5C4677A2DE597E8 * get_FadeToColor_12() const { return ___FadeToColor_12; }
	inline _FadeToColor_tCBF39ACC5136AE7F23D3C035A5C4677A2DE597E8 ** get_address_of_FadeToColor_12() { return &___FadeToColor_12; }
	inline void set_FadeToColor_12(_FadeToColor_tCBF39ACC5136AE7F23D3C035A5C4677A2DE597E8 * value)
	{
		___FadeToColor_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FadeToColor_12), (void*)value);
	}

	inline static int32_t get_offset_of_GetCurrentFadeColor_13() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetCurrentFadeColor_13)); }
	inline _GetCurrentFadeColor_t0760486B9A0AD7E2768E3E94C96CD17F6F87368E * get_GetCurrentFadeColor_13() const { return ___GetCurrentFadeColor_13; }
	inline _GetCurrentFadeColor_t0760486B9A0AD7E2768E3E94C96CD17F6F87368E ** get_address_of_GetCurrentFadeColor_13() { return &___GetCurrentFadeColor_13; }
	inline void set_GetCurrentFadeColor_13(_GetCurrentFadeColor_t0760486B9A0AD7E2768E3E94C96CD17F6F87368E * value)
	{
		___GetCurrentFadeColor_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCurrentFadeColor_13), (void*)value);
	}

	inline static int32_t get_offset_of_FadeGrid_14() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___FadeGrid_14)); }
	inline _FadeGrid_t4D11F0591C69AB2A3E55A6437C3287C9D9009A56 * get_FadeGrid_14() const { return ___FadeGrid_14; }
	inline _FadeGrid_t4D11F0591C69AB2A3E55A6437C3287C9D9009A56 ** get_address_of_FadeGrid_14() { return &___FadeGrid_14; }
	inline void set_FadeGrid_14(_FadeGrid_t4D11F0591C69AB2A3E55A6437C3287C9D9009A56 * value)
	{
		___FadeGrid_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FadeGrid_14), (void*)value);
	}

	inline static int32_t get_offset_of_GetCurrentGridAlpha_15() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetCurrentGridAlpha_15)); }
	inline _GetCurrentGridAlpha_t09CBC75362318D28B915C57BCE32C0542BECA0A6 * get_GetCurrentGridAlpha_15() const { return ___GetCurrentGridAlpha_15; }
	inline _GetCurrentGridAlpha_t09CBC75362318D28B915C57BCE32C0542BECA0A6 ** get_address_of_GetCurrentGridAlpha_15() { return &___GetCurrentGridAlpha_15; }
	inline void set_GetCurrentGridAlpha_15(_GetCurrentGridAlpha_t09CBC75362318D28B915C57BCE32C0542BECA0A6 * value)
	{
		___GetCurrentGridAlpha_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCurrentGridAlpha_15), (void*)value);
	}

	inline static int32_t get_offset_of_SetSkyboxOverride_16() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___SetSkyboxOverride_16)); }
	inline _SetSkyboxOverride_tC5019711FFA65B037E95A4F3A8BCB8B63A2690CD * get_SetSkyboxOverride_16() const { return ___SetSkyboxOverride_16; }
	inline _SetSkyboxOverride_tC5019711FFA65B037E95A4F3A8BCB8B63A2690CD ** get_address_of_SetSkyboxOverride_16() { return &___SetSkyboxOverride_16; }
	inline void set_SetSkyboxOverride_16(_SetSkyboxOverride_tC5019711FFA65B037E95A4F3A8BCB8B63A2690CD * value)
	{
		___SetSkyboxOverride_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetSkyboxOverride_16), (void*)value);
	}

	inline static int32_t get_offset_of_ClearSkyboxOverride_17() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ClearSkyboxOverride_17)); }
	inline _ClearSkyboxOverride_tBCB6CDEB6C6666B82FBE0AEDC560CECF4DE1D971 * get_ClearSkyboxOverride_17() const { return ___ClearSkyboxOverride_17; }
	inline _ClearSkyboxOverride_tBCB6CDEB6C6666B82FBE0AEDC560CECF4DE1D971 ** get_address_of_ClearSkyboxOverride_17() { return &___ClearSkyboxOverride_17; }
	inline void set_ClearSkyboxOverride_17(_ClearSkyboxOverride_tBCB6CDEB6C6666B82FBE0AEDC560CECF4DE1D971 * value)
	{
		___ClearSkyboxOverride_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ClearSkyboxOverride_17), (void*)value);
	}

	inline static int32_t get_offset_of_CompositorBringToFront_18() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___CompositorBringToFront_18)); }
	inline _CompositorBringToFront_tE24705ABB39CFB124042B89DAC3C38BB1F85795C * get_CompositorBringToFront_18() const { return ___CompositorBringToFront_18; }
	inline _CompositorBringToFront_tE24705ABB39CFB124042B89DAC3C38BB1F85795C ** get_address_of_CompositorBringToFront_18() { return &___CompositorBringToFront_18; }
	inline void set_CompositorBringToFront_18(_CompositorBringToFront_tE24705ABB39CFB124042B89DAC3C38BB1F85795C * value)
	{
		___CompositorBringToFront_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CompositorBringToFront_18), (void*)value);
	}

	inline static int32_t get_offset_of_CompositorGoToBack_19() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___CompositorGoToBack_19)); }
	inline _CompositorGoToBack_tF3E1201BFC1F50E0784404489C3E552797E43346 * get_CompositorGoToBack_19() const { return ___CompositorGoToBack_19; }
	inline _CompositorGoToBack_tF3E1201BFC1F50E0784404489C3E552797E43346 ** get_address_of_CompositorGoToBack_19() { return &___CompositorGoToBack_19; }
	inline void set_CompositorGoToBack_19(_CompositorGoToBack_tF3E1201BFC1F50E0784404489C3E552797E43346 * value)
	{
		___CompositorGoToBack_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CompositorGoToBack_19), (void*)value);
	}

	inline static int32_t get_offset_of_CompositorQuit_20() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___CompositorQuit_20)); }
	inline _CompositorQuit_t640663BAA37F6746BE5809D4AFD80EC61C568902 * get_CompositorQuit_20() const { return ___CompositorQuit_20; }
	inline _CompositorQuit_t640663BAA37F6746BE5809D4AFD80EC61C568902 ** get_address_of_CompositorQuit_20() { return &___CompositorQuit_20; }
	inline void set_CompositorQuit_20(_CompositorQuit_t640663BAA37F6746BE5809D4AFD80EC61C568902 * value)
	{
		___CompositorQuit_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CompositorQuit_20), (void*)value);
	}

	inline static int32_t get_offset_of_IsFullscreen_21() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___IsFullscreen_21)); }
	inline _IsFullscreen_t7D2C12F6A41A525E0D22CD1FCEAA101AD6D194D0 * get_IsFullscreen_21() const { return ___IsFullscreen_21; }
	inline _IsFullscreen_t7D2C12F6A41A525E0D22CD1FCEAA101AD6D194D0 ** get_address_of_IsFullscreen_21() { return &___IsFullscreen_21; }
	inline void set_IsFullscreen_21(_IsFullscreen_t7D2C12F6A41A525E0D22CD1FCEAA101AD6D194D0 * value)
	{
		___IsFullscreen_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsFullscreen_21), (void*)value);
	}

	inline static int32_t get_offset_of_GetCurrentSceneFocusProcess_22() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetCurrentSceneFocusProcess_22)); }
	inline _GetCurrentSceneFocusProcess_t828C1D2E50898584E302A12EF23D5DF3B85A66D5 * get_GetCurrentSceneFocusProcess_22() const { return ___GetCurrentSceneFocusProcess_22; }
	inline _GetCurrentSceneFocusProcess_t828C1D2E50898584E302A12EF23D5DF3B85A66D5 ** get_address_of_GetCurrentSceneFocusProcess_22() { return &___GetCurrentSceneFocusProcess_22; }
	inline void set_GetCurrentSceneFocusProcess_22(_GetCurrentSceneFocusProcess_t828C1D2E50898584E302A12EF23D5DF3B85A66D5 * value)
	{
		___GetCurrentSceneFocusProcess_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCurrentSceneFocusProcess_22), (void*)value);
	}

	inline static int32_t get_offset_of_GetLastFrameRenderer_23() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetLastFrameRenderer_23)); }
	inline _GetLastFrameRenderer_tF6A454F9792D13D6CCBAC715E9B8EC5C9ED5476C * get_GetLastFrameRenderer_23() const { return ___GetLastFrameRenderer_23; }
	inline _GetLastFrameRenderer_tF6A454F9792D13D6CCBAC715E9B8EC5C9ED5476C ** get_address_of_GetLastFrameRenderer_23() { return &___GetLastFrameRenderer_23; }
	inline void set_GetLastFrameRenderer_23(_GetLastFrameRenderer_tF6A454F9792D13D6CCBAC715E9B8EC5C9ED5476C * value)
	{
		___GetLastFrameRenderer_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetLastFrameRenderer_23), (void*)value);
	}

	inline static int32_t get_offset_of_CanRenderScene_24() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___CanRenderScene_24)); }
	inline _CanRenderScene_tDE40584447362CABAFD6B784430D04869B26118B * get_CanRenderScene_24() const { return ___CanRenderScene_24; }
	inline _CanRenderScene_tDE40584447362CABAFD6B784430D04869B26118B ** get_address_of_CanRenderScene_24() { return &___CanRenderScene_24; }
	inline void set_CanRenderScene_24(_CanRenderScene_tDE40584447362CABAFD6B784430D04869B26118B * value)
	{
		___CanRenderScene_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CanRenderScene_24), (void*)value);
	}

	inline static int32_t get_offset_of_ShowMirrorWindow_25() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ShowMirrorWindow_25)); }
	inline _ShowMirrorWindow_t8C04F03CF7C80BB81F0499DFD76073FE969644B5 * get_ShowMirrorWindow_25() const { return ___ShowMirrorWindow_25; }
	inline _ShowMirrorWindow_t8C04F03CF7C80BB81F0499DFD76073FE969644B5 ** get_address_of_ShowMirrorWindow_25() { return &___ShowMirrorWindow_25; }
	inline void set_ShowMirrorWindow_25(_ShowMirrorWindow_t8C04F03CF7C80BB81F0499DFD76073FE969644B5 * value)
	{
		___ShowMirrorWindow_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowMirrorWindow_25), (void*)value);
	}

	inline static int32_t get_offset_of_HideMirrorWindow_26() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___HideMirrorWindow_26)); }
	inline _HideMirrorWindow_t4A3D32F44081DF29C9A6104F0FC6C556399D706E * get_HideMirrorWindow_26() const { return ___HideMirrorWindow_26; }
	inline _HideMirrorWindow_t4A3D32F44081DF29C9A6104F0FC6C556399D706E ** get_address_of_HideMirrorWindow_26() { return &___HideMirrorWindow_26; }
	inline void set_HideMirrorWindow_26(_HideMirrorWindow_t4A3D32F44081DF29C9A6104F0FC6C556399D706E * value)
	{
		___HideMirrorWindow_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___HideMirrorWindow_26), (void*)value);
	}

	inline static int32_t get_offset_of_IsMirrorWindowVisible_27() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___IsMirrorWindowVisible_27)); }
	inline _IsMirrorWindowVisible_t7B3DE5AD3A0163C9BDD47BD1FBC05D9125221BFC * get_IsMirrorWindowVisible_27() const { return ___IsMirrorWindowVisible_27; }
	inline _IsMirrorWindowVisible_t7B3DE5AD3A0163C9BDD47BD1FBC05D9125221BFC ** get_address_of_IsMirrorWindowVisible_27() { return &___IsMirrorWindowVisible_27; }
	inline void set_IsMirrorWindowVisible_27(_IsMirrorWindowVisible_t7B3DE5AD3A0163C9BDD47BD1FBC05D9125221BFC * value)
	{
		___IsMirrorWindowVisible_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsMirrorWindowVisible_27), (void*)value);
	}

	inline static int32_t get_offset_of_CompositorDumpImages_28() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___CompositorDumpImages_28)); }
	inline _CompositorDumpImages_t81E6DBB82D35105B8D16AD44BDCCAD3624F3E81D * get_CompositorDumpImages_28() const { return ___CompositorDumpImages_28; }
	inline _CompositorDumpImages_t81E6DBB82D35105B8D16AD44BDCCAD3624F3E81D ** get_address_of_CompositorDumpImages_28() { return &___CompositorDumpImages_28; }
	inline void set_CompositorDumpImages_28(_CompositorDumpImages_t81E6DBB82D35105B8D16AD44BDCCAD3624F3E81D * value)
	{
		___CompositorDumpImages_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___CompositorDumpImages_28), (void*)value);
	}

	inline static int32_t get_offset_of_ShouldAppRenderWithLowResources_29() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ShouldAppRenderWithLowResources_29)); }
	inline _ShouldAppRenderWithLowResources_t07BEE5FBB23B1DDA47EE6C459CEEE5702E8A17BE * get_ShouldAppRenderWithLowResources_29() const { return ___ShouldAppRenderWithLowResources_29; }
	inline _ShouldAppRenderWithLowResources_t07BEE5FBB23B1DDA47EE6C459CEEE5702E8A17BE ** get_address_of_ShouldAppRenderWithLowResources_29() { return &___ShouldAppRenderWithLowResources_29; }
	inline void set_ShouldAppRenderWithLowResources_29(_ShouldAppRenderWithLowResources_t07BEE5FBB23B1DDA47EE6C459CEEE5702E8A17BE * value)
	{
		___ShouldAppRenderWithLowResources_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShouldAppRenderWithLowResources_29), (void*)value);
	}

	inline static int32_t get_offset_of_ForceInterleavedReprojectionOn_30() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ForceInterleavedReprojectionOn_30)); }
	inline _ForceInterleavedReprojectionOn_tF28FFD3507DC2B8D195A004B96D0790B439862CB * get_ForceInterleavedReprojectionOn_30() const { return ___ForceInterleavedReprojectionOn_30; }
	inline _ForceInterleavedReprojectionOn_tF28FFD3507DC2B8D195A004B96D0790B439862CB ** get_address_of_ForceInterleavedReprojectionOn_30() { return &___ForceInterleavedReprojectionOn_30; }
	inline void set_ForceInterleavedReprojectionOn_30(_ForceInterleavedReprojectionOn_tF28FFD3507DC2B8D195A004B96D0790B439862CB * value)
	{
		___ForceInterleavedReprojectionOn_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ForceInterleavedReprojectionOn_30), (void*)value);
	}

	inline static int32_t get_offset_of_ForceReconnectProcess_31() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ForceReconnectProcess_31)); }
	inline _ForceReconnectProcess_t05157A153AAD86C2875B13E6EE4B4CAA836F0E07 * get_ForceReconnectProcess_31() const { return ___ForceReconnectProcess_31; }
	inline _ForceReconnectProcess_t05157A153AAD86C2875B13E6EE4B4CAA836F0E07 ** get_address_of_ForceReconnectProcess_31() { return &___ForceReconnectProcess_31; }
	inline void set_ForceReconnectProcess_31(_ForceReconnectProcess_t05157A153AAD86C2875B13E6EE4B4CAA836F0E07 * value)
	{
		___ForceReconnectProcess_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ForceReconnectProcess_31), (void*)value);
	}

	inline static int32_t get_offset_of_SuspendRendering_32() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___SuspendRendering_32)); }
	inline _SuspendRendering_tC812DC4CE9D26AF62AC7E37E0FF3E120EC2DC008 * get_SuspendRendering_32() const { return ___SuspendRendering_32; }
	inline _SuspendRendering_tC812DC4CE9D26AF62AC7E37E0FF3E120EC2DC008 ** get_address_of_SuspendRendering_32() { return &___SuspendRendering_32; }
	inline void set_SuspendRendering_32(_SuspendRendering_tC812DC4CE9D26AF62AC7E37E0FF3E120EC2DC008 * value)
	{
		___SuspendRendering_32 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SuspendRendering_32), (void*)value);
	}

	inline static int32_t get_offset_of_GetMirrorTextureD3D11_33() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetMirrorTextureD3D11_33)); }
	inline _GetMirrorTextureD3D11_t3821C937B45635C32287945301C38059DB069FB8 * get_GetMirrorTextureD3D11_33() const { return ___GetMirrorTextureD3D11_33; }
	inline _GetMirrorTextureD3D11_t3821C937B45635C32287945301C38059DB069FB8 ** get_address_of_GetMirrorTextureD3D11_33() { return &___GetMirrorTextureD3D11_33; }
	inline void set_GetMirrorTextureD3D11_33(_GetMirrorTextureD3D11_t3821C937B45635C32287945301C38059DB069FB8 * value)
	{
		___GetMirrorTextureD3D11_33 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetMirrorTextureD3D11_33), (void*)value);
	}

	inline static int32_t get_offset_of_ReleaseMirrorTextureD3D11_34() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ReleaseMirrorTextureD3D11_34)); }
	inline _ReleaseMirrorTextureD3D11_tD5895D0FC5B1A609E2E53A9F6A5C74EA68B942ED * get_ReleaseMirrorTextureD3D11_34() const { return ___ReleaseMirrorTextureD3D11_34; }
	inline _ReleaseMirrorTextureD3D11_tD5895D0FC5B1A609E2E53A9F6A5C74EA68B942ED ** get_address_of_ReleaseMirrorTextureD3D11_34() { return &___ReleaseMirrorTextureD3D11_34; }
	inline void set_ReleaseMirrorTextureD3D11_34(_ReleaseMirrorTextureD3D11_tD5895D0FC5B1A609E2E53A9F6A5C74EA68B942ED * value)
	{
		___ReleaseMirrorTextureD3D11_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ReleaseMirrorTextureD3D11_34), (void*)value);
	}

	inline static int32_t get_offset_of_GetMirrorTextureGL_35() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetMirrorTextureGL_35)); }
	inline _GetMirrorTextureGL_t50B5BE7FFEE8616FF874BAF2C2AF05898F0C9328 * get_GetMirrorTextureGL_35() const { return ___GetMirrorTextureGL_35; }
	inline _GetMirrorTextureGL_t50B5BE7FFEE8616FF874BAF2C2AF05898F0C9328 ** get_address_of_GetMirrorTextureGL_35() { return &___GetMirrorTextureGL_35; }
	inline void set_GetMirrorTextureGL_35(_GetMirrorTextureGL_t50B5BE7FFEE8616FF874BAF2C2AF05898F0C9328 * value)
	{
		___GetMirrorTextureGL_35 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetMirrorTextureGL_35), (void*)value);
	}

	inline static int32_t get_offset_of_ReleaseSharedGLTexture_36() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ReleaseSharedGLTexture_36)); }
	inline _ReleaseSharedGLTexture_t4EAF2DEAA554E95A148CCC62460AA630159B342A * get_ReleaseSharedGLTexture_36() const { return ___ReleaseSharedGLTexture_36; }
	inline _ReleaseSharedGLTexture_t4EAF2DEAA554E95A148CCC62460AA630159B342A ** get_address_of_ReleaseSharedGLTexture_36() { return &___ReleaseSharedGLTexture_36; }
	inline void set_ReleaseSharedGLTexture_36(_ReleaseSharedGLTexture_t4EAF2DEAA554E95A148CCC62460AA630159B342A * value)
	{
		___ReleaseSharedGLTexture_36 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ReleaseSharedGLTexture_36), (void*)value);
	}

	inline static int32_t get_offset_of_LockGLSharedTextureForAccess_37() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___LockGLSharedTextureForAccess_37)); }
	inline _LockGLSharedTextureForAccess_t4455F055E92E573DC7A8FD6C490A9AA90A888011 * get_LockGLSharedTextureForAccess_37() const { return ___LockGLSharedTextureForAccess_37; }
	inline _LockGLSharedTextureForAccess_t4455F055E92E573DC7A8FD6C490A9AA90A888011 ** get_address_of_LockGLSharedTextureForAccess_37() { return &___LockGLSharedTextureForAccess_37; }
	inline void set_LockGLSharedTextureForAccess_37(_LockGLSharedTextureForAccess_t4455F055E92E573DC7A8FD6C490A9AA90A888011 * value)
	{
		___LockGLSharedTextureForAccess_37 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___LockGLSharedTextureForAccess_37), (void*)value);
	}

	inline static int32_t get_offset_of_UnlockGLSharedTextureForAccess_38() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___UnlockGLSharedTextureForAccess_38)); }
	inline _UnlockGLSharedTextureForAccess_tF654CBBC933AAC2FAB5B9E7702A1F6E130250B67 * get_UnlockGLSharedTextureForAccess_38() const { return ___UnlockGLSharedTextureForAccess_38; }
	inline _UnlockGLSharedTextureForAccess_tF654CBBC933AAC2FAB5B9E7702A1F6E130250B67 ** get_address_of_UnlockGLSharedTextureForAccess_38() { return &___UnlockGLSharedTextureForAccess_38; }
	inline void set_UnlockGLSharedTextureForAccess_38(_UnlockGLSharedTextureForAccess_tF654CBBC933AAC2FAB5B9E7702A1F6E130250B67 * value)
	{
		___UnlockGLSharedTextureForAccess_38 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___UnlockGLSharedTextureForAccess_38), (void*)value);
	}

	inline static int32_t get_offset_of_GetVulkanInstanceExtensionsRequired_39() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetVulkanInstanceExtensionsRequired_39)); }
	inline _GetVulkanInstanceExtensionsRequired_t9751CFE333A87BB7FBCD392C4BC9F0DC2D1C5153 * get_GetVulkanInstanceExtensionsRequired_39() const { return ___GetVulkanInstanceExtensionsRequired_39; }
	inline _GetVulkanInstanceExtensionsRequired_t9751CFE333A87BB7FBCD392C4BC9F0DC2D1C5153 ** get_address_of_GetVulkanInstanceExtensionsRequired_39() { return &___GetVulkanInstanceExtensionsRequired_39; }
	inline void set_GetVulkanInstanceExtensionsRequired_39(_GetVulkanInstanceExtensionsRequired_t9751CFE333A87BB7FBCD392C4BC9F0DC2D1C5153 * value)
	{
		___GetVulkanInstanceExtensionsRequired_39 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetVulkanInstanceExtensionsRequired_39), (void*)value);
	}

	inline static int32_t get_offset_of_GetVulkanDeviceExtensionsRequired_40() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetVulkanDeviceExtensionsRequired_40)); }
	inline _GetVulkanDeviceExtensionsRequired_tCC05B455C0965E80ADBBD3B7BCF1F27FED8C0D7A * get_GetVulkanDeviceExtensionsRequired_40() const { return ___GetVulkanDeviceExtensionsRequired_40; }
	inline _GetVulkanDeviceExtensionsRequired_tCC05B455C0965E80ADBBD3B7BCF1F27FED8C0D7A ** get_address_of_GetVulkanDeviceExtensionsRequired_40() { return &___GetVulkanDeviceExtensionsRequired_40; }
	inline void set_GetVulkanDeviceExtensionsRequired_40(_GetVulkanDeviceExtensionsRequired_tCC05B455C0965E80ADBBD3B7BCF1F27FED8C0D7A * value)
	{
		___GetVulkanDeviceExtensionsRequired_40 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetVulkanDeviceExtensionsRequired_40), (void*)value);
	}

	inline static int32_t get_offset_of_SetExplicitTimingMode_41() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___SetExplicitTimingMode_41)); }
	inline _SetExplicitTimingMode_tB9F2ED124C61E42FF38352711118877D470D69B1 * get_SetExplicitTimingMode_41() const { return ___SetExplicitTimingMode_41; }
	inline _SetExplicitTimingMode_tB9F2ED124C61E42FF38352711118877D470D69B1 ** get_address_of_SetExplicitTimingMode_41() { return &___SetExplicitTimingMode_41; }
	inline void set_SetExplicitTimingMode_41(_SetExplicitTimingMode_tB9F2ED124C61E42FF38352711118877D470D69B1 * value)
	{
		___SetExplicitTimingMode_41 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetExplicitTimingMode_41), (void*)value);
	}

	inline static int32_t get_offset_of_SubmitExplicitTimingData_42() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___SubmitExplicitTimingData_42)); }
	inline _SubmitExplicitTimingData_t039BD93DD97E6020AA0C5AC1E6C7AC9FBE5390EC * get_SubmitExplicitTimingData_42() const { return ___SubmitExplicitTimingData_42; }
	inline _SubmitExplicitTimingData_t039BD93DD97E6020AA0C5AC1E6C7AC9FBE5390EC ** get_address_of_SubmitExplicitTimingData_42() { return &___SubmitExplicitTimingData_42; }
	inline void set_SubmitExplicitTimingData_42(_SubmitExplicitTimingData_t039BD93DD97E6020AA0C5AC1E6C7AC9FBE5390EC * value)
	{
		___SubmitExplicitTimingData_42 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SubmitExplicitTimingData_42), (void*)value);
	}

	inline static int32_t get_offset_of_IsMotionSmoothingEnabled_43() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___IsMotionSmoothingEnabled_43)); }
	inline _IsMotionSmoothingEnabled_t7FEC42C083D4FE3D908A21DFC5F4F77C67739920 * get_IsMotionSmoothingEnabled_43() const { return ___IsMotionSmoothingEnabled_43; }
	inline _IsMotionSmoothingEnabled_t7FEC42C083D4FE3D908A21DFC5F4F77C67739920 ** get_address_of_IsMotionSmoothingEnabled_43() { return &___IsMotionSmoothingEnabled_43; }
	inline void set_IsMotionSmoothingEnabled_43(_IsMotionSmoothingEnabled_t7FEC42C083D4FE3D908A21DFC5F4F77C67739920 * value)
	{
		___IsMotionSmoothingEnabled_43 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsMotionSmoothingEnabled_43), (void*)value);
	}

	inline static int32_t get_offset_of_IsMotionSmoothingSupported_44() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___IsMotionSmoothingSupported_44)); }
	inline _IsMotionSmoothingSupported_t5F76D030811D39ABABFFBCF99AA6F0C5786C3BD8 * get_IsMotionSmoothingSupported_44() const { return ___IsMotionSmoothingSupported_44; }
	inline _IsMotionSmoothingSupported_t5F76D030811D39ABABFFBCF99AA6F0C5786C3BD8 ** get_address_of_IsMotionSmoothingSupported_44() { return &___IsMotionSmoothingSupported_44; }
	inline void set_IsMotionSmoothingSupported_44(_IsMotionSmoothingSupported_t5F76D030811D39ABABFFBCF99AA6F0C5786C3BD8 * value)
	{
		___IsMotionSmoothingSupported_44 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsMotionSmoothingSupported_44), (void*)value);
	}

	inline static int32_t get_offset_of_IsCurrentSceneFocusAppLoading_45() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___IsCurrentSceneFocusAppLoading_45)); }
	inline _IsCurrentSceneFocusAppLoading_t392DA4A7C28A1CDA9865CF18B8C2FD519EC71E70 * get_IsCurrentSceneFocusAppLoading_45() const { return ___IsCurrentSceneFocusAppLoading_45; }
	inline _IsCurrentSceneFocusAppLoading_t392DA4A7C28A1CDA9865CF18B8C2FD519EC71E70 ** get_address_of_IsCurrentSceneFocusAppLoading_45() { return &___IsCurrentSceneFocusAppLoading_45; }
	inline void set_IsCurrentSceneFocusAppLoading_45(_IsCurrentSceneFocusAppLoading_t392DA4A7C28A1CDA9865CF18B8C2FD519EC71E70 * value)
	{
		___IsCurrentSceneFocusAppLoading_45 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsCurrentSceneFocusAppLoading_45), (void*)value);
	}

	inline static int32_t get_offset_of_SetStageOverride_Async_46() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___SetStageOverride_Async_46)); }
	inline _SetStageOverride_Async_t781CA9835AF190B2729A37A8E5BB5DF143DD32BA * get_SetStageOverride_Async_46() const { return ___SetStageOverride_Async_46; }
	inline _SetStageOverride_Async_t781CA9835AF190B2729A37A8E5BB5DF143DD32BA ** get_address_of_SetStageOverride_Async_46() { return &___SetStageOverride_Async_46; }
	inline void set_SetStageOverride_Async_46(_SetStageOverride_Async_t781CA9835AF190B2729A37A8E5BB5DF143DD32BA * value)
	{
		___SetStageOverride_Async_46 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetStageOverride_Async_46), (void*)value);
	}

	inline static int32_t get_offset_of_ClearStageOverride_47() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___ClearStageOverride_47)); }
	inline _ClearStageOverride_tB488A86430006C3CA94432039471F0C25023B8A6 * get_ClearStageOverride_47() const { return ___ClearStageOverride_47; }
	inline _ClearStageOverride_tB488A86430006C3CA94432039471F0C25023B8A6 ** get_address_of_ClearStageOverride_47() { return &___ClearStageOverride_47; }
	inline void set_ClearStageOverride_47(_ClearStageOverride_tB488A86430006C3CA94432039471F0C25023B8A6 * value)
	{
		___ClearStageOverride_47 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ClearStageOverride_47), (void*)value);
	}

	inline static int32_t get_offset_of_GetCompositorBenchmarkResults_48() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetCompositorBenchmarkResults_48)); }
	inline _GetCompositorBenchmarkResults_tB2C659809CCAA2BE44A5F4179ADBED5759E912C8 * get_GetCompositorBenchmarkResults_48() const { return ___GetCompositorBenchmarkResults_48; }
	inline _GetCompositorBenchmarkResults_tB2C659809CCAA2BE44A5F4179ADBED5759E912C8 ** get_address_of_GetCompositorBenchmarkResults_48() { return &___GetCompositorBenchmarkResults_48; }
	inline void set_GetCompositorBenchmarkResults_48(_GetCompositorBenchmarkResults_tB2C659809CCAA2BE44A5F4179ADBED5759E912C8 * value)
	{
		___GetCompositorBenchmarkResults_48 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetCompositorBenchmarkResults_48), (void*)value);
	}

	inline static int32_t get_offset_of_GetLastPosePredictionIDs_49() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetLastPosePredictionIDs_49)); }
	inline _GetLastPosePredictionIDs_t33EDCA00D00EC065C5EF0E3206AA18CBB0E2F009 * get_GetLastPosePredictionIDs_49() const { return ___GetLastPosePredictionIDs_49; }
	inline _GetLastPosePredictionIDs_t33EDCA00D00EC065C5EF0E3206AA18CBB0E2F009 ** get_address_of_GetLastPosePredictionIDs_49() { return &___GetLastPosePredictionIDs_49; }
	inline void set_GetLastPosePredictionIDs_49(_GetLastPosePredictionIDs_t33EDCA00D00EC065C5EF0E3206AA18CBB0E2F009 * value)
	{
		___GetLastPosePredictionIDs_49 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetLastPosePredictionIDs_49), (void*)value);
	}

	inline static int32_t get_offset_of_GetPosesForFrame_50() { return static_cast<int32_t>(offsetof(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554, ___GetPosesForFrame_50)); }
	inline _GetPosesForFrame_t2E59880E3A298AE799E6E71D68BED9A95ABE1F06 * get_GetPosesForFrame_50() const { return ___GetPosesForFrame_50; }
	inline _GetPosesForFrame_t2E59880E3A298AE799E6E71D68BED9A95ABE1F06 ** get_address_of_GetPosesForFrame_50() { return &___GetPosesForFrame_50; }
	inline void set_GetPosesForFrame_50(_GetPosesForFrame_t2E59880E3A298AE799E6E71D68BED9A95ABE1F06 * value)
	{
		___GetPosesForFrame_50 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPosesForFrame_50), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRCompositor
struct IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554_marshaled_pinvoke
{
	Il2CppMethodPointer ___SetTrackingSpace_0;
	Il2CppMethodPointer ___GetTrackingSpace_1;
	Il2CppMethodPointer ___WaitGetPoses_2;
	Il2CppMethodPointer ___GetLastPoses_3;
	Il2CppMethodPointer ___GetLastPoseForTrackedDeviceIndex_4;
	Il2CppMethodPointer ___Submit_5;
	Il2CppMethodPointer ___ClearLastSubmittedFrame_6;
	Il2CppMethodPointer ___PostPresentHandoff_7;
	Il2CppMethodPointer ___GetFrameTiming_8;
	Il2CppMethodPointer ___GetFrameTimings_9;
	Il2CppMethodPointer ___GetFrameTimeRemaining_10;
	Il2CppMethodPointer ___GetCumulativeStats_11;
	Il2CppMethodPointer ___FadeToColor_12;
	Il2CppMethodPointer ___GetCurrentFadeColor_13;
	Il2CppMethodPointer ___FadeGrid_14;
	Il2CppMethodPointer ___GetCurrentGridAlpha_15;
	Il2CppMethodPointer ___SetSkyboxOverride_16;
	Il2CppMethodPointer ___ClearSkyboxOverride_17;
	Il2CppMethodPointer ___CompositorBringToFront_18;
	Il2CppMethodPointer ___CompositorGoToBack_19;
	Il2CppMethodPointer ___CompositorQuit_20;
	Il2CppMethodPointer ___IsFullscreen_21;
	Il2CppMethodPointer ___GetCurrentSceneFocusProcess_22;
	Il2CppMethodPointer ___GetLastFrameRenderer_23;
	Il2CppMethodPointer ___CanRenderScene_24;
	Il2CppMethodPointer ___ShowMirrorWindow_25;
	Il2CppMethodPointer ___HideMirrorWindow_26;
	Il2CppMethodPointer ___IsMirrorWindowVisible_27;
	Il2CppMethodPointer ___CompositorDumpImages_28;
	Il2CppMethodPointer ___ShouldAppRenderWithLowResources_29;
	Il2CppMethodPointer ___ForceInterleavedReprojectionOn_30;
	Il2CppMethodPointer ___ForceReconnectProcess_31;
	Il2CppMethodPointer ___SuspendRendering_32;
	Il2CppMethodPointer ___GetMirrorTextureD3D11_33;
	Il2CppMethodPointer ___ReleaseMirrorTextureD3D11_34;
	Il2CppMethodPointer ___GetMirrorTextureGL_35;
	Il2CppMethodPointer ___ReleaseSharedGLTexture_36;
	Il2CppMethodPointer ___LockGLSharedTextureForAccess_37;
	Il2CppMethodPointer ___UnlockGLSharedTextureForAccess_38;
	Il2CppMethodPointer ___GetVulkanInstanceExtensionsRequired_39;
	Il2CppMethodPointer ___GetVulkanDeviceExtensionsRequired_40;
	Il2CppMethodPointer ___SetExplicitTimingMode_41;
	Il2CppMethodPointer ___SubmitExplicitTimingData_42;
	Il2CppMethodPointer ___IsMotionSmoothingEnabled_43;
	Il2CppMethodPointer ___IsMotionSmoothingSupported_44;
	Il2CppMethodPointer ___IsCurrentSceneFocusAppLoading_45;
	Il2CppMethodPointer ___SetStageOverride_Async_46;
	Il2CppMethodPointer ___ClearStageOverride_47;
	Il2CppMethodPointer ___GetCompositorBenchmarkResults_48;
	Il2CppMethodPointer ___GetLastPosePredictionIDs_49;
	Il2CppMethodPointer ___GetPosesForFrame_50;
};
// Native definition for COM marshalling of Valve.VR.IVRCompositor
struct IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554_marshaled_com
{
	Il2CppMethodPointer ___SetTrackingSpace_0;
	Il2CppMethodPointer ___GetTrackingSpace_1;
	Il2CppMethodPointer ___WaitGetPoses_2;
	Il2CppMethodPointer ___GetLastPoses_3;
	Il2CppMethodPointer ___GetLastPoseForTrackedDeviceIndex_4;
	Il2CppMethodPointer ___Submit_5;
	Il2CppMethodPointer ___ClearLastSubmittedFrame_6;
	Il2CppMethodPointer ___PostPresentHandoff_7;
	Il2CppMethodPointer ___GetFrameTiming_8;
	Il2CppMethodPointer ___GetFrameTimings_9;
	Il2CppMethodPointer ___GetFrameTimeRemaining_10;
	Il2CppMethodPointer ___GetCumulativeStats_11;
	Il2CppMethodPointer ___FadeToColor_12;
	Il2CppMethodPointer ___GetCurrentFadeColor_13;
	Il2CppMethodPointer ___FadeGrid_14;
	Il2CppMethodPointer ___GetCurrentGridAlpha_15;
	Il2CppMethodPointer ___SetSkyboxOverride_16;
	Il2CppMethodPointer ___ClearSkyboxOverride_17;
	Il2CppMethodPointer ___CompositorBringToFront_18;
	Il2CppMethodPointer ___CompositorGoToBack_19;
	Il2CppMethodPointer ___CompositorQuit_20;
	Il2CppMethodPointer ___IsFullscreen_21;
	Il2CppMethodPointer ___GetCurrentSceneFocusProcess_22;
	Il2CppMethodPointer ___GetLastFrameRenderer_23;
	Il2CppMethodPointer ___CanRenderScene_24;
	Il2CppMethodPointer ___ShowMirrorWindow_25;
	Il2CppMethodPointer ___HideMirrorWindow_26;
	Il2CppMethodPointer ___IsMirrorWindowVisible_27;
	Il2CppMethodPointer ___CompositorDumpImages_28;
	Il2CppMethodPointer ___ShouldAppRenderWithLowResources_29;
	Il2CppMethodPointer ___ForceInterleavedReprojectionOn_30;
	Il2CppMethodPointer ___ForceReconnectProcess_31;
	Il2CppMethodPointer ___SuspendRendering_32;
	Il2CppMethodPointer ___GetMirrorTextureD3D11_33;
	Il2CppMethodPointer ___ReleaseMirrorTextureD3D11_34;
	Il2CppMethodPointer ___GetMirrorTextureGL_35;
	Il2CppMethodPointer ___ReleaseSharedGLTexture_36;
	Il2CppMethodPointer ___LockGLSharedTextureForAccess_37;
	Il2CppMethodPointer ___UnlockGLSharedTextureForAccess_38;
	Il2CppMethodPointer ___GetVulkanInstanceExtensionsRequired_39;
	Il2CppMethodPointer ___GetVulkanDeviceExtensionsRequired_40;
	Il2CppMethodPointer ___SetExplicitTimingMode_41;
	Il2CppMethodPointer ___SubmitExplicitTimingData_42;
	Il2CppMethodPointer ___IsMotionSmoothingEnabled_43;
	Il2CppMethodPointer ___IsMotionSmoothingSupported_44;
	Il2CppMethodPointer ___IsCurrentSceneFocusAppLoading_45;
	Il2CppMethodPointer ___SetStageOverride_Async_46;
	Il2CppMethodPointer ___ClearStageOverride_47;
	Il2CppMethodPointer ___GetCompositorBenchmarkResults_48;
	Il2CppMethodPointer ___GetLastPosePredictionIDs_49;
	Il2CppMethodPointer ___GetPosesForFrame_50;
};

// Valve.VR.IVRInput
struct  IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78 
{
public:
	// Valve.VR.IVRInput__SetActionManifestPath Valve.VR.IVRInput::SetActionManifestPath
	_SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * ___SetActionManifestPath_0;
	// Valve.VR.IVRInput__GetActionSetHandle Valve.VR.IVRInput::GetActionSetHandle
	_GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * ___GetActionSetHandle_1;
	// Valve.VR.IVRInput__GetActionHandle Valve.VR.IVRInput::GetActionHandle
	_GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * ___GetActionHandle_2;
	// Valve.VR.IVRInput__GetInputSourceHandle Valve.VR.IVRInput::GetInputSourceHandle
	_GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * ___GetInputSourceHandle_3;
	// Valve.VR.IVRInput__UpdateActionState Valve.VR.IVRInput::UpdateActionState
	_UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * ___UpdateActionState_4;
	// Valve.VR.IVRInput__GetDigitalActionData Valve.VR.IVRInput::GetDigitalActionData
	_GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * ___GetDigitalActionData_5;
	// Valve.VR.IVRInput__GetAnalogActionData Valve.VR.IVRInput::GetAnalogActionData
	_GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * ___GetAnalogActionData_6;
	// Valve.VR.IVRInput__GetPoseActionDataRelativeToNow Valve.VR.IVRInput::GetPoseActionDataRelativeToNow
	_GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * ___GetPoseActionDataRelativeToNow_7;
	// Valve.VR.IVRInput__GetPoseActionDataForNextFrame Valve.VR.IVRInput::GetPoseActionDataForNextFrame
	_GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * ___GetPoseActionDataForNextFrame_8;
	// Valve.VR.IVRInput__GetSkeletalActionData Valve.VR.IVRInput::GetSkeletalActionData
	_GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * ___GetSkeletalActionData_9;
	// Valve.VR.IVRInput__GetDominantHand Valve.VR.IVRInput::GetDominantHand
	_GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029 * ___GetDominantHand_10;
	// Valve.VR.IVRInput__SetDominantHand Valve.VR.IVRInput::SetDominantHand
	_SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D * ___SetDominantHand_11;
	// Valve.VR.IVRInput__GetBoneCount Valve.VR.IVRInput::GetBoneCount
	_GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * ___GetBoneCount_12;
	// Valve.VR.IVRInput__GetBoneHierarchy Valve.VR.IVRInput::GetBoneHierarchy
	_GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * ___GetBoneHierarchy_13;
	// Valve.VR.IVRInput__GetBoneName Valve.VR.IVRInput::GetBoneName
	_GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * ___GetBoneName_14;
	// Valve.VR.IVRInput__GetSkeletalReferenceTransforms Valve.VR.IVRInput::GetSkeletalReferenceTransforms
	_GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * ___GetSkeletalReferenceTransforms_15;
	// Valve.VR.IVRInput__GetSkeletalTrackingLevel Valve.VR.IVRInput::GetSkeletalTrackingLevel
	_GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * ___GetSkeletalTrackingLevel_16;
	// Valve.VR.IVRInput__GetSkeletalBoneData Valve.VR.IVRInput::GetSkeletalBoneData
	_GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * ___GetSkeletalBoneData_17;
	// Valve.VR.IVRInput__GetSkeletalSummaryData Valve.VR.IVRInput::GetSkeletalSummaryData
	_GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * ___GetSkeletalSummaryData_18;
	// Valve.VR.IVRInput__GetSkeletalBoneDataCompressed Valve.VR.IVRInput::GetSkeletalBoneDataCompressed
	_GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * ___GetSkeletalBoneDataCompressed_19;
	// Valve.VR.IVRInput__DecompressSkeletalBoneData Valve.VR.IVRInput::DecompressSkeletalBoneData
	_DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * ___DecompressSkeletalBoneData_20;
	// Valve.VR.IVRInput__TriggerHapticVibrationAction Valve.VR.IVRInput::TriggerHapticVibrationAction
	_TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * ___TriggerHapticVibrationAction_21;
	// Valve.VR.IVRInput__GetActionOrigins Valve.VR.IVRInput::GetActionOrigins
	_GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * ___GetActionOrigins_22;
	// Valve.VR.IVRInput__GetOriginLocalizedName Valve.VR.IVRInput::GetOriginLocalizedName
	_GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * ___GetOriginLocalizedName_23;
	// Valve.VR.IVRInput__GetOriginTrackedDeviceInfo Valve.VR.IVRInput::GetOriginTrackedDeviceInfo
	_GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * ___GetOriginTrackedDeviceInfo_24;
	// Valve.VR.IVRInput__GetActionBindingInfo Valve.VR.IVRInput::GetActionBindingInfo
	_GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * ___GetActionBindingInfo_25;
	// Valve.VR.IVRInput__ShowActionOrigins Valve.VR.IVRInput::ShowActionOrigins
	_ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * ___ShowActionOrigins_26;
	// Valve.VR.IVRInput__ShowBindingsForActionSet Valve.VR.IVRInput::ShowBindingsForActionSet
	_ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * ___ShowBindingsForActionSet_27;
	// Valve.VR.IVRInput__GetComponentStateForBinding Valve.VR.IVRInput::GetComponentStateForBinding
	_GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA * ___GetComponentStateForBinding_28;
	// Valve.VR.IVRInput__IsUsingLegacyInput Valve.VR.IVRInput::IsUsingLegacyInput
	_IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * ___IsUsingLegacyInput_29;
	// Valve.VR.IVRInput__OpenBindingUI Valve.VR.IVRInput::OpenBindingUI
	_OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * ___OpenBindingUI_30;
	// Valve.VR.IVRInput__GetBindingVariant Valve.VR.IVRInput::GetBindingVariant
	_GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96 * ___GetBindingVariant_31;

public:
	inline static int32_t get_offset_of_SetActionManifestPath_0() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___SetActionManifestPath_0)); }
	inline _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * get_SetActionManifestPath_0() const { return ___SetActionManifestPath_0; }
	inline _SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE ** get_address_of_SetActionManifestPath_0() { return &___SetActionManifestPath_0; }
	inline void set_SetActionManifestPath_0(_SetActionManifestPath_tCC8157D33535562FA6C3DDCA5CBC0F82B51306FE * value)
	{
		___SetActionManifestPath_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetActionManifestPath_0), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionSetHandle_1() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionSetHandle_1)); }
	inline _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * get_GetActionSetHandle_1() const { return ___GetActionSetHandle_1; }
	inline _GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 ** get_address_of_GetActionSetHandle_1() { return &___GetActionSetHandle_1; }
	inline void set_GetActionSetHandle_1(_GetActionSetHandle_tDCCC10117A32D6F523EED20F9C35C8F104A6DE56 * value)
	{
		___GetActionSetHandle_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionSetHandle_1), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionHandle_2() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionHandle_2)); }
	inline _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * get_GetActionHandle_2() const { return ___GetActionHandle_2; }
	inline _GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 ** get_address_of_GetActionHandle_2() { return &___GetActionHandle_2; }
	inline void set_GetActionHandle_2(_GetActionHandle_tAA6FC70C31E52EB9899414C5DF8666A660D73988 * value)
	{
		___GetActionHandle_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionHandle_2), (void*)value);
	}

	inline static int32_t get_offset_of_GetInputSourceHandle_3() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetInputSourceHandle_3)); }
	inline _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * get_GetInputSourceHandle_3() const { return ___GetInputSourceHandle_3; }
	inline _GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF ** get_address_of_GetInputSourceHandle_3() { return &___GetInputSourceHandle_3; }
	inline void set_GetInputSourceHandle_3(_GetInputSourceHandle_tAB5E42F59BE5F64E4D025C405AD1DF589BE798EF * value)
	{
		___GetInputSourceHandle_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetInputSourceHandle_3), (void*)value);
	}

	inline static int32_t get_offset_of_UpdateActionState_4() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___UpdateActionState_4)); }
	inline _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * get_UpdateActionState_4() const { return ___UpdateActionState_4; }
	inline _UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 ** get_address_of_UpdateActionState_4() { return &___UpdateActionState_4; }
	inline void set_UpdateActionState_4(_UpdateActionState_t34A07E451D658BB88598E974A3A804775EE414C5 * value)
	{
		___UpdateActionState_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___UpdateActionState_4), (void*)value);
	}

	inline static int32_t get_offset_of_GetDigitalActionData_5() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetDigitalActionData_5)); }
	inline _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * get_GetDigitalActionData_5() const { return ___GetDigitalActionData_5; }
	inline _GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 ** get_address_of_GetDigitalActionData_5() { return &___GetDigitalActionData_5; }
	inline void set_GetDigitalActionData_5(_GetDigitalActionData_tF308BA2153B8638CAD78903A8E4A6FF63A0AE5E8 * value)
	{
		___GetDigitalActionData_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetDigitalActionData_5), (void*)value);
	}

	inline static int32_t get_offset_of_GetAnalogActionData_6() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetAnalogActionData_6)); }
	inline _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * get_GetAnalogActionData_6() const { return ___GetAnalogActionData_6; }
	inline _GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB ** get_address_of_GetAnalogActionData_6() { return &___GetAnalogActionData_6; }
	inline void set_GetAnalogActionData_6(_GetAnalogActionData_t6B38FFFF0181415420E9380BDCFC944C9D73D6CB * value)
	{
		___GetAnalogActionData_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetAnalogActionData_6), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataRelativeToNow_7() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetPoseActionDataRelativeToNow_7)); }
	inline _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * get_GetPoseActionDataRelativeToNow_7() const { return ___GetPoseActionDataRelativeToNow_7; }
	inline _GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 ** get_address_of_GetPoseActionDataRelativeToNow_7() { return &___GetPoseActionDataRelativeToNow_7; }
	inline void set_GetPoseActionDataRelativeToNow_7(_GetPoseActionDataRelativeToNow_t8ED7A8761F721F5713D809DB6B79BFDB91E01BB8 * value)
	{
		___GetPoseActionDataRelativeToNow_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataRelativeToNow_7), (void*)value);
	}

	inline static int32_t get_offset_of_GetPoseActionDataForNextFrame_8() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetPoseActionDataForNextFrame_8)); }
	inline _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * get_GetPoseActionDataForNextFrame_8() const { return ___GetPoseActionDataForNextFrame_8; }
	inline _GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E ** get_address_of_GetPoseActionDataForNextFrame_8() { return &___GetPoseActionDataForNextFrame_8; }
	inline void set_GetPoseActionDataForNextFrame_8(_GetPoseActionDataForNextFrame_tAA10FE3259883E133F8F097728EED8DE994C157E * value)
	{
		___GetPoseActionDataForNextFrame_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetPoseActionDataForNextFrame_8), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalActionData_9() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalActionData_9)); }
	inline _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * get_GetSkeletalActionData_9() const { return ___GetSkeletalActionData_9; }
	inline _GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A ** get_address_of_GetSkeletalActionData_9() { return &___GetSkeletalActionData_9; }
	inline void set_GetSkeletalActionData_9(_GetSkeletalActionData_t5F353A7DB921C384ACD71B83F4E7F83B8F957A1A * value)
	{
		___GetSkeletalActionData_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalActionData_9), (void*)value);
	}

	inline static int32_t get_offset_of_GetDominantHand_10() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetDominantHand_10)); }
	inline _GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029 * get_GetDominantHand_10() const { return ___GetDominantHand_10; }
	inline _GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029 ** get_address_of_GetDominantHand_10() { return &___GetDominantHand_10; }
	inline void set_GetDominantHand_10(_GetDominantHand_tBA54323C6ADA02D432F6FB26A3AE1007002F5029 * value)
	{
		___GetDominantHand_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetDominantHand_10), (void*)value);
	}

	inline static int32_t get_offset_of_SetDominantHand_11() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___SetDominantHand_11)); }
	inline _SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D * get_SetDominantHand_11() const { return ___SetDominantHand_11; }
	inline _SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D ** get_address_of_SetDominantHand_11() { return &___SetDominantHand_11; }
	inline void set_SetDominantHand_11(_SetDominantHand_t781C37553971079E806C986AF0571A5394BB608D * value)
	{
		___SetDominantHand_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___SetDominantHand_11), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneCount_12() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneCount_12)); }
	inline _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * get_GetBoneCount_12() const { return ___GetBoneCount_12; }
	inline _GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 ** get_address_of_GetBoneCount_12() { return &___GetBoneCount_12; }
	inline void set_GetBoneCount_12(_GetBoneCount_t6C3C3EFD4AAFFC3A51B471217CA56C6CDB85A8A1 * value)
	{
		___GetBoneCount_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneCount_12), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneHierarchy_13() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneHierarchy_13)); }
	inline _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * get_GetBoneHierarchy_13() const { return ___GetBoneHierarchy_13; }
	inline _GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 ** get_address_of_GetBoneHierarchy_13() { return &___GetBoneHierarchy_13; }
	inline void set_GetBoneHierarchy_13(_GetBoneHierarchy_t167DE2FE59F4348442E70AD40E9908D3396FE876 * value)
	{
		___GetBoneHierarchy_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneHierarchy_13), (void*)value);
	}

	inline static int32_t get_offset_of_GetBoneName_14() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBoneName_14)); }
	inline _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * get_GetBoneName_14() const { return ___GetBoneName_14; }
	inline _GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF ** get_address_of_GetBoneName_14() { return &___GetBoneName_14; }
	inline void set_GetBoneName_14(_GetBoneName_t802A405B0C688F34E650358ED94EB5E83003B4FF * value)
	{
		___GetBoneName_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBoneName_14), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalReferenceTransforms_15() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalReferenceTransforms_15)); }
	inline _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * get_GetSkeletalReferenceTransforms_15() const { return ___GetSkeletalReferenceTransforms_15; }
	inline _GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 ** get_address_of_GetSkeletalReferenceTransforms_15() { return &___GetSkeletalReferenceTransforms_15; }
	inline void set_GetSkeletalReferenceTransforms_15(_GetSkeletalReferenceTransforms_tB13CA87584C074E43514FD286E673444A770C7F5 * value)
	{
		___GetSkeletalReferenceTransforms_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalReferenceTransforms_15), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalTrackingLevel_16() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalTrackingLevel_16)); }
	inline _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * get_GetSkeletalTrackingLevel_16() const { return ___GetSkeletalTrackingLevel_16; }
	inline _GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 ** get_address_of_GetSkeletalTrackingLevel_16() { return &___GetSkeletalTrackingLevel_16; }
	inline void set_GetSkeletalTrackingLevel_16(_GetSkeletalTrackingLevel_t20487D8EE1F4E97466D3362B812896DAC707DE93 * value)
	{
		___GetSkeletalTrackingLevel_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalTrackingLevel_16), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneData_17() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalBoneData_17)); }
	inline _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * get_GetSkeletalBoneData_17() const { return ___GetSkeletalBoneData_17; }
	inline _GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A ** get_address_of_GetSkeletalBoneData_17() { return &___GetSkeletalBoneData_17; }
	inline void set_GetSkeletalBoneData_17(_GetSkeletalBoneData_tB6C26FFFE2DC1A4EBF7538C8B822BCF44FDE950A * value)
	{
		___GetSkeletalBoneData_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneData_17), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalSummaryData_18() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalSummaryData_18)); }
	inline _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * get_GetSkeletalSummaryData_18() const { return ___GetSkeletalSummaryData_18; }
	inline _GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 ** get_address_of_GetSkeletalSummaryData_18() { return &___GetSkeletalSummaryData_18; }
	inline void set_GetSkeletalSummaryData_18(_GetSkeletalSummaryData_tDBD7B97D7AEB5C6023AB7500B7EFB7B46FC00822 * value)
	{
		___GetSkeletalSummaryData_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalSummaryData_18), (void*)value);
	}

	inline static int32_t get_offset_of_GetSkeletalBoneDataCompressed_19() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetSkeletalBoneDataCompressed_19)); }
	inline _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * get_GetSkeletalBoneDataCompressed_19() const { return ___GetSkeletalBoneDataCompressed_19; }
	inline _GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B ** get_address_of_GetSkeletalBoneDataCompressed_19() { return &___GetSkeletalBoneDataCompressed_19; }
	inline void set_GetSkeletalBoneDataCompressed_19(_GetSkeletalBoneDataCompressed_tE546DCB602D70AFE33D3988CA648F582BF4D795B * value)
	{
		___GetSkeletalBoneDataCompressed_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetSkeletalBoneDataCompressed_19), (void*)value);
	}

	inline static int32_t get_offset_of_DecompressSkeletalBoneData_20() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___DecompressSkeletalBoneData_20)); }
	inline _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * get_DecompressSkeletalBoneData_20() const { return ___DecompressSkeletalBoneData_20; }
	inline _DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 ** get_address_of_DecompressSkeletalBoneData_20() { return &___DecompressSkeletalBoneData_20; }
	inline void set_DecompressSkeletalBoneData_20(_DecompressSkeletalBoneData_t8A92BDC21C8090D2E2952E48A5925D4B8DD48277 * value)
	{
		___DecompressSkeletalBoneData_20 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___DecompressSkeletalBoneData_20), (void*)value);
	}

	inline static int32_t get_offset_of_TriggerHapticVibrationAction_21() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___TriggerHapticVibrationAction_21)); }
	inline _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * get_TriggerHapticVibrationAction_21() const { return ___TriggerHapticVibrationAction_21; }
	inline _TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 ** get_address_of_TriggerHapticVibrationAction_21() { return &___TriggerHapticVibrationAction_21; }
	inline void set_TriggerHapticVibrationAction_21(_TriggerHapticVibrationAction_tD6966DC222C78E33A391603FA738554C337292C8 * value)
	{
		___TriggerHapticVibrationAction_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___TriggerHapticVibrationAction_21), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionOrigins_22() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionOrigins_22)); }
	inline _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * get_GetActionOrigins_22() const { return ___GetActionOrigins_22; }
	inline _GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 ** get_address_of_GetActionOrigins_22() { return &___GetActionOrigins_22; }
	inline void set_GetActionOrigins_22(_GetActionOrigins_tE0D9FE805034861066738B53CD6ED5D774553C69 * value)
	{
		___GetActionOrigins_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionOrigins_22), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginLocalizedName_23() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetOriginLocalizedName_23)); }
	inline _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * get_GetOriginLocalizedName_23() const { return ___GetOriginLocalizedName_23; }
	inline _GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F ** get_address_of_GetOriginLocalizedName_23() { return &___GetOriginLocalizedName_23; }
	inline void set_GetOriginLocalizedName_23(_GetOriginLocalizedName_t3FDAF7E14C966B8922289564E4EDFD9FD2708E4F * value)
	{
		___GetOriginLocalizedName_23 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginLocalizedName_23), (void*)value);
	}

	inline static int32_t get_offset_of_GetOriginTrackedDeviceInfo_24() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetOriginTrackedDeviceInfo_24)); }
	inline _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * get_GetOriginTrackedDeviceInfo_24() const { return ___GetOriginTrackedDeviceInfo_24; }
	inline _GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B ** get_address_of_GetOriginTrackedDeviceInfo_24() { return &___GetOriginTrackedDeviceInfo_24; }
	inline void set_GetOriginTrackedDeviceInfo_24(_GetOriginTrackedDeviceInfo_tCCCCE9FC46CC32CD3CEE514462A4D2AAB295BA4B * value)
	{
		___GetOriginTrackedDeviceInfo_24 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetOriginTrackedDeviceInfo_24), (void*)value);
	}

	inline static int32_t get_offset_of_GetActionBindingInfo_25() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetActionBindingInfo_25)); }
	inline _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * get_GetActionBindingInfo_25() const { return ___GetActionBindingInfo_25; }
	inline _GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 ** get_address_of_GetActionBindingInfo_25() { return &___GetActionBindingInfo_25; }
	inline void set_GetActionBindingInfo_25(_GetActionBindingInfo_t888BA9460789EBC395139AB0DBBBA3089B2E0FC5 * value)
	{
		___GetActionBindingInfo_25 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetActionBindingInfo_25), (void*)value);
	}

	inline static int32_t get_offset_of_ShowActionOrigins_26() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___ShowActionOrigins_26)); }
	inline _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * get_ShowActionOrigins_26() const { return ___ShowActionOrigins_26; }
	inline _ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 ** get_address_of_ShowActionOrigins_26() { return &___ShowActionOrigins_26; }
	inline void set_ShowActionOrigins_26(_ShowActionOrigins_t2D44C15D7A1A68B48BD8A5718303C019CB82DE71 * value)
	{
		___ShowActionOrigins_26 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowActionOrigins_26), (void*)value);
	}

	inline static int32_t get_offset_of_ShowBindingsForActionSet_27() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___ShowBindingsForActionSet_27)); }
	inline _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * get_ShowBindingsForActionSet_27() const { return ___ShowBindingsForActionSet_27; }
	inline _ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A ** get_address_of_ShowBindingsForActionSet_27() { return &___ShowBindingsForActionSet_27; }
	inline void set_ShowBindingsForActionSet_27(_ShowBindingsForActionSet_tE794CCA21EF1D46F19895A28146A79FA5B41BB2A * value)
	{
		___ShowBindingsForActionSet_27 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___ShowBindingsForActionSet_27), (void*)value);
	}

	inline static int32_t get_offset_of_GetComponentStateForBinding_28() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetComponentStateForBinding_28)); }
	inline _GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA * get_GetComponentStateForBinding_28() const { return ___GetComponentStateForBinding_28; }
	inline _GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA ** get_address_of_GetComponentStateForBinding_28() { return &___GetComponentStateForBinding_28; }
	inline void set_GetComponentStateForBinding_28(_GetComponentStateForBinding_t528D11F913578272C9159336F2B9473530BE99AA * value)
	{
		___GetComponentStateForBinding_28 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetComponentStateForBinding_28), (void*)value);
	}

	inline static int32_t get_offset_of_IsUsingLegacyInput_29() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___IsUsingLegacyInput_29)); }
	inline _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * get_IsUsingLegacyInput_29() const { return ___IsUsingLegacyInput_29; }
	inline _IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 ** get_address_of_IsUsingLegacyInput_29() { return &___IsUsingLegacyInput_29; }
	inline void set_IsUsingLegacyInput_29(_IsUsingLegacyInput_t47530FACE216CEDA2B1629F03D1FE805B67664A7 * value)
	{
		___IsUsingLegacyInput_29 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___IsUsingLegacyInput_29), (void*)value);
	}

	inline static int32_t get_offset_of_OpenBindingUI_30() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___OpenBindingUI_30)); }
	inline _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * get_OpenBindingUI_30() const { return ___OpenBindingUI_30; }
	inline _OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F ** get_address_of_OpenBindingUI_30() { return &___OpenBindingUI_30; }
	inline void set_OpenBindingUI_30(_OpenBindingUI_t04252A1EDE97A953F55220A73E647A8DD9EA831F * value)
	{
		___OpenBindingUI_30 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___OpenBindingUI_30), (void*)value);
	}

	inline static int32_t get_offset_of_GetBindingVariant_31() { return static_cast<int32_t>(offsetof(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78, ___GetBindingVariant_31)); }
	inline _GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96 * get_GetBindingVariant_31() const { return ___GetBindingVariant_31; }
	inline _GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96 ** get_address_of_GetBindingVariant_31() { return &___GetBindingVariant_31; }
	inline void set_GetBindingVariant_31(_GetBindingVariant_t54394654ADF0C4DFE91EC183B932B47AD3AD9F96 * value)
	{
		___GetBindingVariant_31 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___GetBindingVariant_31), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of Valve.VR.IVRInput
struct IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78_marshaled_pinvoke
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetDominantHand_10;
	Il2CppMethodPointer ___SetDominantHand_11;
	Il2CppMethodPointer ___GetBoneCount_12;
	Il2CppMethodPointer ___GetBoneHierarchy_13;
	Il2CppMethodPointer ___GetBoneName_14;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_15;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_16;
	Il2CppMethodPointer ___GetSkeletalBoneData_17;
	Il2CppMethodPointer ___GetSkeletalSummaryData_18;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_19;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_20;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_21;
	Il2CppMethodPointer ___GetActionOrigins_22;
	Il2CppMethodPointer ___GetOriginLocalizedName_23;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_24;
	Il2CppMethodPointer ___GetActionBindingInfo_25;
	Il2CppMethodPointer ___ShowActionOrigins_26;
	Il2CppMethodPointer ___ShowBindingsForActionSet_27;
	Il2CppMethodPointer ___GetComponentStateForBinding_28;
	Il2CppMethodPointer ___IsUsingLegacyInput_29;
	Il2CppMethodPointer ___OpenBindingUI_30;
	Il2CppMethodPointer ___GetBindingVariant_31;
};
// Native definition for COM marshalling of Valve.VR.IVRInput
struct IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78_marshaled_com
{
	Il2CppMethodPointer ___SetActionManifestPath_0;
	Il2CppMethodPointer ___GetActionSetHandle_1;
	Il2CppMethodPointer ___GetActionHandle_2;
	Il2CppMethodPointer ___GetInputSourceHandle_3;
	Il2CppMethodPointer ___UpdateActionState_4;
	Il2CppMethodPointer ___GetDigitalActionData_5;
	Il2CppMethodPointer ___GetAnalogActionData_6;
	Il2CppMethodPointer ___GetPoseActionDataRelativeToNow_7;
	Il2CppMethodPointer ___GetPoseActionDataForNextFrame_8;
	Il2CppMethodPointer ___GetSkeletalActionData_9;
	Il2CppMethodPointer ___GetDominantHand_10;
	Il2CppMethodPointer ___SetDominantHand_11;
	Il2CppMethodPointer ___GetBoneCount_12;
	Il2CppMethodPointer ___GetBoneHierarchy_13;
	Il2CppMethodPointer ___GetBoneName_14;
	Il2CppMethodPointer ___GetSkeletalReferenceTransforms_15;
	Il2CppMethodPointer ___GetSkeletalTrackingLevel_16;
	Il2CppMethodPointer ___GetSkeletalBoneData_17;
	Il2CppMethodPointer ___GetSkeletalSummaryData_18;
	Il2CppMethodPointer ___GetSkeletalBoneDataCompressed_19;
	Il2CppMethodPointer ___DecompressSkeletalBoneData_20;
	Il2CppMethodPointer ___TriggerHapticVibrationAction_21;
	Il2CppMethodPointer ___GetActionOrigins_22;
	Il2CppMethodPointer ___GetOriginLocalizedName_23;
	Il2CppMethodPointer ___GetOriginTrackedDeviceInfo_24;
	Il2CppMethodPointer ___GetActionBindingInfo_25;
	Il2CppMethodPointer ___ShowActionOrigins_26;
	Il2CppMethodPointer ___ShowBindingsForActionSet_27;
	Il2CppMethodPointer ___GetComponentStateForBinding_28;
	Il2CppMethodPointer ___IsUsingLegacyInput_29;
	Il2CppMethodPointer ___OpenBindingUI_30;
	Il2CppMethodPointer ___GetBindingVariant_31;
};

// Valve.VR.InputAnalogActionData_t
struct  InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C 
{
public:
	// System.Boolean Valve.VR.InputAnalogActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputAnalogActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Single Valve.VR.InputAnalogActionData_t::x
	float ___x_2;
	// System.Single Valve.VR.InputAnalogActionData_t::y
	float ___y_3;
	// System.Single Valve.VR.InputAnalogActionData_t::z
	float ___z_4;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaX
	float ___deltaX_5;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaY
	float ___deltaY_6;
	// System.Single Valve.VR.InputAnalogActionData_t::deltaZ
	float ___deltaZ_7;
	// System.Single Valve.VR.InputAnalogActionData_t::fUpdateTime
	float ___fUpdateTime_8;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_x_2() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___x_2)); }
	inline float get_x_2() const { return ___x_2; }
	inline float* get_address_of_x_2() { return &___x_2; }
	inline void set_x_2(float value)
	{
		___x_2 = value;
	}

	inline static int32_t get_offset_of_y_3() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___y_3)); }
	inline float get_y_3() const { return ___y_3; }
	inline float* get_address_of_y_3() { return &___y_3; }
	inline void set_y_3(float value)
	{
		___y_3 = value;
	}

	inline static int32_t get_offset_of_z_4() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___z_4)); }
	inline float get_z_4() const { return ___z_4; }
	inline float* get_address_of_z_4() { return &___z_4; }
	inline void set_z_4(float value)
	{
		___z_4 = value;
	}

	inline static int32_t get_offset_of_deltaX_5() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaX_5)); }
	inline float get_deltaX_5() const { return ___deltaX_5; }
	inline float* get_address_of_deltaX_5() { return &___deltaX_5; }
	inline void set_deltaX_5(float value)
	{
		___deltaX_5 = value;
	}

	inline static int32_t get_offset_of_deltaY_6() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaY_6)); }
	inline float get_deltaY_6() const { return ___deltaY_6; }
	inline float* get_address_of_deltaY_6() { return &___deltaY_6; }
	inline void set_deltaY_6(float value)
	{
		___deltaY_6 = value;
	}

	inline static int32_t get_offset_of_deltaZ_7() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___deltaZ_7)); }
	inline float get_deltaZ_7() const { return ___deltaZ_7; }
	inline float* get_address_of_deltaZ_7() { return &___deltaZ_7; }
	inline void set_deltaZ_7(float value)
	{
		___deltaZ_7 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_8() { return static_cast<int32_t>(offsetof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C, ___fUpdateTime_8)); }
	inline float get_fUpdateTime_8() const { return ___fUpdateTime_8; }
	inline float* get_address_of_fUpdateTime_8() { return &___fUpdateTime_8; }
	inline void set_fUpdateTime_8(float value)
	{
		___fUpdateTime_8 = value;
	}
};


// Valve.VR.InputDigitalActionData_t
struct  InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 
{
public:
	// System.Boolean Valve.VR.InputDigitalActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputDigitalActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bState
	bool ___bState_2;
	// System.Boolean Valve.VR.InputDigitalActionData_t::bChanged
	bool ___bChanged_3;
	// System.Single Valve.VR.InputDigitalActionData_t::fUpdateTime
	float ___fUpdateTime_4;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_bState_2() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bState_2)); }
	inline bool get_bState_2() const { return ___bState_2; }
	inline bool* get_address_of_bState_2() { return &___bState_2; }
	inline void set_bState_2(bool value)
	{
		___bState_2 = value;
	}

	inline static int32_t get_offset_of_bChanged_3() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___bChanged_3)); }
	inline bool get_bChanged_3() const { return ___bChanged_3; }
	inline bool* get_address_of_bChanged_3() { return &___bChanged_3; }
	inline void set_bChanged_3(bool value)
	{
		___bChanged_3 = value;
	}

	inline static int32_t get_offset_of_fUpdateTime_4() { return static_cast<int32_t>(offsetof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1, ___fUpdateTime_4)); }
	inline float get_fUpdateTime_4() const { return ___fUpdateTime_4; }
	inline float* get_address_of_fUpdateTime_4() { return &___fUpdateTime_4; }
	inline void set_fUpdateTime_4(float value)
	{
		___fUpdateTime_4 = value;
	}
};


// Valve.VR.InputOriginInfo_t
struct  InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A 
{
public:
	// System.UInt64 Valve.VR.InputOriginInfo_t::devicePath
	uint64_t ___devicePath_0;
	// System.UInt32 Valve.VR.InputOriginInfo_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName0
	uint8_t ___rchRenderModelComponentName0_2;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName1
	uint8_t ___rchRenderModelComponentName1_3;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName2
	uint8_t ___rchRenderModelComponentName2_4;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName3
	uint8_t ___rchRenderModelComponentName3_5;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName4
	uint8_t ___rchRenderModelComponentName4_6;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName5
	uint8_t ___rchRenderModelComponentName5_7;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName6
	uint8_t ___rchRenderModelComponentName6_8;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName7
	uint8_t ___rchRenderModelComponentName7_9;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName8
	uint8_t ___rchRenderModelComponentName8_10;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName9
	uint8_t ___rchRenderModelComponentName9_11;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName10
	uint8_t ___rchRenderModelComponentName10_12;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName11
	uint8_t ___rchRenderModelComponentName11_13;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName12
	uint8_t ___rchRenderModelComponentName12_14;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName13
	uint8_t ___rchRenderModelComponentName13_15;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName14
	uint8_t ___rchRenderModelComponentName14_16;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName15
	uint8_t ___rchRenderModelComponentName15_17;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName16
	uint8_t ___rchRenderModelComponentName16_18;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName17
	uint8_t ___rchRenderModelComponentName17_19;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName18
	uint8_t ___rchRenderModelComponentName18_20;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName19
	uint8_t ___rchRenderModelComponentName19_21;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName20
	uint8_t ___rchRenderModelComponentName20_22;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName21
	uint8_t ___rchRenderModelComponentName21_23;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName22
	uint8_t ___rchRenderModelComponentName22_24;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName23
	uint8_t ___rchRenderModelComponentName23_25;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName24
	uint8_t ___rchRenderModelComponentName24_26;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName25
	uint8_t ___rchRenderModelComponentName25_27;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName26
	uint8_t ___rchRenderModelComponentName26_28;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName27
	uint8_t ___rchRenderModelComponentName27_29;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName28
	uint8_t ___rchRenderModelComponentName28_30;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName29
	uint8_t ___rchRenderModelComponentName29_31;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName30
	uint8_t ___rchRenderModelComponentName30_32;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName31
	uint8_t ___rchRenderModelComponentName31_33;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName32
	uint8_t ___rchRenderModelComponentName32_34;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName33
	uint8_t ___rchRenderModelComponentName33_35;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName34
	uint8_t ___rchRenderModelComponentName34_36;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName35
	uint8_t ___rchRenderModelComponentName35_37;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName36
	uint8_t ___rchRenderModelComponentName36_38;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName37
	uint8_t ___rchRenderModelComponentName37_39;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName38
	uint8_t ___rchRenderModelComponentName38_40;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName39
	uint8_t ___rchRenderModelComponentName39_41;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName40
	uint8_t ___rchRenderModelComponentName40_42;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName41
	uint8_t ___rchRenderModelComponentName41_43;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName42
	uint8_t ___rchRenderModelComponentName42_44;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName43
	uint8_t ___rchRenderModelComponentName43_45;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName44
	uint8_t ___rchRenderModelComponentName44_46;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName45
	uint8_t ___rchRenderModelComponentName45_47;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName46
	uint8_t ___rchRenderModelComponentName46_48;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName47
	uint8_t ___rchRenderModelComponentName47_49;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName48
	uint8_t ___rchRenderModelComponentName48_50;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName49
	uint8_t ___rchRenderModelComponentName49_51;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName50
	uint8_t ___rchRenderModelComponentName50_52;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName51
	uint8_t ___rchRenderModelComponentName51_53;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName52
	uint8_t ___rchRenderModelComponentName52_54;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName53
	uint8_t ___rchRenderModelComponentName53_55;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName54
	uint8_t ___rchRenderModelComponentName54_56;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName55
	uint8_t ___rchRenderModelComponentName55_57;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName56
	uint8_t ___rchRenderModelComponentName56_58;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName57
	uint8_t ___rchRenderModelComponentName57_59;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName58
	uint8_t ___rchRenderModelComponentName58_60;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName59
	uint8_t ___rchRenderModelComponentName59_61;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName60
	uint8_t ___rchRenderModelComponentName60_62;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName61
	uint8_t ___rchRenderModelComponentName61_63;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName62
	uint8_t ___rchRenderModelComponentName62_64;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName63
	uint8_t ___rchRenderModelComponentName63_65;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName64
	uint8_t ___rchRenderModelComponentName64_66;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName65
	uint8_t ___rchRenderModelComponentName65_67;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName66
	uint8_t ___rchRenderModelComponentName66_68;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName67
	uint8_t ___rchRenderModelComponentName67_69;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName68
	uint8_t ___rchRenderModelComponentName68_70;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName69
	uint8_t ___rchRenderModelComponentName69_71;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName70
	uint8_t ___rchRenderModelComponentName70_72;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName71
	uint8_t ___rchRenderModelComponentName71_73;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName72
	uint8_t ___rchRenderModelComponentName72_74;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName73
	uint8_t ___rchRenderModelComponentName73_75;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName74
	uint8_t ___rchRenderModelComponentName74_76;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName75
	uint8_t ___rchRenderModelComponentName75_77;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName76
	uint8_t ___rchRenderModelComponentName76_78;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName77
	uint8_t ___rchRenderModelComponentName77_79;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName78
	uint8_t ___rchRenderModelComponentName78_80;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName79
	uint8_t ___rchRenderModelComponentName79_81;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName80
	uint8_t ___rchRenderModelComponentName80_82;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName81
	uint8_t ___rchRenderModelComponentName81_83;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName82
	uint8_t ___rchRenderModelComponentName82_84;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName83
	uint8_t ___rchRenderModelComponentName83_85;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName84
	uint8_t ___rchRenderModelComponentName84_86;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName85
	uint8_t ___rchRenderModelComponentName85_87;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName86
	uint8_t ___rchRenderModelComponentName86_88;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName87
	uint8_t ___rchRenderModelComponentName87_89;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName88
	uint8_t ___rchRenderModelComponentName88_90;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName89
	uint8_t ___rchRenderModelComponentName89_91;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName90
	uint8_t ___rchRenderModelComponentName90_92;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName91
	uint8_t ___rchRenderModelComponentName91_93;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName92
	uint8_t ___rchRenderModelComponentName92_94;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName93
	uint8_t ___rchRenderModelComponentName93_95;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName94
	uint8_t ___rchRenderModelComponentName94_96;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName95
	uint8_t ___rchRenderModelComponentName95_97;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName96
	uint8_t ___rchRenderModelComponentName96_98;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName97
	uint8_t ___rchRenderModelComponentName97_99;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName98
	uint8_t ___rchRenderModelComponentName98_100;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName99
	uint8_t ___rchRenderModelComponentName99_101;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName100
	uint8_t ___rchRenderModelComponentName100_102;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName101
	uint8_t ___rchRenderModelComponentName101_103;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName102
	uint8_t ___rchRenderModelComponentName102_104;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName103
	uint8_t ___rchRenderModelComponentName103_105;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName104
	uint8_t ___rchRenderModelComponentName104_106;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName105
	uint8_t ___rchRenderModelComponentName105_107;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName106
	uint8_t ___rchRenderModelComponentName106_108;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName107
	uint8_t ___rchRenderModelComponentName107_109;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName108
	uint8_t ___rchRenderModelComponentName108_110;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName109
	uint8_t ___rchRenderModelComponentName109_111;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName110
	uint8_t ___rchRenderModelComponentName110_112;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName111
	uint8_t ___rchRenderModelComponentName111_113;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName112
	uint8_t ___rchRenderModelComponentName112_114;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName113
	uint8_t ___rchRenderModelComponentName113_115;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName114
	uint8_t ___rchRenderModelComponentName114_116;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName115
	uint8_t ___rchRenderModelComponentName115_117;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName116
	uint8_t ___rchRenderModelComponentName116_118;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName117
	uint8_t ___rchRenderModelComponentName117_119;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName118
	uint8_t ___rchRenderModelComponentName118_120;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName119
	uint8_t ___rchRenderModelComponentName119_121;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName120
	uint8_t ___rchRenderModelComponentName120_122;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName121
	uint8_t ___rchRenderModelComponentName121_123;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName122
	uint8_t ___rchRenderModelComponentName122_124;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName123
	uint8_t ___rchRenderModelComponentName123_125;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName124
	uint8_t ___rchRenderModelComponentName124_126;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName125
	uint8_t ___rchRenderModelComponentName125_127;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName126
	uint8_t ___rchRenderModelComponentName126_128;
	// System.Byte Valve.VR.InputOriginInfo_t::rchRenderModelComponentName127
	uint8_t ___rchRenderModelComponentName127_129;

public:
	inline static int32_t get_offset_of_devicePath_0() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___devicePath_0)); }
	inline uint64_t get_devicePath_0() const { return ___devicePath_0; }
	inline uint64_t* get_address_of_devicePath_0() { return &___devicePath_0; }
	inline void set_devicePath_0(uint64_t value)
	{
		___devicePath_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName0_2() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName0_2)); }
	inline uint8_t get_rchRenderModelComponentName0_2() const { return ___rchRenderModelComponentName0_2; }
	inline uint8_t* get_address_of_rchRenderModelComponentName0_2() { return &___rchRenderModelComponentName0_2; }
	inline void set_rchRenderModelComponentName0_2(uint8_t value)
	{
		___rchRenderModelComponentName0_2 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName1_3() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName1_3)); }
	inline uint8_t get_rchRenderModelComponentName1_3() const { return ___rchRenderModelComponentName1_3; }
	inline uint8_t* get_address_of_rchRenderModelComponentName1_3() { return &___rchRenderModelComponentName1_3; }
	inline void set_rchRenderModelComponentName1_3(uint8_t value)
	{
		___rchRenderModelComponentName1_3 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName2_4() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName2_4)); }
	inline uint8_t get_rchRenderModelComponentName2_4() const { return ___rchRenderModelComponentName2_4; }
	inline uint8_t* get_address_of_rchRenderModelComponentName2_4() { return &___rchRenderModelComponentName2_4; }
	inline void set_rchRenderModelComponentName2_4(uint8_t value)
	{
		___rchRenderModelComponentName2_4 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName3_5() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName3_5)); }
	inline uint8_t get_rchRenderModelComponentName3_5() const { return ___rchRenderModelComponentName3_5; }
	inline uint8_t* get_address_of_rchRenderModelComponentName3_5() { return &___rchRenderModelComponentName3_5; }
	inline void set_rchRenderModelComponentName3_5(uint8_t value)
	{
		___rchRenderModelComponentName3_5 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName4_6() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName4_6)); }
	inline uint8_t get_rchRenderModelComponentName4_6() const { return ___rchRenderModelComponentName4_6; }
	inline uint8_t* get_address_of_rchRenderModelComponentName4_6() { return &___rchRenderModelComponentName4_6; }
	inline void set_rchRenderModelComponentName4_6(uint8_t value)
	{
		___rchRenderModelComponentName4_6 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName5_7() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName5_7)); }
	inline uint8_t get_rchRenderModelComponentName5_7() const { return ___rchRenderModelComponentName5_7; }
	inline uint8_t* get_address_of_rchRenderModelComponentName5_7() { return &___rchRenderModelComponentName5_7; }
	inline void set_rchRenderModelComponentName5_7(uint8_t value)
	{
		___rchRenderModelComponentName5_7 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName6_8() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName6_8)); }
	inline uint8_t get_rchRenderModelComponentName6_8() const { return ___rchRenderModelComponentName6_8; }
	inline uint8_t* get_address_of_rchRenderModelComponentName6_8() { return &___rchRenderModelComponentName6_8; }
	inline void set_rchRenderModelComponentName6_8(uint8_t value)
	{
		___rchRenderModelComponentName6_8 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName7_9() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName7_9)); }
	inline uint8_t get_rchRenderModelComponentName7_9() const { return ___rchRenderModelComponentName7_9; }
	inline uint8_t* get_address_of_rchRenderModelComponentName7_9() { return &___rchRenderModelComponentName7_9; }
	inline void set_rchRenderModelComponentName7_9(uint8_t value)
	{
		___rchRenderModelComponentName7_9 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName8_10() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName8_10)); }
	inline uint8_t get_rchRenderModelComponentName8_10() const { return ___rchRenderModelComponentName8_10; }
	inline uint8_t* get_address_of_rchRenderModelComponentName8_10() { return &___rchRenderModelComponentName8_10; }
	inline void set_rchRenderModelComponentName8_10(uint8_t value)
	{
		___rchRenderModelComponentName8_10 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName9_11() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName9_11)); }
	inline uint8_t get_rchRenderModelComponentName9_11() const { return ___rchRenderModelComponentName9_11; }
	inline uint8_t* get_address_of_rchRenderModelComponentName9_11() { return &___rchRenderModelComponentName9_11; }
	inline void set_rchRenderModelComponentName9_11(uint8_t value)
	{
		___rchRenderModelComponentName9_11 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName10_12() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName10_12)); }
	inline uint8_t get_rchRenderModelComponentName10_12() const { return ___rchRenderModelComponentName10_12; }
	inline uint8_t* get_address_of_rchRenderModelComponentName10_12() { return &___rchRenderModelComponentName10_12; }
	inline void set_rchRenderModelComponentName10_12(uint8_t value)
	{
		___rchRenderModelComponentName10_12 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName11_13() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName11_13)); }
	inline uint8_t get_rchRenderModelComponentName11_13() const { return ___rchRenderModelComponentName11_13; }
	inline uint8_t* get_address_of_rchRenderModelComponentName11_13() { return &___rchRenderModelComponentName11_13; }
	inline void set_rchRenderModelComponentName11_13(uint8_t value)
	{
		___rchRenderModelComponentName11_13 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName12_14() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName12_14)); }
	inline uint8_t get_rchRenderModelComponentName12_14() const { return ___rchRenderModelComponentName12_14; }
	inline uint8_t* get_address_of_rchRenderModelComponentName12_14() { return &___rchRenderModelComponentName12_14; }
	inline void set_rchRenderModelComponentName12_14(uint8_t value)
	{
		___rchRenderModelComponentName12_14 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName13_15() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName13_15)); }
	inline uint8_t get_rchRenderModelComponentName13_15() const { return ___rchRenderModelComponentName13_15; }
	inline uint8_t* get_address_of_rchRenderModelComponentName13_15() { return &___rchRenderModelComponentName13_15; }
	inline void set_rchRenderModelComponentName13_15(uint8_t value)
	{
		___rchRenderModelComponentName13_15 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName14_16() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName14_16)); }
	inline uint8_t get_rchRenderModelComponentName14_16() const { return ___rchRenderModelComponentName14_16; }
	inline uint8_t* get_address_of_rchRenderModelComponentName14_16() { return &___rchRenderModelComponentName14_16; }
	inline void set_rchRenderModelComponentName14_16(uint8_t value)
	{
		___rchRenderModelComponentName14_16 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName15_17() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName15_17)); }
	inline uint8_t get_rchRenderModelComponentName15_17() const { return ___rchRenderModelComponentName15_17; }
	inline uint8_t* get_address_of_rchRenderModelComponentName15_17() { return &___rchRenderModelComponentName15_17; }
	inline void set_rchRenderModelComponentName15_17(uint8_t value)
	{
		___rchRenderModelComponentName15_17 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName16_18() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName16_18)); }
	inline uint8_t get_rchRenderModelComponentName16_18() const { return ___rchRenderModelComponentName16_18; }
	inline uint8_t* get_address_of_rchRenderModelComponentName16_18() { return &___rchRenderModelComponentName16_18; }
	inline void set_rchRenderModelComponentName16_18(uint8_t value)
	{
		___rchRenderModelComponentName16_18 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName17_19() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName17_19)); }
	inline uint8_t get_rchRenderModelComponentName17_19() const { return ___rchRenderModelComponentName17_19; }
	inline uint8_t* get_address_of_rchRenderModelComponentName17_19() { return &___rchRenderModelComponentName17_19; }
	inline void set_rchRenderModelComponentName17_19(uint8_t value)
	{
		___rchRenderModelComponentName17_19 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName18_20() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName18_20)); }
	inline uint8_t get_rchRenderModelComponentName18_20() const { return ___rchRenderModelComponentName18_20; }
	inline uint8_t* get_address_of_rchRenderModelComponentName18_20() { return &___rchRenderModelComponentName18_20; }
	inline void set_rchRenderModelComponentName18_20(uint8_t value)
	{
		___rchRenderModelComponentName18_20 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName19_21() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName19_21)); }
	inline uint8_t get_rchRenderModelComponentName19_21() const { return ___rchRenderModelComponentName19_21; }
	inline uint8_t* get_address_of_rchRenderModelComponentName19_21() { return &___rchRenderModelComponentName19_21; }
	inline void set_rchRenderModelComponentName19_21(uint8_t value)
	{
		___rchRenderModelComponentName19_21 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName20_22() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName20_22)); }
	inline uint8_t get_rchRenderModelComponentName20_22() const { return ___rchRenderModelComponentName20_22; }
	inline uint8_t* get_address_of_rchRenderModelComponentName20_22() { return &___rchRenderModelComponentName20_22; }
	inline void set_rchRenderModelComponentName20_22(uint8_t value)
	{
		___rchRenderModelComponentName20_22 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName21_23() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName21_23)); }
	inline uint8_t get_rchRenderModelComponentName21_23() const { return ___rchRenderModelComponentName21_23; }
	inline uint8_t* get_address_of_rchRenderModelComponentName21_23() { return &___rchRenderModelComponentName21_23; }
	inline void set_rchRenderModelComponentName21_23(uint8_t value)
	{
		___rchRenderModelComponentName21_23 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName22_24() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName22_24)); }
	inline uint8_t get_rchRenderModelComponentName22_24() const { return ___rchRenderModelComponentName22_24; }
	inline uint8_t* get_address_of_rchRenderModelComponentName22_24() { return &___rchRenderModelComponentName22_24; }
	inline void set_rchRenderModelComponentName22_24(uint8_t value)
	{
		___rchRenderModelComponentName22_24 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName23_25() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName23_25)); }
	inline uint8_t get_rchRenderModelComponentName23_25() const { return ___rchRenderModelComponentName23_25; }
	inline uint8_t* get_address_of_rchRenderModelComponentName23_25() { return &___rchRenderModelComponentName23_25; }
	inline void set_rchRenderModelComponentName23_25(uint8_t value)
	{
		___rchRenderModelComponentName23_25 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName24_26() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName24_26)); }
	inline uint8_t get_rchRenderModelComponentName24_26() const { return ___rchRenderModelComponentName24_26; }
	inline uint8_t* get_address_of_rchRenderModelComponentName24_26() { return &___rchRenderModelComponentName24_26; }
	inline void set_rchRenderModelComponentName24_26(uint8_t value)
	{
		___rchRenderModelComponentName24_26 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName25_27() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName25_27)); }
	inline uint8_t get_rchRenderModelComponentName25_27() const { return ___rchRenderModelComponentName25_27; }
	inline uint8_t* get_address_of_rchRenderModelComponentName25_27() { return &___rchRenderModelComponentName25_27; }
	inline void set_rchRenderModelComponentName25_27(uint8_t value)
	{
		___rchRenderModelComponentName25_27 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName26_28() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName26_28)); }
	inline uint8_t get_rchRenderModelComponentName26_28() const { return ___rchRenderModelComponentName26_28; }
	inline uint8_t* get_address_of_rchRenderModelComponentName26_28() { return &___rchRenderModelComponentName26_28; }
	inline void set_rchRenderModelComponentName26_28(uint8_t value)
	{
		___rchRenderModelComponentName26_28 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName27_29() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName27_29)); }
	inline uint8_t get_rchRenderModelComponentName27_29() const { return ___rchRenderModelComponentName27_29; }
	inline uint8_t* get_address_of_rchRenderModelComponentName27_29() { return &___rchRenderModelComponentName27_29; }
	inline void set_rchRenderModelComponentName27_29(uint8_t value)
	{
		___rchRenderModelComponentName27_29 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName28_30() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName28_30)); }
	inline uint8_t get_rchRenderModelComponentName28_30() const { return ___rchRenderModelComponentName28_30; }
	inline uint8_t* get_address_of_rchRenderModelComponentName28_30() { return &___rchRenderModelComponentName28_30; }
	inline void set_rchRenderModelComponentName28_30(uint8_t value)
	{
		___rchRenderModelComponentName28_30 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName29_31() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName29_31)); }
	inline uint8_t get_rchRenderModelComponentName29_31() const { return ___rchRenderModelComponentName29_31; }
	inline uint8_t* get_address_of_rchRenderModelComponentName29_31() { return &___rchRenderModelComponentName29_31; }
	inline void set_rchRenderModelComponentName29_31(uint8_t value)
	{
		___rchRenderModelComponentName29_31 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName30_32() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName30_32)); }
	inline uint8_t get_rchRenderModelComponentName30_32() const { return ___rchRenderModelComponentName30_32; }
	inline uint8_t* get_address_of_rchRenderModelComponentName30_32() { return &___rchRenderModelComponentName30_32; }
	inline void set_rchRenderModelComponentName30_32(uint8_t value)
	{
		___rchRenderModelComponentName30_32 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName31_33() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName31_33)); }
	inline uint8_t get_rchRenderModelComponentName31_33() const { return ___rchRenderModelComponentName31_33; }
	inline uint8_t* get_address_of_rchRenderModelComponentName31_33() { return &___rchRenderModelComponentName31_33; }
	inline void set_rchRenderModelComponentName31_33(uint8_t value)
	{
		___rchRenderModelComponentName31_33 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName32_34() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName32_34)); }
	inline uint8_t get_rchRenderModelComponentName32_34() const { return ___rchRenderModelComponentName32_34; }
	inline uint8_t* get_address_of_rchRenderModelComponentName32_34() { return &___rchRenderModelComponentName32_34; }
	inline void set_rchRenderModelComponentName32_34(uint8_t value)
	{
		___rchRenderModelComponentName32_34 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName33_35() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName33_35)); }
	inline uint8_t get_rchRenderModelComponentName33_35() const { return ___rchRenderModelComponentName33_35; }
	inline uint8_t* get_address_of_rchRenderModelComponentName33_35() { return &___rchRenderModelComponentName33_35; }
	inline void set_rchRenderModelComponentName33_35(uint8_t value)
	{
		___rchRenderModelComponentName33_35 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName34_36() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName34_36)); }
	inline uint8_t get_rchRenderModelComponentName34_36() const { return ___rchRenderModelComponentName34_36; }
	inline uint8_t* get_address_of_rchRenderModelComponentName34_36() { return &___rchRenderModelComponentName34_36; }
	inline void set_rchRenderModelComponentName34_36(uint8_t value)
	{
		___rchRenderModelComponentName34_36 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName35_37() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName35_37)); }
	inline uint8_t get_rchRenderModelComponentName35_37() const { return ___rchRenderModelComponentName35_37; }
	inline uint8_t* get_address_of_rchRenderModelComponentName35_37() { return &___rchRenderModelComponentName35_37; }
	inline void set_rchRenderModelComponentName35_37(uint8_t value)
	{
		___rchRenderModelComponentName35_37 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName36_38() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName36_38)); }
	inline uint8_t get_rchRenderModelComponentName36_38() const { return ___rchRenderModelComponentName36_38; }
	inline uint8_t* get_address_of_rchRenderModelComponentName36_38() { return &___rchRenderModelComponentName36_38; }
	inline void set_rchRenderModelComponentName36_38(uint8_t value)
	{
		___rchRenderModelComponentName36_38 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName37_39() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName37_39)); }
	inline uint8_t get_rchRenderModelComponentName37_39() const { return ___rchRenderModelComponentName37_39; }
	inline uint8_t* get_address_of_rchRenderModelComponentName37_39() { return &___rchRenderModelComponentName37_39; }
	inline void set_rchRenderModelComponentName37_39(uint8_t value)
	{
		___rchRenderModelComponentName37_39 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName38_40() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName38_40)); }
	inline uint8_t get_rchRenderModelComponentName38_40() const { return ___rchRenderModelComponentName38_40; }
	inline uint8_t* get_address_of_rchRenderModelComponentName38_40() { return &___rchRenderModelComponentName38_40; }
	inline void set_rchRenderModelComponentName38_40(uint8_t value)
	{
		___rchRenderModelComponentName38_40 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName39_41() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName39_41)); }
	inline uint8_t get_rchRenderModelComponentName39_41() const { return ___rchRenderModelComponentName39_41; }
	inline uint8_t* get_address_of_rchRenderModelComponentName39_41() { return &___rchRenderModelComponentName39_41; }
	inline void set_rchRenderModelComponentName39_41(uint8_t value)
	{
		___rchRenderModelComponentName39_41 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName40_42() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName40_42)); }
	inline uint8_t get_rchRenderModelComponentName40_42() const { return ___rchRenderModelComponentName40_42; }
	inline uint8_t* get_address_of_rchRenderModelComponentName40_42() { return &___rchRenderModelComponentName40_42; }
	inline void set_rchRenderModelComponentName40_42(uint8_t value)
	{
		___rchRenderModelComponentName40_42 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName41_43() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName41_43)); }
	inline uint8_t get_rchRenderModelComponentName41_43() const { return ___rchRenderModelComponentName41_43; }
	inline uint8_t* get_address_of_rchRenderModelComponentName41_43() { return &___rchRenderModelComponentName41_43; }
	inline void set_rchRenderModelComponentName41_43(uint8_t value)
	{
		___rchRenderModelComponentName41_43 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName42_44() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName42_44)); }
	inline uint8_t get_rchRenderModelComponentName42_44() const { return ___rchRenderModelComponentName42_44; }
	inline uint8_t* get_address_of_rchRenderModelComponentName42_44() { return &___rchRenderModelComponentName42_44; }
	inline void set_rchRenderModelComponentName42_44(uint8_t value)
	{
		___rchRenderModelComponentName42_44 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName43_45() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName43_45)); }
	inline uint8_t get_rchRenderModelComponentName43_45() const { return ___rchRenderModelComponentName43_45; }
	inline uint8_t* get_address_of_rchRenderModelComponentName43_45() { return &___rchRenderModelComponentName43_45; }
	inline void set_rchRenderModelComponentName43_45(uint8_t value)
	{
		___rchRenderModelComponentName43_45 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName44_46() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName44_46)); }
	inline uint8_t get_rchRenderModelComponentName44_46() const { return ___rchRenderModelComponentName44_46; }
	inline uint8_t* get_address_of_rchRenderModelComponentName44_46() { return &___rchRenderModelComponentName44_46; }
	inline void set_rchRenderModelComponentName44_46(uint8_t value)
	{
		___rchRenderModelComponentName44_46 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName45_47() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName45_47)); }
	inline uint8_t get_rchRenderModelComponentName45_47() const { return ___rchRenderModelComponentName45_47; }
	inline uint8_t* get_address_of_rchRenderModelComponentName45_47() { return &___rchRenderModelComponentName45_47; }
	inline void set_rchRenderModelComponentName45_47(uint8_t value)
	{
		___rchRenderModelComponentName45_47 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName46_48() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName46_48)); }
	inline uint8_t get_rchRenderModelComponentName46_48() const { return ___rchRenderModelComponentName46_48; }
	inline uint8_t* get_address_of_rchRenderModelComponentName46_48() { return &___rchRenderModelComponentName46_48; }
	inline void set_rchRenderModelComponentName46_48(uint8_t value)
	{
		___rchRenderModelComponentName46_48 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName47_49() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName47_49)); }
	inline uint8_t get_rchRenderModelComponentName47_49() const { return ___rchRenderModelComponentName47_49; }
	inline uint8_t* get_address_of_rchRenderModelComponentName47_49() { return &___rchRenderModelComponentName47_49; }
	inline void set_rchRenderModelComponentName47_49(uint8_t value)
	{
		___rchRenderModelComponentName47_49 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName48_50() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName48_50)); }
	inline uint8_t get_rchRenderModelComponentName48_50() const { return ___rchRenderModelComponentName48_50; }
	inline uint8_t* get_address_of_rchRenderModelComponentName48_50() { return &___rchRenderModelComponentName48_50; }
	inline void set_rchRenderModelComponentName48_50(uint8_t value)
	{
		___rchRenderModelComponentName48_50 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName49_51() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName49_51)); }
	inline uint8_t get_rchRenderModelComponentName49_51() const { return ___rchRenderModelComponentName49_51; }
	inline uint8_t* get_address_of_rchRenderModelComponentName49_51() { return &___rchRenderModelComponentName49_51; }
	inline void set_rchRenderModelComponentName49_51(uint8_t value)
	{
		___rchRenderModelComponentName49_51 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName50_52() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName50_52)); }
	inline uint8_t get_rchRenderModelComponentName50_52() const { return ___rchRenderModelComponentName50_52; }
	inline uint8_t* get_address_of_rchRenderModelComponentName50_52() { return &___rchRenderModelComponentName50_52; }
	inline void set_rchRenderModelComponentName50_52(uint8_t value)
	{
		___rchRenderModelComponentName50_52 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName51_53() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName51_53)); }
	inline uint8_t get_rchRenderModelComponentName51_53() const { return ___rchRenderModelComponentName51_53; }
	inline uint8_t* get_address_of_rchRenderModelComponentName51_53() { return &___rchRenderModelComponentName51_53; }
	inline void set_rchRenderModelComponentName51_53(uint8_t value)
	{
		___rchRenderModelComponentName51_53 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName52_54() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName52_54)); }
	inline uint8_t get_rchRenderModelComponentName52_54() const { return ___rchRenderModelComponentName52_54; }
	inline uint8_t* get_address_of_rchRenderModelComponentName52_54() { return &___rchRenderModelComponentName52_54; }
	inline void set_rchRenderModelComponentName52_54(uint8_t value)
	{
		___rchRenderModelComponentName52_54 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName53_55() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName53_55)); }
	inline uint8_t get_rchRenderModelComponentName53_55() const { return ___rchRenderModelComponentName53_55; }
	inline uint8_t* get_address_of_rchRenderModelComponentName53_55() { return &___rchRenderModelComponentName53_55; }
	inline void set_rchRenderModelComponentName53_55(uint8_t value)
	{
		___rchRenderModelComponentName53_55 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName54_56() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName54_56)); }
	inline uint8_t get_rchRenderModelComponentName54_56() const { return ___rchRenderModelComponentName54_56; }
	inline uint8_t* get_address_of_rchRenderModelComponentName54_56() { return &___rchRenderModelComponentName54_56; }
	inline void set_rchRenderModelComponentName54_56(uint8_t value)
	{
		___rchRenderModelComponentName54_56 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName55_57() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName55_57)); }
	inline uint8_t get_rchRenderModelComponentName55_57() const { return ___rchRenderModelComponentName55_57; }
	inline uint8_t* get_address_of_rchRenderModelComponentName55_57() { return &___rchRenderModelComponentName55_57; }
	inline void set_rchRenderModelComponentName55_57(uint8_t value)
	{
		___rchRenderModelComponentName55_57 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName56_58() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName56_58)); }
	inline uint8_t get_rchRenderModelComponentName56_58() const { return ___rchRenderModelComponentName56_58; }
	inline uint8_t* get_address_of_rchRenderModelComponentName56_58() { return &___rchRenderModelComponentName56_58; }
	inline void set_rchRenderModelComponentName56_58(uint8_t value)
	{
		___rchRenderModelComponentName56_58 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName57_59() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName57_59)); }
	inline uint8_t get_rchRenderModelComponentName57_59() const { return ___rchRenderModelComponentName57_59; }
	inline uint8_t* get_address_of_rchRenderModelComponentName57_59() { return &___rchRenderModelComponentName57_59; }
	inline void set_rchRenderModelComponentName57_59(uint8_t value)
	{
		___rchRenderModelComponentName57_59 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName58_60() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName58_60)); }
	inline uint8_t get_rchRenderModelComponentName58_60() const { return ___rchRenderModelComponentName58_60; }
	inline uint8_t* get_address_of_rchRenderModelComponentName58_60() { return &___rchRenderModelComponentName58_60; }
	inline void set_rchRenderModelComponentName58_60(uint8_t value)
	{
		___rchRenderModelComponentName58_60 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName59_61() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName59_61)); }
	inline uint8_t get_rchRenderModelComponentName59_61() const { return ___rchRenderModelComponentName59_61; }
	inline uint8_t* get_address_of_rchRenderModelComponentName59_61() { return &___rchRenderModelComponentName59_61; }
	inline void set_rchRenderModelComponentName59_61(uint8_t value)
	{
		___rchRenderModelComponentName59_61 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName60_62() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName60_62)); }
	inline uint8_t get_rchRenderModelComponentName60_62() const { return ___rchRenderModelComponentName60_62; }
	inline uint8_t* get_address_of_rchRenderModelComponentName60_62() { return &___rchRenderModelComponentName60_62; }
	inline void set_rchRenderModelComponentName60_62(uint8_t value)
	{
		___rchRenderModelComponentName60_62 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName61_63() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName61_63)); }
	inline uint8_t get_rchRenderModelComponentName61_63() const { return ___rchRenderModelComponentName61_63; }
	inline uint8_t* get_address_of_rchRenderModelComponentName61_63() { return &___rchRenderModelComponentName61_63; }
	inline void set_rchRenderModelComponentName61_63(uint8_t value)
	{
		___rchRenderModelComponentName61_63 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName62_64() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName62_64)); }
	inline uint8_t get_rchRenderModelComponentName62_64() const { return ___rchRenderModelComponentName62_64; }
	inline uint8_t* get_address_of_rchRenderModelComponentName62_64() { return &___rchRenderModelComponentName62_64; }
	inline void set_rchRenderModelComponentName62_64(uint8_t value)
	{
		___rchRenderModelComponentName62_64 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName63_65() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName63_65)); }
	inline uint8_t get_rchRenderModelComponentName63_65() const { return ___rchRenderModelComponentName63_65; }
	inline uint8_t* get_address_of_rchRenderModelComponentName63_65() { return &___rchRenderModelComponentName63_65; }
	inline void set_rchRenderModelComponentName63_65(uint8_t value)
	{
		___rchRenderModelComponentName63_65 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName64_66() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName64_66)); }
	inline uint8_t get_rchRenderModelComponentName64_66() const { return ___rchRenderModelComponentName64_66; }
	inline uint8_t* get_address_of_rchRenderModelComponentName64_66() { return &___rchRenderModelComponentName64_66; }
	inline void set_rchRenderModelComponentName64_66(uint8_t value)
	{
		___rchRenderModelComponentName64_66 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName65_67() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName65_67)); }
	inline uint8_t get_rchRenderModelComponentName65_67() const { return ___rchRenderModelComponentName65_67; }
	inline uint8_t* get_address_of_rchRenderModelComponentName65_67() { return &___rchRenderModelComponentName65_67; }
	inline void set_rchRenderModelComponentName65_67(uint8_t value)
	{
		___rchRenderModelComponentName65_67 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName66_68() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName66_68)); }
	inline uint8_t get_rchRenderModelComponentName66_68() const { return ___rchRenderModelComponentName66_68; }
	inline uint8_t* get_address_of_rchRenderModelComponentName66_68() { return &___rchRenderModelComponentName66_68; }
	inline void set_rchRenderModelComponentName66_68(uint8_t value)
	{
		___rchRenderModelComponentName66_68 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName67_69() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName67_69)); }
	inline uint8_t get_rchRenderModelComponentName67_69() const { return ___rchRenderModelComponentName67_69; }
	inline uint8_t* get_address_of_rchRenderModelComponentName67_69() { return &___rchRenderModelComponentName67_69; }
	inline void set_rchRenderModelComponentName67_69(uint8_t value)
	{
		___rchRenderModelComponentName67_69 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName68_70() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName68_70)); }
	inline uint8_t get_rchRenderModelComponentName68_70() const { return ___rchRenderModelComponentName68_70; }
	inline uint8_t* get_address_of_rchRenderModelComponentName68_70() { return &___rchRenderModelComponentName68_70; }
	inline void set_rchRenderModelComponentName68_70(uint8_t value)
	{
		___rchRenderModelComponentName68_70 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName69_71() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName69_71)); }
	inline uint8_t get_rchRenderModelComponentName69_71() const { return ___rchRenderModelComponentName69_71; }
	inline uint8_t* get_address_of_rchRenderModelComponentName69_71() { return &___rchRenderModelComponentName69_71; }
	inline void set_rchRenderModelComponentName69_71(uint8_t value)
	{
		___rchRenderModelComponentName69_71 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName70_72() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName70_72)); }
	inline uint8_t get_rchRenderModelComponentName70_72() const { return ___rchRenderModelComponentName70_72; }
	inline uint8_t* get_address_of_rchRenderModelComponentName70_72() { return &___rchRenderModelComponentName70_72; }
	inline void set_rchRenderModelComponentName70_72(uint8_t value)
	{
		___rchRenderModelComponentName70_72 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName71_73() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName71_73)); }
	inline uint8_t get_rchRenderModelComponentName71_73() const { return ___rchRenderModelComponentName71_73; }
	inline uint8_t* get_address_of_rchRenderModelComponentName71_73() { return &___rchRenderModelComponentName71_73; }
	inline void set_rchRenderModelComponentName71_73(uint8_t value)
	{
		___rchRenderModelComponentName71_73 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName72_74() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName72_74)); }
	inline uint8_t get_rchRenderModelComponentName72_74() const { return ___rchRenderModelComponentName72_74; }
	inline uint8_t* get_address_of_rchRenderModelComponentName72_74() { return &___rchRenderModelComponentName72_74; }
	inline void set_rchRenderModelComponentName72_74(uint8_t value)
	{
		___rchRenderModelComponentName72_74 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName73_75() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName73_75)); }
	inline uint8_t get_rchRenderModelComponentName73_75() const { return ___rchRenderModelComponentName73_75; }
	inline uint8_t* get_address_of_rchRenderModelComponentName73_75() { return &___rchRenderModelComponentName73_75; }
	inline void set_rchRenderModelComponentName73_75(uint8_t value)
	{
		___rchRenderModelComponentName73_75 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName74_76() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName74_76)); }
	inline uint8_t get_rchRenderModelComponentName74_76() const { return ___rchRenderModelComponentName74_76; }
	inline uint8_t* get_address_of_rchRenderModelComponentName74_76() { return &___rchRenderModelComponentName74_76; }
	inline void set_rchRenderModelComponentName74_76(uint8_t value)
	{
		___rchRenderModelComponentName74_76 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName75_77() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName75_77)); }
	inline uint8_t get_rchRenderModelComponentName75_77() const { return ___rchRenderModelComponentName75_77; }
	inline uint8_t* get_address_of_rchRenderModelComponentName75_77() { return &___rchRenderModelComponentName75_77; }
	inline void set_rchRenderModelComponentName75_77(uint8_t value)
	{
		___rchRenderModelComponentName75_77 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName76_78() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName76_78)); }
	inline uint8_t get_rchRenderModelComponentName76_78() const { return ___rchRenderModelComponentName76_78; }
	inline uint8_t* get_address_of_rchRenderModelComponentName76_78() { return &___rchRenderModelComponentName76_78; }
	inline void set_rchRenderModelComponentName76_78(uint8_t value)
	{
		___rchRenderModelComponentName76_78 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName77_79() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName77_79)); }
	inline uint8_t get_rchRenderModelComponentName77_79() const { return ___rchRenderModelComponentName77_79; }
	inline uint8_t* get_address_of_rchRenderModelComponentName77_79() { return &___rchRenderModelComponentName77_79; }
	inline void set_rchRenderModelComponentName77_79(uint8_t value)
	{
		___rchRenderModelComponentName77_79 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName78_80() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName78_80)); }
	inline uint8_t get_rchRenderModelComponentName78_80() const { return ___rchRenderModelComponentName78_80; }
	inline uint8_t* get_address_of_rchRenderModelComponentName78_80() { return &___rchRenderModelComponentName78_80; }
	inline void set_rchRenderModelComponentName78_80(uint8_t value)
	{
		___rchRenderModelComponentName78_80 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName79_81() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName79_81)); }
	inline uint8_t get_rchRenderModelComponentName79_81() const { return ___rchRenderModelComponentName79_81; }
	inline uint8_t* get_address_of_rchRenderModelComponentName79_81() { return &___rchRenderModelComponentName79_81; }
	inline void set_rchRenderModelComponentName79_81(uint8_t value)
	{
		___rchRenderModelComponentName79_81 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName80_82() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName80_82)); }
	inline uint8_t get_rchRenderModelComponentName80_82() const { return ___rchRenderModelComponentName80_82; }
	inline uint8_t* get_address_of_rchRenderModelComponentName80_82() { return &___rchRenderModelComponentName80_82; }
	inline void set_rchRenderModelComponentName80_82(uint8_t value)
	{
		___rchRenderModelComponentName80_82 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName81_83() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName81_83)); }
	inline uint8_t get_rchRenderModelComponentName81_83() const { return ___rchRenderModelComponentName81_83; }
	inline uint8_t* get_address_of_rchRenderModelComponentName81_83() { return &___rchRenderModelComponentName81_83; }
	inline void set_rchRenderModelComponentName81_83(uint8_t value)
	{
		___rchRenderModelComponentName81_83 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName82_84() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName82_84)); }
	inline uint8_t get_rchRenderModelComponentName82_84() const { return ___rchRenderModelComponentName82_84; }
	inline uint8_t* get_address_of_rchRenderModelComponentName82_84() { return &___rchRenderModelComponentName82_84; }
	inline void set_rchRenderModelComponentName82_84(uint8_t value)
	{
		___rchRenderModelComponentName82_84 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName83_85() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName83_85)); }
	inline uint8_t get_rchRenderModelComponentName83_85() const { return ___rchRenderModelComponentName83_85; }
	inline uint8_t* get_address_of_rchRenderModelComponentName83_85() { return &___rchRenderModelComponentName83_85; }
	inline void set_rchRenderModelComponentName83_85(uint8_t value)
	{
		___rchRenderModelComponentName83_85 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName84_86() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName84_86)); }
	inline uint8_t get_rchRenderModelComponentName84_86() const { return ___rchRenderModelComponentName84_86; }
	inline uint8_t* get_address_of_rchRenderModelComponentName84_86() { return &___rchRenderModelComponentName84_86; }
	inline void set_rchRenderModelComponentName84_86(uint8_t value)
	{
		___rchRenderModelComponentName84_86 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName85_87() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName85_87)); }
	inline uint8_t get_rchRenderModelComponentName85_87() const { return ___rchRenderModelComponentName85_87; }
	inline uint8_t* get_address_of_rchRenderModelComponentName85_87() { return &___rchRenderModelComponentName85_87; }
	inline void set_rchRenderModelComponentName85_87(uint8_t value)
	{
		___rchRenderModelComponentName85_87 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName86_88() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName86_88)); }
	inline uint8_t get_rchRenderModelComponentName86_88() const { return ___rchRenderModelComponentName86_88; }
	inline uint8_t* get_address_of_rchRenderModelComponentName86_88() { return &___rchRenderModelComponentName86_88; }
	inline void set_rchRenderModelComponentName86_88(uint8_t value)
	{
		___rchRenderModelComponentName86_88 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName87_89() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName87_89)); }
	inline uint8_t get_rchRenderModelComponentName87_89() const { return ___rchRenderModelComponentName87_89; }
	inline uint8_t* get_address_of_rchRenderModelComponentName87_89() { return &___rchRenderModelComponentName87_89; }
	inline void set_rchRenderModelComponentName87_89(uint8_t value)
	{
		___rchRenderModelComponentName87_89 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName88_90() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName88_90)); }
	inline uint8_t get_rchRenderModelComponentName88_90() const { return ___rchRenderModelComponentName88_90; }
	inline uint8_t* get_address_of_rchRenderModelComponentName88_90() { return &___rchRenderModelComponentName88_90; }
	inline void set_rchRenderModelComponentName88_90(uint8_t value)
	{
		___rchRenderModelComponentName88_90 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName89_91() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName89_91)); }
	inline uint8_t get_rchRenderModelComponentName89_91() const { return ___rchRenderModelComponentName89_91; }
	inline uint8_t* get_address_of_rchRenderModelComponentName89_91() { return &___rchRenderModelComponentName89_91; }
	inline void set_rchRenderModelComponentName89_91(uint8_t value)
	{
		___rchRenderModelComponentName89_91 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName90_92() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName90_92)); }
	inline uint8_t get_rchRenderModelComponentName90_92() const { return ___rchRenderModelComponentName90_92; }
	inline uint8_t* get_address_of_rchRenderModelComponentName90_92() { return &___rchRenderModelComponentName90_92; }
	inline void set_rchRenderModelComponentName90_92(uint8_t value)
	{
		___rchRenderModelComponentName90_92 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName91_93() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName91_93)); }
	inline uint8_t get_rchRenderModelComponentName91_93() const { return ___rchRenderModelComponentName91_93; }
	inline uint8_t* get_address_of_rchRenderModelComponentName91_93() { return &___rchRenderModelComponentName91_93; }
	inline void set_rchRenderModelComponentName91_93(uint8_t value)
	{
		___rchRenderModelComponentName91_93 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName92_94() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName92_94)); }
	inline uint8_t get_rchRenderModelComponentName92_94() const { return ___rchRenderModelComponentName92_94; }
	inline uint8_t* get_address_of_rchRenderModelComponentName92_94() { return &___rchRenderModelComponentName92_94; }
	inline void set_rchRenderModelComponentName92_94(uint8_t value)
	{
		___rchRenderModelComponentName92_94 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName93_95() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName93_95)); }
	inline uint8_t get_rchRenderModelComponentName93_95() const { return ___rchRenderModelComponentName93_95; }
	inline uint8_t* get_address_of_rchRenderModelComponentName93_95() { return &___rchRenderModelComponentName93_95; }
	inline void set_rchRenderModelComponentName93_95(uint8_t value)
	{
		___rchRenderModelComponentName93_95 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName94_96() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName94_96)); }
	inline uint8_t get_rchRenderModelComponentName94_96() const { return ___rchRenderModelComponentName94_96; }
	inline uint8_t* get_address_of_rchRenderModelComponentName94_96() { return &___rchRenderModelComponentName94_96; }
	inline void set_rchRenderModelComponentName94_96(uint8_t value)
	{
		___rchRenderModelComponentName94_96 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName95_97() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName95_97)); }
	inline uint8_t get_rchRenderModelComponentName95_97() const { return ___rchRenderModelComponentName95_97; }
	inline uint8_t* get_address_of_rchRenderModelComponentName95_97() { return &___rchRenderModelComponentName95_97; }
	inline void set_rchRenderModelComponentName95_97(uint8_t value)
	{
		___rchRenderModelComponentName95_97 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName96_98() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName96_98)); }
	inline uint8_t get_rchRenderModelComponentName96_98() const { return ___rchRenderModelComponentName96_98; }
	inline uint8_t* get_address_of_rchRenderModelComponentName96_98() { return &___rchRenderModelComponentName96_98; }
	inline void set_rchRenderModelComponentName96_98(uint8_t value)
	{
		___rchRenderModelComponentName96_98 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName97_99() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName97_99)); }
	inline uint8_t get_rchRenderModelComponentName97_99() const { return ___rchRenderModelComponentName97_99; }
	inline uint8_t* get_address_of_rchRenderModelComponentName97_99() { return &___rchRenderModelComponentName97_99; }
	inline void set_rchRenderModelComponentName97_99(uint8_t value)
	{
		___rchRenderModelComponentName97_99 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName98_100() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName98_100)); }
	inline uint8_t get_rchRenderModelComponentName98_100() const { return ___rchRenderModelComponentName98_100; }
	inline uint8_t* get_address_of_rchRenderModelComponentName98_100() { return &___rchRenderModelComponentName98_100; }
	inline void set_rchRenderModelComponentName98_100(uint8_t value)
	{
		___rchRenderModelComponentName98_100 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName99_101() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName99_101)); }
	inline uint8_t get_rchRenderModelComponentName99_101() const { return ___rchRenderModelComponentName99_101; }
	inline uint8_t* get_address_of_rchRenderModelComponentName99_101() { return &___rchRenderModelComponentName99_101; }
	inline void set_rchRenderModelComponentName99_101(uint8_t value)
	{
		___rchRenderModelComponentName99_101 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName100_102() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName100_102)); }
	inline uint8_t get_rchRenderModelComponentName100_102() const { return ___rchRenderModelComponentName100_102; }
	inline uint8_t* get_address_of_rchRenderModelComponentName100_102() { return &___rchRenderModelComponentName100_102; }
	inline void set_rchRenderModelComponentName100_102(uint8_t value)
	{
		___rchRenderModelComponentName100_102 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName101_103() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName101_103)); }
	inline uint8_t get_rchRenderModelComponentName101_103() const { return ___rchRenderModelComponentName101_103; }
	inline uint8_t* get_address_of_rchRenderModelComponentName101_103() { return &___rchRenderModelComponentName101_103; }
	inline void set_rchRenderModelComponentName101_103(uint8_t value)
	{
		___rchRenderModelComponentName101_103 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName102_104() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName102_104)); }
	inline uint8_t get_rchRenderModelComponentName102_104() const { return ___rchRenderModelComponentName102_104; }
	inline uint8_t* get_address_of_rchRenderModelComponentName102_104() { return &___rchRenderModelComponentName102_104; }
	inline void set_rchRenderModelComponentName102_104(uint8_t value)
	{
		___rchRenderModelComponentName102_104 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName103_105() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName103_105)); }
	inline uint8_t get_rchRenderModelComponentName103_105() const { return ___rchRenderModelComponentName103_105; }
	inline uint8_t* get_address_of_rchRenderModelComponentName103_105() { return &___rchRenderModelComponentName103_105; }
	inline void set_rchRenderModelComponentName103_105(uint8_t value)
	{
		___rchRenderModelComponentName103_105 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName104_106() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName104_106)); }
	inline uint8_t get_rchRenderModelComponentName104_106() const { return ___rchRenderModelComponentName104_106; }
	inline uint8_t* get_address_of_rchRenderModelComponentName104_106() { return &___rchRenderModelComponentName104_106; }
	inline void set_rchRenderModelComponentName104_106(uint8_t value)
	{
		___rchRenderModelComponentName104_106 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName105_107() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName105_107)); }
	inline uint8_t get_rchRenderModelComponentName105_107() const { return ___rchRenderModelComponentName105_107; }
	inline uint8_t* get_address_of_rchRenderModelComponentName105_107() { return &___rchRenderModelComponentName105_107; }
	inline void set_rchRenderModelComponentName105_107(uint8_t value)
	{
		___rchRenderModelComponentName105_107 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName106_108() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName106_108)); }
	inline uint8_t get_rchRenderModelComponentName106_108() const { return ___rchRenderModelComponentName106_108; }
	inline uint8_t* get_address_of_rchRenderModelComponentName106_108() { return &___rchRenderModelComponentName106_108; }
	inline void set_rchRenderModelComponentName106_108(uint8_t value)
	{
		___rchRenderModelComponentName106_108 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName107_109() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName107_109)); }
	inline uint8_t get_rchRenderModelComponentName107_109() const { return ___rchRenderModelComponentName107_109; }
	inline uint8_t* get_address_of_rchRenderModelComponentName107_109() { return &___rchRenderModelComponentName107_109; }
	inline void set_rchRenderModelComponentName107_109(uint8_t value)
	{
		___rchRenderModelComponentName107_109 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName108_110() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName108_110)); }
	inline uint8_t get_rchRenderModelComponentName108_110() const { return ___rchRenderModelComponentName108_110; }
	inline uint8_t* get_address_of_rchRenderModelComponentName108_110() { return &___rchRenderModelComponentName108_110; }
	inline void set_rchRenderModelComponentName108_110(uint8_t value)
	{
		___rchRenderModelComponentName108_110 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName109_111() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName109_111)); }
	inline uint8_t get_rchRenderModelComponentName109_111() const { return ___rchRenderModelComponentName109_111; }
	inline uint8_t* get_address_of_rchRenderModelComponentName109_111() { return &___rchRenderModelComponentName109_111; }
	inline void set_rchRenderModelComponentName109_111(uint8_t value)
	{
		___rchRenderModelComponentName109_111 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName110_112() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName110_112)); }
	inline uint8_t get_rchRenderModelComponentName110_112() const { return ___rchRenderModelComponentName110_112; }
	inline uint8_t* get_address_of_rchRenderModelComponentName110_112() { return &___rchRenderModelComponentName110_112; }
	inline void set_rchRenderModelComponentName110_112(uint8_t value)
	{
		___rchRenderModelComponentName110_112 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName111_113() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName111_113)); }
	inline uint8_t get_rchRenderModelComponentName111_113() const { return ___rchRenderModelComponentName111_113; }
	inline uint8_t* get_address_of_rchRenderModelComponentName111_113() { return &___rchRenderModelComponentName111_113; }
	inline void set_rchRenderModelComponentName111_113(uint8_t value)
	{
		___rchRenderModelComponentName111_113 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName112_114() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName112_114)); }
	inline uint8_t get_rchRenderModelComponentName112_114() const { return ___rchRenderModelComponentName112_114; }
	inline uint8_t* get_address_of_rchRenderModelComponentName112_114() { return &___rchRenderModelComponentName112_114; }
	inline void set_rchRenderModelComponentName112_114(uint8_t value)
	{
		___rchRenderModelComponentName112_114 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName113_115() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName113_115)); }
	inline uint8_t get_rchRenderModelComponentName113_115() const { return ___rchRenderModelComponentName113_115; }
	inline uint8_t* get_address_of_rchRenderModelComponentName113_115() { return &___rchRenderModelComponentName113_115; }
	inline void set_rchRenderModelComponentName113_115(uint8_t value)
	{
		___rchRenderModelComponentName113_115 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName114_116() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName114_116)); }
	inline uint8_t get_rchRenderModelComponentName114_116() const { return ___rchRenderModelComponentName114_116; }
	inline uint8_t* get_address_of_rchRenderModelComponentName114_116() { return &___rchRenderModelComponentName114_116; }
	inline void set_rchRenderModelComponentName114_116(uint8_t value)
	{
		___rchRenderModelComponentName114_116 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName115_117() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName115_117)); }
	inline uint8_t get_rchRenderModelComponentName115_117() const { return ___rchRenderModelComponentName115_117; }
	inline uint8_t* get_address_of_rchRenderModelComponentName115_117() { return &___rchRenderModelComponentName115_117; }
	inline void set_rchRenderModelComponentName115_117(uint8_t value)
	{
		___rchRenderModelComponentName115_117 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName116_118() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName116_118)); }
	inline uint8_t get_rchRenderModelComponentName116_118() const { return ___rchRenderModelComponentName116_118; }
	inline uint8_t* get_address_of_rchRenderModelComponentName116_118() { return &___rchRenderModelComponentName116_118; }
	inline void set_rchRenderModelComponentName116_118(uint8_t value)
	{
		___rchRenderModelComponentName116_118 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName117_119() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName117_119)); }
	inline uint8_t get_rchRenderModelComponentName117_119() const { return ___rchRenderModelComponentName117_119; }
	inline uint8_t* get_address_of_rchRenderModelComponentName117_119() { return &___rchRenderModelComponentName117_119; }
	inline void set_rchRenderModelComponentName117_119(uint8_t value)
	{
		___rchRenderModelComponentName117_119 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName118_120() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName118_120)); }
	inline uint8_t get_rchRenderModelComponentName118_120() const { return ___rchRenderModelComponentName118_120; }
	inline uint8_t* get_address_of_rchRenderModelComponentName118_120() { return &___rchRenderModelComponentName118_120; }
	inline void set_rchRenderModelComponentName118_120(uint8_t value)
	{
		___rchRenderModelComponentName118_120 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName119_121() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName119_121)); }
	inline uint8_t get_rchRenderModelComponentName119_121() const { return ___rchRenderModelComponentName119_121; }
	inline uint8_t* get_address_of_rchRenderModelComponentName119_121() { return &___rchRenderModelComponentName119_121; }
	inline void set_rchRenderModelComponentName119_121(uint8_t value)
	{
		___rchRenderModelComponentName119_121 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName120_122() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName120_122)); }
	inline uint8_t get_rchRenderModelComponentName120_122() const { return ___rchRenderModelComponentName120_122; }
	inline uint8_t* get_address_of_rchRenderModelComponentName120_122() { return &___rchRenderModelComponentName120_122; }
	inline void set_rchRenderModelComponentName120_122(uint8_t value)
	{
		___rchRenderModelComponentName120_122 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName121_123() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName121_123)); }
	inline uint8_t get_rchRenderModelComponentName121_123() const { return ___rchRenderModelComponentName121_123; }
	inline uint8_t* get_address_of_rchRenderModelComponentName121_123() { return &___rchRenderModelComponentName121_123; }
	inline void set_rchRenderModelComponentName121_123(uint8_t value)
	{
		___rchRenderModelComponentName121_123 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName122_124() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName122_124)); }
	inline uint8_t get_rchRenderModelComponentName122_124() const { return ___rchRenderModelComponentName122_124; }
	inline uint8_t* get_address_of_rchRenderModelComponentName122_124() { return &___rchRenderModelComponentName122_124; }
	inline void set_rchRenderModelComponentName122_124(uint8_t value)
	{
		___rchRenderModelComponentName122_124 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName123_125() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName123_125)); }
	inline uint8_t get_rchRenderModelComponentName123_125() const { return ___rchRenderModelComponentName123_125; }
	inline uint8_t* get_address_of_rchRenderModelComponentName123_125() { return &___rchRenderModelComponentName123_125; }
	inline void set_rchRenderModelComponentName123_125(uint8_t value)
	{
		___rchRenderModelComponentName123_125 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName124_126() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName124_126)); }
	inline uint8_t get_rchRenderModelComponentName124_126() const { return ___rchRenderModelComponentName124_126; }
	inline uint8_t* get_address_of_rchRenderModelComponentName124_126() { return &___rchRenderModelComponentName124_126; }
	inline void set_rchRenderModelComponentName124_126(uint8_t value)
	{
		___rchRenderModelComponentName124_126 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName125_127() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName125_127)); }
	inline uint8_t get_rchRenderModelComponentName125_127() const { return ___rchRenderModelComponentName125_127; }
	inline uint8_t* get_address_of_rchRenderModelComponentName125_127() { return &___rchRenderModelComponentName125_127; }
	inline void set_rchRenderModelComponentName125_127(uint8_t value)
	{
		___rchRenderModelComponentName125_127 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName126_128() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName126_128)); }
	inline uint8_t get_rchRenderModelComponentName126_128() const { return ___rchRenderModelComponentName126_128; }
	inline uint8_t* get_address_of_rchRenderModelComponentName126_128() { return &___rchRenderModelComponentName126_128; }
	inline void set_rchRenderModelComponentName126_128(uint8_t value)
	{
		___rchRenderModelComponentName126_128 = value;
	}

	inline static int32_t get_offset_of_rchRenderModelComponentName127_129() { return static_cast<int32_t>(offsetof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A, ___rchRenderModelComponentName127_129)); }
	inline uint8_t get_rchRenderModelComponentName127_129() const { return ___rchRenderModelComponentName127_129; }
	inline uint8_t* get_address_of_rchRenderModelComponentName127_129() { return &___rchRenderModelComponentName127_129; }
	inline void set_rchRenderModelComponentName127_129(uint8_t value)
	{
		___rchRenderModelComponentName127_129 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___sourceMap_4)); }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___sourceMap_4)); }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___sourceMap_4)); }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D  : public SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734
{
public:
	// SourceMap Valve.VR.SteamVR_Action`2::sourceMap
	SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * ___sourceMap_4;
	// System.Boolean Valve.VR.SteamVR_Action`2::initialized
	bool ___initialized_5;

public:
	inline static int32_t get_offset_of_sourceMap_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___sourceMap_4)); }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * get_sourceMap_4() const { return ___sourceMap_4; }
	inline SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB ** get_address_of_sourceMap_4() { return &___sourceMap_4; }
	inline void set_sourceMap_4(SteamVR_Action_Skeleton_Source_Map_t9A588DFCDF65DA8AA617B2170C0E11EB89FA89DB * value)
	{
		___sourceMap_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sourceMap_4), (void*)value);
	}

	inline static int32_t get_offset_of_initialized_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D, ___initialized_5)); }
	inline bool get_initialized_5() const { return ___initialized_5; }
	inline bool* get_address_of_initialized_5() { return &___initialized_5; }
	inline void set_initialized_5(bool value)
	{
		___initialized_5 = value;
	}
};


// Valve.VR.VRActiveActionSet_t
struct  VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38 
{
public:
	// System.UInt64 Valve.VR.VRActiveActionSet_t::ulActionSet
	uint64_t ___ulActionSet_0;
	// System.UInt64 Valve.VR.VRActiveActionSet_t::ulRestrictedToDevice
	uint64_t ___ulRestrictedToDevice_1;
	// System.UInt64 Valve.VR.VRActiveActionSet_t::ulSecondaryActionSet
	uint64_t ___ulSecondaryActionSet_2;
	// System.UInt32 Valve.VR.VRActiveActionSet_t::unPadding
	uint32_t ___unPadding_3;
	// System.Int32 Valve.VR.VRActiveActionSet_t::nPriority
	int32_t ___nPriority_4;

public:
	inline static int32_t get_offset_of_ulActionSet_0() { return static_cast<int32_t>(offsetof(VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38, ___ulActionSet_0)); }
	inline uint64_t get_ulActionSet_0() const { return ___ulActionSet_0; }
	inline uint64_t* get_address_of_ulActionSet_0() { return &___ulActionSet_0; }
	inline void set_ulActionSet_0(uint64_t value)
	{
		___ulActionSet_0 = value;
	}

	inline static int32_t get_offset_of_ulRestrictedToDevice_1() { return static_cast<int32_t>(offsetof(VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38, ___ulRestrictedToDevice_1)); }
	inline uint64_t get_ulRestrictedToDevice_1() const { return ___ulRestrictedToDevice_1; }
	inline uint64_t* get_address_of_ulRestrictedToDevice_1() { return &___ulRestrictedToDevice_1; }
	inline void set_ulRestrictedToDevice_1(uint64_t value)
	{
		___ulRestrictedToDevice_1 = value;
	}

	inline static int32_t get_offset_of_ulSecondaryActionSet_2() { return static_cast<int32_t>(offsetof(VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38, ___ulSecondaryActionSet_2)); }
	inline uint64_t get_ulSecondaryActionSet_2() const { return ___ulSecondaryActionSet_2; }
	inline uint64_t* get_address_of_ulSecondaryActionSet_2() { return &___ulSecondaryActionSet_2; }
	inline void set_ulSecondaryActionSet_2(uint64_t value)
	{
		___ulSecondaryActionSet_2 = value;
	}

	inline static int32_t get_offset_of_unPadding_3() { return static_cast<int32_t>(offsetof(VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38, ___unPadding_3)); }
	inline uint32_t get_unPadding_3() const { return ___unPadding_3; }
	inline uint32_t* get_address_of_unPadding_3() { return &___unPadding_3; }
	inline void set_unPadding_3(uint32_t value)
	{
		___unPadding_3 = value;
	}

	inline static int32_t get_offset_of_nPriority_4() { return static_cast<int32_t>(offsetof(VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38, ___nPriority_4)); }
	inline int32_t get_nPriority_4() const { return ___nPriority_4; }
	inline int32_t* get_address_of_nPriority_4() { return &___nPriority_4; }
	inline void set_nPriority_4(int32_t value)
	{
		___nPriority_4 = value;
	}
};


// System.Delegate
struct  Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___m_target_2), (void*)value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___method_info_7), (void*)value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___original_method_info_8), (void*)value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___data_9), (void*)value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};

// System.Reflection.BindingFlags
struct  BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0 
{
public:
	// System.Int32 System.Reflection.BindingFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(BindingFlags_tE35C91D046E63A1B92BB9AB909FCF9DA84379ED0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.RuntimeTypeHandle
struct  RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D 
{
public:
	// System.IntPtr System.RuntimeTypeHandle::value
	intptr_t ___value_0;

public:
	inline static int32_t get_offset_of_value_0() { return static_cast<int32_t>(offsetof(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D, ___value_0)); }
	inline intptr_t get_value_0() const { return ___value_0; }
	inline intptr_t* get_address_of_value_0() { return &___value_0; }
	inline void set_value_0(intptr_t value)
	{
		___value_0 = value;
	}
};


// UnityEngine.Object
struct  Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0  : public RuntimeObject
{
public:
	// System.IntPtr UnityEngine.Object::m_CachedPtr
	intptr_t ___m_CachedPtr_0;

public:
	inline static int32_t get_offset_of_m_CachedPtr_0() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0, ___m_CachedPtr_0)); }
	inline intptr_t get_m_CachedPtr_0() const { return ___m_CachedPtr_0; }
	inline intptr_t* get_address_of_m_CachedPtr_0() { return &___m_CachedPtr_0; }
	inline void set_m_CachedPtr_0(intptr_t value)
	{
		___m_CachedPtr_0 = value;
	}
};

struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields
{
public:
	// System.Int32 UnityEngine.Object::OffsetOfInstanceIDInCPlusPlusObject
	int32_t ___OffsetOfInstanceIDInCPlusPlusObject_1;

public:
	inline static int32_t get_offset_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return static_cast<int32_t>(offsetof(Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_StaticFields, ___OffsetOfInstanceIDInCPlusPlusObject_1)); }
	inline int32_t get_OffsetOfInstanceIDInCPlusPlusObject_1() const { return ___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline int32_t* get_address_of_OffsetOfInstanceIDInCPlusPlusObject_1() { return &___OffsetOfInstanceIDInCPlusPlusObject_1; }
	inline void set_OffsetOfInstanceIDInCPlusPlusObject_1(int32_t value)
	{
		___OffsetOfInstanceIDInCPlusPlusObject_1 = value;
	}
};

// Native definition for P/Invoke marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_pinvoke
{
	intptr_t ___m_CachedPtr_0;
};
// Native definition for COM marshalling of UnityEngine.Object
struct Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0_marshaled_com
{
	intptr_t ___m_CachedPtr_0;
};

// Valve.VR.CVRCompositor
struct  CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A  : public RuntimeObject
{
public:
	// Valve.VR.IVRCompositor Valve.VR.CVRCompositor::FnTable
	IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554  ___FnTable_0;

public:
	inline static int32_t get_offset_of_FnTable_0() { return static_cast<int32_t>(offsetof(CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A, ___FnTable_0)); }
	inline IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554  get_FnTable_0() const { return ___FnTable_0; }
	inline IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554 * get_address_of_FnTable_0() { return &___FnTable_0; }
	inline void set_FnTable_0(IVRCompositor_tFE42E74D04012ECD93FDB8D1BB38B13547649554  value)
	{
		___FnTable_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetTrackingSpace_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetTrackingSpace_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___WaitGetPoses_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetLastPoses_3), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetLastPoseForTrackedDeviceIndex_4), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___Submit_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ClearLastSubmittedFrame_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___PostPresentHandoff_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetFrameTiming_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetFrameTimings_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetFrameTimeRemaining_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCumulativeStats_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___FadeToColor_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCurrentFadeColor_13), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___FadeGrid_14), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCurrentGridAlpha_15), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetSkyboxOverride_16), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ClearSkyboxOverride_17), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CompositorBringToFront_18), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CompositorGoToBack_19), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CompositorQuit_20), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsFullscreen_21), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCurrentSceneFocusProcess_22), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetLastFrameRenderer_23), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CanRenderScene_24), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowMirrorWindow_25), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___HideMirrorWindow_26), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsMirrorWindowVisible_27), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___CompositorDumpImages_28), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShouldAppRenderWithLowResources_29), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ForceInterleavedReprojectionOn_30), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ForceReconnectProcess_31), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SuspendRendering_32), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetMirrorTextureD3D11_33), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ReleaseMirrorTextureD3D11_34), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetMirrorTextureGL_35), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ReleaseSharedGLTexture_36), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___LockGLSharedTextureForAccess_37), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___UnlockGLSharedTextureForAccess_38), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetVulkanInstanceExtensionsRequired_39), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetVulkanDeviceExtensionsRequired_40), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetExplicitTimingMode_41), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SubmitExplicitTimingData_42), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsMotionSmoothingEnabled_43), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsMotionSmoothingSupported_44), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsCurrentSceneFocusAppLoading_45), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetStageOverride_Async_46), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ClearStageOverride_47), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetCompositorBenchmarkResults_48), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetLastPosePredictionIDs_49), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPosesForFrame_50), (void*)NULL);
		#endif
	}
};


// Valve.VR.CVRInput
struct  CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B  : public RuntimeObject
{
public:
	// Valve.VR.IVRInput Valve.VR.CVRInput::FnTable
	IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  ___FnTable_0;

public:
	inline static int32_t get_offset_of_FnTable_0() { return static_cast<int32_t>(offsetof(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B, ___FnTable_0)); }
	inline IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  get_FnTable_0() const { return ___FnTable_0; }
	inline IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78 * get_address_of_FnTable_0() { return &___FnTable_0; }
	inline void set_FnTable_0(IVRInput_t5FB3A8D55A037DD0328F7BCEA3856E841BC4BC78  value)
	{
		___FnTable_0 = value;
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetActionManifestPath_0), (void*)NULL);
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionSetHandle_1), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionHandle_2), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetInputSourceHandle_3), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___UpdateActionState_4), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetDigitalActionData_5), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetAnalogActionData_6), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataRelativeToNow_7), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetPoseActionDataForNextFrame_8), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalActionData_9), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetDominantHand_10), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___SetDominantHand_11), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneCount_12), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneHierarchy_13), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBoneName_14), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalReferenceTransforms_15), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalTrackingLevel_16), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneData_17), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalSummaryData_18), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetSkeletalBoneDataCompressed_19), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___DecompressSkeletalBoneData_20), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___TriggerHapticVibrationAction_21), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionOrigins_22), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginLocalizedName_23), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetOriginTrackedDeviceInfo_24), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetActionBindingInfo_25), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowActionOrigins_26), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___ShowBindingsForActionSet_27), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetComponentStateForBinding_28), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___IsUsingLegacyInput_29), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___OpenBindingUI_30), (void*)NULL);
		#endif
		#if IL2CPP_ENABLE_STRICT_WRITE_BARRIERS
		Il2CppCodeGenWriteBarrier((void**)&(((&___FnTable_0))->___GetBindingVariant_31), (void*)NULL);
		#endif
	}
};


// Valve.VR.ETextureType
struct  ETextureType_t4851CBECD96258ADBF296BDC72BB194C76BA8400 
{
public:
	// System.Int32 Valve.VR.ETextureType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETextureType_t4851CBECD96258ADBF296BDC72BB194C76BA8400, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingResult
struct  ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E 
{
public:
	// System.Int32 Valve.VR.ETrackingResult::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.ETrackingUniverseOrigin
struct  ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B 
{
public:
	// System.Int32 Valve.VR.ETrackingUniverseOrigin::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingUniverseOrigin_t3002504453445C01FD1564845C065DDDEE23937B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputError
struct  EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F 
{
public:
	// System.Int32 Valve.VR.EVRInputError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.EVRInputStringBits
struct  EVRInputStringBits_t6D50955CC5A3AB1CC794A0582C59C3AC98F60E60 
{
public:
	// System.Int32 Valve.VR.EVRInputStringBits::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRInputStringBits_t6D50955CC5A3AB1CC794A0582C59C3AC98F60E60, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_InitializedStates
struct  InitializedStates_t2D84949EC0DFFB6C94ACBDA93736E7DEB8D4B9F9 
{
public:
	// System.Int32 Valve.VR.SteamVR_InitializedStates::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(InitializedStates_t2D84949EC0DFFB6C94ACBDA93736E7DEB8D4B9F9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_ActionDirections
struct  SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1 
{
public:
	// System.Int32 Valve.VR.SteamVR_ActionDirections::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_ActionDirections_tC7760C9A471565840E2F1D11A61E44735571D8B1, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9  : public SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199  : public SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02  : public SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170
{
public:

public:
};


// Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6  : public SteamVR_Action_2_t2D32D7E2FBDFB6126D5E6B0594C0F688ED213F5D
{
public:

public:
};


// Valve.VR.SteamVR_Input_Sources
struct  SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7 
{
public:
	// System.Int32 Valve.VR.SteamVR_Input_Sources::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};


// System.MulticastDelegate
struct  MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___delegates_11), (void*)value);
	}
};

// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};

// System.Type
struct  Type_t  : public MemberInfo_t
{
public:
	// System.RuntimeTypeHandle System.Type::_impl
	RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ____impl_9;

public:
	inline static int32_t get_offset_of__impl_9() { return static_cast<int32_t>(offsetof(Type_t, ____impl_9)); }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  get__impl_9() const { return ____impl_9; }
	inline RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D * get_address_of__impl_9() { return &____impl_9; }
	inline void set__impl_9(RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  value)
	{
		____impl_9 = value;
	}
};

struct Type_t_StaticFields
{
public:
	// System.Reflection.MemberFilter System.Type::FilterAttribute
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterAttribute_0;
	// System.Reflection.MemberFilter System.Type::FilterName
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterName_1;
	// System.Reflection.MemberFilter System.Type::FilterNameIgnoreCase
	MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * ___FilterNameIgnoreCase_2;
	// System.Object System.Type::Missing
	RuntimeObject * ___Missing_3;
	// System.Char System.Type::Delimiter
	Il2CppChar ___Delimiter_4;
	// System.Type[] System.Type::EmptyTypes
	TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* ___EmptyTypes_5;
	// System.Reflection.Binder System.Type::defaultBinder
	Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * ___defaultBinder_6;

public:
	inline static int32_t get_offset_of_FilterAttribute_0() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterAttribute_0)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterAttribute_0() const { return ___FilterAttribute_0; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterAttribute_0() { return &___FilterAttribute_0; }
	inline void set_FilterAttribute_0(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterAttribute_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterAttribute_0), (void*)value);
	}

	inline static int32_t get_offset_of_FilterName_1() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterName_1)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterName_1() const { return ___FilterName_1; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterName_1() { return &___FilterName_1; }
	inline void set_FilterName_1(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterName_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterName_1), (void*)value);
	}

	inline static int32_t get_offset_of_FilterNameIgnoreCase_2() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___FilterNameIgnoreCase_2)); }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * get_FilterNameIgnoreCase_2() const { return ___FilterNameIgnoreCase_2; }
	inline MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 ** get_address_of_FilterNameIgnoreCase_2() { return &___FilterNameIgnoreCase_2; }
	inline void set_FilterNameIgnoreCase_2(MemberFilter_t25C1BD92C42BE94426E300787C13C452CB89B381 * value)
	{
		___FilterNameIgnoreCase_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___FilterNameIgnoreCase_2), (void*)value);
	}

	inline static int32_t get_offset_of_Missing_3() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Missing_3)); }
	inline RuntimeObject * get_Missing_3() const { return ___Missing_3; }
	inline RuntimeObject ** get_address_of_Missing_3() { return &___Missing_3; }
	inline void set_Missing_3(RuntimeObject * value)
	{
		___Missing_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___Missing_3), (void*)value);
	}

	inline static int32_t get_offset_of_Delimiter_4() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___Delimiter_4)); }
	inline Il2CppChar get_Delimiter_4() const { return ___Delimiter_4; }
	inline Il2CppChar* get_address_of_Delimiter_4() { return &___Delimiter_4; }
	inline void set_Delimiter_4(Il2CppChar value)
	{
		___Delimiter_4 = value;
	}

	inline static int32_t get_offset_of_EmptyTypes_5() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___EmptyTypes_5)); }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* get_EmptyTypes_5() const { return ___EmptyTypes_5; }
	inline TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F** get_address_of_EmptyTypes_5() { return &___EmptyTypes_5; }
	inline void set_EmptyTypes_5(TypeU5BU5D_t7FE623A666B49176DE123306221193E888A12F5F* value)
	{
		___EmptyTypes_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___EmptyTypes_5), (void*)value);
	}

	inline static int32_t get_offset_of_defaultBinder_6() { return static_cast<int32_t>(offsetof(Type_t_StaticFields, ___defaultBinder_6)); }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * get_defaultBinder_6() const { return ___defaultBinder_6; }
	inline Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 ** get_address_of_defaultBinder_6() { return &___defaultBinder_6; }
	inline void set_defaultBinder_6(Binder_t4D5CB06963501D32847C057B57157D6DC49CA759 * value)
	{
		___defaultBinder_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___defaultBinder_6), (void*)value);
	}
};


// UnityEngine.Component
struct  Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621  : public Object_tAE11E5E46CD5C37C9F3E8950C00CD8B45666A2D0
{
public:

public:
};


// Valve.VR.SteamVR
struct  SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F  : public RuntimeObject
{
public:
	// Valve.VR.CVRSystem Valve.VR.SteamVR::<hmd>k__BackingField
	CVRSystem_t5B252CC3E969ED765C4C346EC5CF6A79657D5380 * ___U3ChmdU3Ek__BackingField_4;
	// Valve.VR.CVRCompositor Valve.VR.SteamVR::<compositor>k__BackingField
	CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A * ___U3CcompositorU3Ek__BackingField_5;
	// Valve.VR.CVROverlay Valve.VR.SteamVR::<overlay>k__BackingField
	CVROverlay_t98FB767D8969B5694A45224BD8D432ACBEE020A8 * ___U3CoverlayU3Ek__BackingField_6;
	// System.Single Valve.VR.SteamVR::<sceneWidth>k__BackingField
	float ___U3CsceneWidthU3Ek__BackingField_11;
	// System.Single Valve.VR.SteamVR::<sceneHeight>k__BackingField
	float ___U3CsceneHeightU3Ek__BackingField_12;
	// System.Single Valve.VR.SteamVR::<aspect>k__BackingField
	float ___U3CaspectU3Ek__BackingField_13;
	// System.Single Valve.VR.SteamVR::<fieldOfView>k__BackingField
	float ___U3CfieldOfViewU3Ek__BackingField_14;
	// UnityEngine.Vector2 Valve.VR.SteamVR::<tanHalfFov>k__BackingField
	Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  ___U3CtanHalfFovU3Ek__BackingField_15;
	// Valve.VR.VRTextureBounds_t[] Valve.VR.SteamVR::<textureBounds>k__BackingField
	VRTextureBounds_tU5BU5D_tAE079634A0FDBA61CBA97C5AE3C69BD032940E02* ___U3CtextureBoundsU3Ek__BackingField_16;
	// SteamVR_Utils_RigidTransform[] Valve.VR.SteamVR::<eyes>k__BackingField
	RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* ___U3CeyesU3Ek__BackingField_17;
	// Valve.VR.ETextureType Valve.VR.SteamVR::textureType
	int32_t ___textureType_18;

public:
	inline static int32_t get_offset_of_U3ChmdU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3ChmdU3Ek__BackingField_4)); }
	inline CVRSystem_t5B252CC3E969ED765C4C346EC5CF6A79657D5380 * get_U3ChmdU3Ek__BackingField_4() const { return ___U3ChmdU3Ek__BackingField_4; }
	inline CVRSystem_t5B252CC3E969ED765C4C346EC5CF6A79657D5380 ** get_address_of_U3ChmdU3Ek__BackingField_4() { return &___U3ChmdU3Ek__BackingField_4; }
	inline void set_U3ChmdU3Ek__BackingField_4(CVRSystem_t5B252CC3E969ED765C4C346EC5CF6A79657D5380 * value)
	{
		___U3ChmdU3Ek__BackingField_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3ChmdU3Ek__BackingField_4), (void*)value);
	}

	inline static int32_t get_offset_of_U3CcompositorU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CcompositorU3Ek__BackingField_5)); }
	inline CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A * get_U3CcompositorU3Ek__BackingField_5() const { return ___U3CcompositorU3Ek__BackingField_5; }
	inline CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A ** get_address_of_U3CcompositorU3Ek__BackingField_5() { return &___U3CcompositorU3Ek__BackingField_5; }
	inline void set_U3CcompositorU3Ek__BackingField_5(CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A * value)
	{
		___U3CcompositorU3Ek__BackingField_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CcompositorU3Ek__BackingField_5), (void*)value);
	}

	inline static int32_t get_offset_of_U3CoverlayU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CoverlayU3Ek__BackingField_6)); }
	inline CVROverlay_t98FB767D8969B5694A45224BD8D432ACBEE020A8 * get_U3CoverlayU3Ek__BackingField_6() const { return ___U3CoverlayU3Ek__BackingField_6; }
	inline CVROverlay_t98FB767D8969B5694A45224BD8D432ACBEE020A8 ** get_address_of_U3CoverlayU3Ek__BackingField_6() { return &___U3CoverlayU3Ek__BackingField_6; }
	inline void set_U3CoverlayU3Ek__BackingField_6(CVROverlay_t98FB767D8969B5694A45224BD8D432ACBEE020A8 * value)
	{
		___U3CoverlayU3Ek__BackingField_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CoverlayU3Ek__BackingField_6), (void*)value);
	}

	inline static int32_t get_offset_of_U3CsceneWidthU3Ek__BackingField_11() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CsceneWidthU3Ek__BackingField_11)); }
	inline float get_U3CsceneWidthU3Ek__BackingField_11() const { return ___U3CsceneWidthU3Ek__BackingField_11; }
	inline float* get_address_of_U3CsceneWidthU3Ek__BackingField_11() { return &___U3CsceneWidthU3Ek__BackingField_11; }
	inline void set_U3CsceneWidthU3Ek__BackingField_11(float value)
	{
		___U3CsceneWidthU3Ek__BackingField_11 = value;
	}

	inline static int32_t get_offset_of_U3CsceneHeightU3Ek__BackingField_12() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CsceneHeightU3Ek__BackingField_12)); }
	inline float get_U3CsceneHeightU3Ek__BackingField_12() const { return ___U3CsceneHeightU3Ek__BackingField_12; }
	inline float* get_address_of_U3CsceneHeightU3Ek__BackingField_12() { return &___U3CsceneHeightU3Ek__BackingField_12; }
	inline void set_U3CsceneHeightU3Ek__BackingField_12(float value)
	{
		___U3CsceneHeightU3Ek__BackingField_12 = value;
	}

	inline static int32_t get_offset_of_U3CaspectU3Ek__BackingField_13() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CaspectU3Ek__BackingField_13)); }
	inline float get_U3CaspectU3Ek__BackingField_13() const { return ___U3CaspectU3Ek__BackingField_13; }
	inline float* get_address_of_U3CaspectU3Ek__BackingField_13() { return &___U3CaspectU3Ek__BackingField_13; }
	inline void set_U3CaspectU3Ek__BackingField_13(float value)
	{
		___U3CaspectU3Ek__BackingField_13 = value;
	}

	inline static int32_t get_offset_of_U3CfieldOfViewU3Ek__BackingField_14() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CfieldOfViewU3Ek__BackingField_14)); }
	inline float get_U3CfieldOfViewU3Ek__BackingField_14() const { return ___U3CfieldOfViewU3Ek__BackingField_14; }
	inline float* get_address_of_U3CfieldOfViewU3Ek__BackingField_14() { return &___U3CfieldOfViewU3Ek__BackingField_14; }
	inline void set_U3CfieldOfViewU3Ek__BackingField_14(float value)
	{
		___U3CfieldOfViewU3Ek__BackingField_14 = value;
	}

	inline static int32_t get_offset_of_U3CtanHalfFovU3Ek__BackingField_15() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CtanHalfFovU3Ek__BackingField_15)); }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  get_U3CtanHalfFovU3Ek__BackingField_15() const { return ___U3CtanHalfFovU3Ek__BackingField_15; }
	inline Vector2_tA85D2DD88578276CA8A8796756458277E72D073D * get_address_of_U3CtanHalfFovU3Ek__BackingField_15() { return &___U3CtanHalfFovU3Ek__BackingField_15; }
	inline void set_U3CtanHalfFovU3Ek__BackingField_15(Vector2_tA85D2DD88578276CA8A8796756458277E72D073D  value)
	{
		___U3CtanHalfFovU3Ek__BackingField_15 = value;
	}

	inline static int32_t get_offset_of_U3CtextureBoundsU3Ek__BackingField_16() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CtextureBoundsU3Ek__BackingField_16)); }
	inline VRTextureBounds_tU5BU5D_tAE079634A0FDBA61CBA97C5AE3C69BD032940E02* get_U3CtextureBoundsU3Ek__BackingField_16() const { return ___U3CtextureBoundsU3Ek__BackingField_16; }
	inline VRTextureBounds_tU5BU5D_tAE079634A0FDBA61CBA97C5AE3C69BD032940E02** get_address_of_U3CtextureBoundsU3Ek__BackingField_16() { return &___U3CtextureBoundsU3Ek__BackingField_16; }
	inline void set_U3CtextureBoundsU3Ek__BackingField_16(VRTextureBounds_tU5BU5D_tAE079634A0FDBA61CBA97C5AE3C69BD032940E02* value)
	{
		___U3CtextureBoundsU3Ek__BackingField_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CtextureBoundsU3Ek__BackingField_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CeyesU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___U3CeyesU3Ek__BackingField_17)); }
	inline RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* get_U3CeyesU3Ek__BackingField_17() const { return ___U3CeyesU3Ek__BackingField_17; }
	inline RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC** get_address_of_U3CeyesU3Ek__BackingField_17() { return &___U3CeyesU3Ek__BackingField_17; }
	inline void set_U3CeyesU3Ek__BackingField_17(RigidTransformU5BU5D_tC98EB3576009E5D825D0D43671A65D32A2449ECC* value)
	{
		___U3CeyesU3Ek__BackingField_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CeyesU3Ek__BackingField_17), (void*)value);
	}

	inline static int32_t get_offset_of_textureType_18() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F, ___textureType_18)); }
	inline int32_t get_textureType_18() const { return ___textureType_18; }
	inline int32_t* get_address_of_textureType_18() { return &___textureType_18; }
	inline void set_textureType_18(int32_t value)
	{
		___textureType_18 = value;
	}
};

struct SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields
{
public:
	// System.Boolean Valve.VR.SteamVR::_enabled
	bool ____enabled_0;
	// Valve.VR.SteamVR Valve.VR.SteamVR::_instance
	SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * ____instance_1;
	// Valve.VR.SteamVR_InitializedStates Valve.VR.SteamVR::initializedState
	int32_t ___initializedState_2;
	// Valve.VR.SteamVR_Settings Valve.VR.SteamVR::<settings>k__BackingField
	SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C * ___U3CsettingsU3Ek__BackingField_3;
	// System.Boolean Valve.VR.SteamVR::<initializing>k__BackingField
	bool ___U3CinitializingU3Ek__BackingField_7;
	// System.Boolean Valve.VR.SteamVR::<calibrating>k__BackingField
	bool ___U3CcalibratingU3Ek__BackingField_8;
	// System.Boolean Valve.VR.SteamVR::<outOfRange>k__BackingField
	bool ___U3CoutOfRangeU3Ek__BackingField_9;
	// System.Boolean[] Valve.VR.SteamVR::connected
	BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* ___connected_10;
	// System.Boolean Valve.VR.SteamVR::runningTemporarySession
	bool ___runningTemporarySession_19;

public:
	inline static int32_t get_offset_of__enabled_0() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ____enabled_0)); }
	inline bool get__enabled_0() const { return ____enabled_0; }
	inline bool* get_address_of__enabled_0() { return &____enabled_0; }
	inline void set__enabled_0(bool value)
	{
		____enabled_0 = value;
	}

	inline static int32_t get_offset_of__instance_1() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ____instance_1)); }
	inline SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * get__instance_1() const { return ____instance_1; }
	inline SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F ** get_address_of__instance_1() { return &____instance_1; }
	inline void set__instance_1(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * value)
	{
		____instance_1 = value;
		Il2CppCodeGenWriteBarrier((void**)(&____instance_1), (void*)value);
	}

	inline static int32_t get_offset_of_initializedState_2() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___initializedState_2)); }
	inline int32_t get_initializedState_2() const { return ___initializedState_2; }
	inline int32_t* get_address_of_initializedState_2() { return &___initializedState_2; }
	inline void set_initializedState_2(int32_t value)
	{
		___initializedState_2 = value;
	}

	inline static int32_t get_offset_of_U3CsettingsU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___U3CsettingsU3Ek__BackingField_3)); }
	inline SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C * get_U3CsettingsU3Ek__BackingField_3() const { return ___U3CsettingsU3Ek__BackingField_3; }
	inline SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C ** get_address_of_U3CsettingsU3Ek__BackingField_3() { return &___U3CsettingsU3Ek__BackingField_3; }
	inline void set_U3CsettingsU3Ek__BackingField_3(SteamVR_Settings_t64E5B6E42EEDC6ACB51C476970EF3AA6270E555C * value)
	{
		___U3CsettingsU3Ek__BackingField_3 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CsettingsU3Ek__BackingField_3), (void*)value);
	}

	inline static int32_t get_offset_of_U3CinitializingU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___U3CinitializingU3Ek__BackingField_7)); }
	inline bool get_U3CinitializingU3Ek__BackingField_7() const { return ___U3CinitializingU3Ek__BackingField_7; }
	inline bool* get_address_of_U3CinitializingU3Ek__BackingField_7() { return &___U3CinitializingU3Ek__BackingField_7; }
	inline void set_U3CinitializingU3Ek__BackingField_7(bool value)
	{
		___U3CinitializingU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_U3CcalibratingU3Ek__BackingField_8() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___U3CcalibratingU3Ek__BackingField_8)); }
	inline bool get_U3CcalibratingU3Ek__BackingField_8() const { return ___U3CcalibratingU3Ek__BackingField_8; }
	inline bool* get_address_of_U3CcalibratingU3Ek__BackingField_8() { return &___U3CcalibratingU3Ek__BackingField_8; }
	inline void set_U3CcalibratingU3Ek__BackingField_8(bool value)
	{
		___U3CcalibratingU3Ek__BackingField_8 = value;
	}

	inline static int32_t get_offset_of_U3CoutOfRangeU3Ek__BackingField_9() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___U3CoutOfRangeU3Ek__BackingField_9)); }
	inline bool get_U3CoutOfRangeU3Ek__BackingField_9() const { return ___U3CoutOfRangeU3Ek__BackingField_9; }
	inline bool* get_address_of_U3CoutOfRangeU3Ek__BackingField_9() { return &___U3CoutOfRangeU3Ek__BackingField_9; }
	inline void set_U3CoutOfRangeU3Ek__BackingField_9(bool value)
	{
		___U3CoutOfRangeU3Ek__BackingField_9 = value;
	}

	inline static int32_t get_offset_of_connected_10() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___connected_10)); }
	inline BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* get_connected_10() const { return ___connected_10; }
	inline BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040** get_address_of_connected_10() { return &___connected_10; }
	inline void set_connected_10(BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* value)
	{
		___connected_10 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___connected_10), (void*)value);
	}

	inline static int32_t get_offset_of_runningTemporarySession_19() { return static_cast<int32_t>(offsetof(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_StaticFields, ___runningTemporarySession_19)); }
	inline bool get_runningTemporarySession_19() const { return ___runningTemporarySession_19; }
	inline bool* get_address_of_runningTemporarySession_19() { return &___runningTemporarySession_19; }
	inline void set_runningTemporarySession_19(bool value)
	{
		___runningTemporarySession_19 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean
struct  SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20  : public SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A  : public SteamVR_Action_In_2_t2C5C166B83FDF97166A2B5B007C2A5742BBE2199
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Skeleton_Source_Map,Valve.VR.SteamVR_Action_Skeleton_Source>
struct  SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2  : public SteamVR_Action_In_2_t648DCC49A164ED0184532F0961391833D01917D6
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single
struct  SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81  : public SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02
{
public:

public:
};


// Valve.VR.SteamVR_Action_Source
struct  SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0  : public RuntimeObject
{
public:
	// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::<inputSource>k__BackingField
	int32_t ___U3CinputSourceU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source::inputSourceHandle
	uint64_t ___inputSourceHandle_1;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_2;

public:
	inline static int32_t get_offset_of_U3CinputSourceU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___U3CinputSourceU3Ek__BackingField_0)); }
	inline int32_t get_U3CinputSourceU3Ek__BackingField_0() const { return ___U3CinputSourceU3Ek__BackingField_0; }
	inline int32_t* get_address_of_U3CinputSourceU3Ek__BackingField_0() { return &___U3CinputSourceU3Ek__BackingField_0; }
	inline void set_U3CinputSourceU3Ek__BackingField_0(int32_t value)
	{
		___U3CinputSourceU3Ek__BackingField_0 = value;
	}

	inline static int32_t get_offset_of_inputSourceHandle_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___inputSourceHandle_1)); }
	inline uint64_t get_inputSourceHandle_1() const { return ___inputSourceHandle_1; }
	inline uint64_t* get_address_of_inputSourceHandle_1() { return &___inputSourceHandle_1; }
	inline void set_inputSourceHandle_1(uint64_t value)
	{
		___inputSourceHandle_1 = value;
	}

	inline static int32_t get_offset_of_action_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0, ___action_2)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_2() const { return ___action_2; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_2() { return &___action_2; }
	inline void set_action_2(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_2), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map
struct  SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17  : public RuntimeObject
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::<fullPath>k__BackingField
	String_t* ___U3CfullPathU3Ek__BackingField_0;
	// System.UInt64 Valve.VR.SteamVR_Action_Source_Map::<handle>k__BackingField
	uint64_t ___U3ChandleU3Ek__BackingField_1;
	// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action_Source_Map::<actionSet>k__BackingField
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___U3CactionSetU3Ek__BackingField_2;
	// Valve.VR.SteamVR_ActionDirections Valve.VR.SteamVR_Action_Source_Map::<direction>k__BackingField
	int32_t ___U3CdirectionU3Ek__BackingField_3;
	// Valve.VR.SteamVR_Action Valve.VR.SteamVR_Action_Source_Map::action
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___action_4;

public:
	inline static int32_t get_offset_of_U3CfullPathU3Ek__BackingField_0() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CfullPathU3Ek__BackingField_0)); }
	inline String_t* get_U3CfullPathU3Ek__BackingField_0() const { return ___U3CfullPathU3Ek__BackingField_0; }
	inline String_t** get_address_of_U3CfullPathU3Ek__BackingField_0() { return &___U3CfullPathU3Ek__BackingField_0; }
	inline void set_U3CfullPathU3Ek__BackingField_0(String_t* value)
	{
		___U3CfullPathU3Ek__BackingField_0 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CfullPathU3Ek__BackingField_0), (void*)value);
	}

	inline static int32_t get_offset_of_U3ChandleU3Ek__BackingField_1() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3ChandleU3Ek__BackingField_1)); }
	inline uint64_t get_U3ChandleU3Ek__BackingField_1() const { return ___U3ChandleU3Ek__BackingField_1; }
	inline uint64_t* get_address_of_U3ChandleU3Ek__BackingField_1() { return &___U3ChandleU3Ek__BackingField_1; }
	inline void set_U3ChandleU3Ek__BackingField_1(uint64_t value)
	{
		___U3ChandleU3Ek__BackingField_1 = value;
	}

	inline static int32_t get_offset_of_U3CactionSetU3Ek__BackingField_2() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CactionSetU3Ek__BackingField_2)); }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * get_U3CactionSetU3Ek__BackingField_2() const { return ___U3CactionSetU3Ek__BackingField_2; }
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** get_address_of_U3CactionSetU3Ek__BackingField_2() { return &___U3CactionSetU3Ek__BackingField_2; }
	inline void set_U3CactionSetU3Ek__BackingField_2(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		___U3CactionSetU3Ek__BackingField_2 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___U3CactionSetU3Ek__BackingField_2), (void*)value);
	}

	inline static int32_t get_offset_of_U3CdirectionU3Ek__BackingField_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___U3CdirectionU3Ek__BackingField_3)); }
	inline int32_t get_U3CdirectionU3Ek__BackingField_3() const { return ___U3CdirectionU3Ek__BackingField_3; }
	inline int32_t* get_address_of_U3CdirectionU3Ek__BackingField_3() { return &___U3CdirectionU3Ek__BackingField_3; }
	inline void set_U3CdirectionU3Ek__BackingField_3(int32_t value)
	{
		___U3CdirectionU3Ek__BackingField_3 = value;
	}

	inline static int32_t get_offset_of_action_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17, ___action_4)); }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * get_action_4() const { return ___action_4; }
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** get_address_of_action_4() { return &___action_4; }
	inline void set_action_4(SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		___action_4 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___action_4), (void*)value);
	}
};

struct SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields
{
public:
	// System.String Valve.VR.SteamVR_Action_Source_Map::inLowered
	String_t* ___inLowered_5;
	// System.String Valve.VR.SteamVR_Action_Source_Map::outLowered
	String_t* ___outLowered_6;

public:
	inline static int32_t get_offset_of_inLowered_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___inLowered_5)); }
	inline String_t* get_inLowered_5() const { return ___inLowered_5; }
	inline String_t** get_address_of_inLowered_5() { return &___inLowered_5; }
	inline void set_inLowered_5(String_t* value)
	{
		___inLowered_5 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___inLowered_5), (void*)value);
	}

	inline static int32_t get_offset_of_outLowered_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17_StaticFields, ___outLowered_6)); }
	inline String_t* get_outLowered_6() const { return ___outLowered_6; }
	inline String_t** get_address_of_outLowered_6() { return &___outLowered_6; }
	inline void set_outLowered_6(String_t* value)
	{
		___outLowered_6 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___outLowered_6), (void*)value);
	}
};


// Valve.VR.TrackedDevicePose_t
struct  TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.TrackedDevicePose_t::mDeviceToAbsoluteTracking
	HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  ___mDeviceToAbsoluteTracking_0;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vVelocity
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vVelocity_1;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vAngularVelocity
	HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vAngularVelocity_2;
	// Valve.VR.ETrackingResult Valve.VR.TrackedDevicePose_t::eTrackingResult
	int32_t ___eTrackingResult_3;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bPoseIsValid
	bool ___bPoseIsValid_4;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bDeviceIsConnected
	bool ___bDeviceIsConnected_5;

public:
	inline static int32_t get_offset_of_mDeviceToAbsoluteTracking_0() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___mDeviceToAbsoluteTracking_0)); }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  get_mDeviceToAbsoluteTracking_0() const { return ___mDeviceToAbsoluteTracking_0; }
	inline HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * get_address_of_mDeviceToAbsoluteTracking_0() { return &___mDeviceToAbsoluteTracking_0; }
	inline void set_mDeviceToAbsoluteTracking_0(HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669  value)
	{
		___mDeviceToAbsoluteTracking_0 = value;
	}

	inline static int32_t get_offset_of_vVelocity_1() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___vVelocity_1)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vVelocity_1() const { return ___vVelocity_1; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vVelocity_1() { return &___vVelocity_1; }
	inline void set_vVelocity_1(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vVelocity_1 = value;
	}

	inline static int32_t get_offset_of_vAngularVelocity_2() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___vAngularVelocity_2)); }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  get_vAngularVelocity_2() const { return ___vAngularVelocity_2; }
	inline HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A * get_address_of_vAngularVelocity_2() { return &___vAngularVelocity_2; }
	inline void set_vAngularVelocity_2(HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  value)
	{
		___vAngularVelocity_2 = value;
	}

	inline static int32_t get_offset_of_eTrackingResult_3() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___eTrackingResult_3)); }
	inline int32_t get_eTrackingResult_3() const { return ___eTrackingResult_3; }
	inline int32_t* get_address_of_eTrackingResult_3() { return &___eTrackingResult_3; }
	inline void set_eTrackingResult_3(int32_t value)
	{
		___eTrackingResult_3 = value;
	}

	inline static int32_t get_offset_of_bPoseIsValid_4() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___bPoseIsValid_4)); }
	inline bool get_bPoseIsValid_4() const { return ___bPoseIsValid_4; }
	inline bool* get_address_of_bPoseIsValid_4() { return &___bPoseIsValid_4; }
	inline void set_bPoseIsValid_4(bool value)
	{
		___bPoseIsValid_4 = value;
	}

	inline static int32_t get_offset_of_bDeviceIsConnected_5() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365, ___bDeviceIsConnected_5)); }
	inline bool get_bDeviceIsConnected_5() const { return ___bDeviceIsConnected_5; }
	inline bool* get_address_of_bDeviceIsConnected_5() { return &___bDeviceIsConnected_5; }
	inline void set_bDeviceIsConnected_5(bool value)
	{
		___bDeviceIsConnected_5 = value;
	}
};


// System.AsyncCallback
struct  AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};


// UnityEngine.Transform
struct  Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA  : public Component_t05064EF382ABCAF4B8C94F8A350EA85184C26621
{
public:

public:
};


// Valve.VR.InputPoseActionData_t
struct  InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 
{
public:
	// System.Boolean Valve.VR.InputPoseActionData_t::bActive
	bool ___bActive_0;
	// System.UInt64 Valve.VR.InputPoseActionData_t::activeOrigin
	uint64_t ___activeOrigin_1;
	// Valve.VR.TrackedDevicePose_t Valve.VR.InputPoseActionData_t::pose
	TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  ___pose_2;

public:
	inline static int32_t get_offset_of_bActive_0() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___bActive_0)); }
	inline bool get_bActive_0() const { return ___bActive_0; }
	inline bool* get_address_of_bActive_0() { return &___bActive_0; }
	inline void set_bActive_0(bool value)
	{
		___bActive_0 = value;
	}

	inline static int32_t get_offset_of_activeOrigin_1() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___activeOrigin_1)); }
	inline uint64_t get_activeOrigin_1() const { return ___activeOrigin_1; }
	inline uint64_t* get_address_of_activeOrigin_1() { return &___activeOrigin_1; }
	inline void set_activeOrigin_1(uint64_t value)
	{
		___activeOrigin_1 = value;
	}

	inline static int32_t get_offset_of_pose_2() { return static_cast<int32_t>(offsetof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607, ___pose_2)); }
	inline TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  get_pose_2() const { return ___pose_2; }
	inline TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * get_address_of_pose_2() { return &___pose_2; }
	inline void set_pose_2(TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365  value)
	{
		___pose_2 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler
struct  ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_ChangeHandler
struct  ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateDownHandler
struct  StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateHandler
struct  StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_StateUpHandler
struct  StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Boolean_UpdateHandler
struct  UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_In_Source
struct  SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:
	// System.Boolean Valve.VR.SteamVR_Action_In_Source::<isUpdating>k__BackingField
	bool ___U3CisUpdatingU3Ek__BackingField_4;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<updateTime>k__BackingField
	float ___U3CupdateTimeU3Ek__BackingField_5;
	// System.Single Valve.VR.SteamVR_Action_In_Source::<changedTime>k__BackingField
	float ___U3CchangedTimeU3Ek__BackingField_6;
	// System.Int32 Valve.VR.SteamVR_Action_In_Source::<lastOriginGetFrame>k__BackingField
	int32_t ___U3ClastOriginGetFrameU3Ek__BackingField_7;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::inputOriginInfo
	InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  ___inputOriginInfo_8;
	// Valve.VR.InputOriginInfo_t Valve.VR.SteamVR_Action_In_Source::lastInputOriginInfo
	InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  ___lastInputOriginInfo_9;

public:
	inline static int32_t get_offset_of_U3CisUpdatingU3Ek__BackingField_4() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CisUpdatingU3Ek__BackingField_4)); }
	inline bool get_U3CisUpdatingU3Ek__BackingField_4() const { return ___U3CisUpdatingU3Ek__BackingField_4; }
	inline bool* get_address_of_U3CisUpdatingU3Ek__BackingField_4() { return &___U3CisUpdatingU3Ek__BackingField_4; }
	inline void set_U3CisUpdatingU3Ek__BackingField_4(bool value)
	{
		___U3CisUpdatingU3Ek__BackingField_4 = value;
	}

	inline static int32_t get_offset_of_U3CupdateTimeU3Ek__BackingField_5() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CupdateTimeU3Ek__BackingField_5)); }
	inline float get_U3CupdateTimeU3Ek__BackingField_5() const { return ___U3CupdateTimeU3Ek__BackingField_5; }
	inline float* get_address_of_U3CupdateTimeU3Ek__BackingField_5() { return &___U3CupdateTimeU3Ek__BackingField_5; }
	inline void set_U3CupdateTimeU3Ek__BackingField_5(float value)
	{
		___U3CupdateTimeU3Ek__BackingField_5 = value;
	}

	inline static int32_t get_offset_of_U3CchangedTimeU3Ek__BackingField_6() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3CchangedTimeU3Ek__BackingField_6)); }
	inline float get_U3CchangedTimeU3Ek__BackingField_6() const { return ___U3CchangedTimeU3Ek__BackingField_6; }
	inline float* get_address_of_U3CchangedTimeU3Ek__BackingField_6() { return &___U3CchangedTimeU3Ek__BackingField_6; }
	inline void set_U3CchangedTimeU3Ek__BackingField_6(float value)
	{
		___U3CchangedTimeU3Ek__BackingField_6 = value;
	}

	inline static int32_t get_offset_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___U3ClastOriginGetFrameU3Ek__BackingField_7)); }
	inline int32_t get_U3ClastOriginGetFrameU3Ek__BackingField_7() const { return ___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline int32_t* get_address_of_U3ClastOriginGetFrameU3Ek__BackingField_7() { return &___U3ClastOriginGetFrameU3Ek__BackingField_7; }
	inline void set_U3ClastOriginGetFrameU3Ek__BackingField_7(int32_t value)
	{
		___U3ClastOriginGetFrameU3Ek__BackingField_7 = value;
	}

	inline static int32_t get_offset_of_inputOriginInfo_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___inputOriginInfo_8)); }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  get_inputOriginInfo_8() const { return ___inputOriginInfo_8; }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * get_address_of_inputOriginInfo_8() { return &___inputOriginInfo_8; }
	inline void set_inputOriginInfo_8(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  value)
	{
		___inputOriginInfo_8 = value;
	}

	inline static int32_t get_offset_of_lastInputOriginInfo_9() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB, ___lastInputOriginInfo_9)); }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  get_lastInputOriginInfo_9() const { return ___lastInputOriginInfo_9; }
	inline InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * get_address_of_lastInputOriginInfo_9() { return &___lastInputOriginInfo_9; }
	inline void set_lastInputOriginInfo_9(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  value)
	{
		___lastInputOriginInfo_9 = value;
	}
};

struct SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_In_Source::inputOriginInfo_size
	uint32_t ___inputOriginInfo_size_3;

public:
	inline static int32_t get_offset_of_inputOriginInfo_size_3() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields, ___inputOriginInfo_size_3)); }
	inline uint32_t get_inputOriginInfo_size_3() const { return ___inputOriginInfo_size_3; }
	inline uint32_t* get_address_of_inputOriginInfo_size_3() { return &___inputOriginInfo_size_3; }
	inline void set_inputOriginInfo_size_3(uint32_t value)
	{
		___inputOriginInfo_size_3 = value;
	}
};


// Valve.VR.SteamVR_Action_Out_Source
struct  SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6  : public SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose
struct  SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C  : public SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler
struct  ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_ChangeHandler
struct  ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler
struct  DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler
struct  TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_UpdateHandler
struct  UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler
struct  ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler
struct  ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_AxisHandler
struct  AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_ChangeHandler
struct  ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_UpdateHandler
struct  UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D  : public MulticastDelegate_t
{
public:

public:
};


// Valve.VR.SteamVR_Action_Skeleton
struct  SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504  : public SteamVR_Action_Pose_Base_2_tCF260D4E08F45DC042B3B5B7B7A2F6B84880C2C2
{
public:

public:
};

struct SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields
{
public:
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Skeleton::steamVRFixUpRotation
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___steamVRFixUpRotation_7;

public:
	inline static int32_t get_offset_of_steamVRFixUpRotation_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_StaticFields, ___steamVRFixUpRotation_7)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_steamVRFixUpRotation_7() const { return ___steamVRFixUpRotation_7; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_steamVRFixUpRotation_7() { return &___steamVRFixUpRotation_7; }
	inline void set_steamVRFixUpRotation_7(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___steamVRFixUpRotation_7 = value;
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B, ___sources_7)); }
	inline SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Boolean_SourceU5BU5D_t3A16242B388E28FE4156180DB154A107EF5A8B1D* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20, ___sources_7)); }
	inline SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Pose_SourceU5BU5D_t22552112660E2C6809DF49AE76F3B6C3DF47DA18* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1  : public SteamVR_Action_Source_Map_t7EF8D4B037DC17D04177E758D64AA2C482031E17
{
public:
	// SourceElement[] Valve.VR.SteamVR_Action_Source_Map`1::sources
	SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* ___sources_7;

public:
	inline static int32_t get_offset_of_sources_7() { return static_cast<int32_t>(offsetof(SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1, ___sources_7)); }
	inline SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* get_sources_7() const { return ___sources_7; }
	inline SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277** get_address_of_sources_7() { return &___sources_7; }
	inline void set_sources_7(SteamVR_Action_Single_SourceU5BU5D_t5C412D6C07F76DC7C2B627B5C442ED002CDEB277* value)
	{
		___sources_7 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___sources_7), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Boolean_Source
struct  SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.SteamVR_Action_Boolean_StateDownHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateDown
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___onStateDown_11;
	// Valve.VR.SteamVR_Action_Boolean_StateUpHandler Valve.VR.SteamVR_Action_Boolean_Source::onStateUp
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___onStateUp_12;
	// Valve.VR.SteamVR_Action_Boolean_StateHandler Valve.VR.SteamVR_Action_Boolean_Source::onState
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___onState_13;
	// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveChange_14;
	// Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onActiveBindingChange
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___onActiveBindingChange_15;
	// Valve.VR.SteamVR_Action_Boolean_ChangeHandler Valve.VR.SteamVR_Action_Boolean_Source::onChange
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___onChange_16;
	// Valve.VR.SteamVR_Action_Boolean_UpdateHandler Valve.VR.SteamVR_Action_Boolean_Source::onUpdate
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___onUpdate_17;
	// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_18;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::actionData
	InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  ___actionData_19;
	// Valve.VR.InputDigitalActionData_t Valve.VR.SteamVR_Action_Boolean_Source::lastActionData
	InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  ___lastActionData_20;
	// Valve.VR.SteamVR_Action_Boolean Valve.VR.SteamVR_Action_Boolean_Source::booleanAction
	SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___booleanAction_21;

public:
	inline static int32_t get_offset_of_onStateDown_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateDown_11)); }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * get_onStateDown_11() const { return ___onStateDown_11; }
	inline StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** get_address_of_onStateDown_11() { return &___onStateDown_11; }
	inline void set_onStateDown_11(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * value)
	{
		___onStateDown_11 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateDown_11), (void*)value);
	}

	inline static int32_t get_offset_of_onStateUp_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onStateUp_12)); }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * get_onStateUp_12() const { return ___onStateUp_12; }
	inline StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** get_address_of_onStateUp_12() { return &___onStateUp_12; }
	inline void set_onStateUp_12(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * value)
	{
		___onStateUp_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onStateUp_12), (void*)value);
	}

	inline static int32_t get_offset_of_onState_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onState_13)); }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * get_onState_13() const { return ___onState_13; }
	inline StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** get_address_of_onState_13() { return &___onState_13; }
	inline void set_onState_13(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * value)
	{
		___onState_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onState_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveChange_14)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveChange_14() const { return ___onActiveChange_14; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveChange_14() { return &___onActiveChange_14; }
	inline void set_onActiveChange_14(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onActiveBindingChange_15)); }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * get_onActiveBindingChange_15() const { return ___onActiveBindingChange_15; }
	inline ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** get_address_of_onActiveBindingChange_15() { return &___onActiveBindingChange_15; }
	inline void set_onActiveBindingChange_15(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * value)
	{
		___onActiveBindingChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onChange_16)); }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * get_onChange_16() const { return ___onChange_16; }
	inline ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** get_address_of_onChange_16() { return &___onChange_16; }
	inline void set_onChange_16(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * value)
	{
		___onChange_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_16), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___onUpdate_17)); }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * get_onUpdate_17() const { return ___onUpdate_17; }
	inline UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** get_address_of_onUpdate_17() { return &___onUpdate_17; }
	inline void set_onUpdate_17(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * value)
	{
		___onUpdate_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_17), (void*)value);
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___U3ClastActiveU3Ek__BackingField_18)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_18() const { return ___U3ClastActiveU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_18() { return &___U3ClastActiveU3Ek__BackingField_18; }
	inline void set_U3ClastActiveU3Ek__BackingField_18(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_actionData_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___actionData_19)); }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  get_actionData_19() const { return ___actionData_19; }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * get_address_of_actionData_19() { return &___actionData_19; }
	inline void set_actionData_19(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  value)
	{
		___actionData_19 = value;
	}

	inline static int32_t get_offset_of_lastActionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___lastActionData_20)); }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  get_lastActionData_20() const { return ___lastActionData_20; }
	inline InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * get_address_of_lastActionData_20() { return &___lastActionData_20; }
	inline void set_lastActionData_20(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  value)
	{
		___lastActionData_20 = value;
	}

	inline static int32_t get_offset_of_booleanAction_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB, ___booleanAction_21)); }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * get_booleanAction_21() const { return ___booleanAction_21; }
	inline SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 ** get_address_of_booleanAction_21() { return &___booleanAction_21; }
	inline void set_booleanAction_21(SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * value)
	{
		___booleanAction_21 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___booleanAction_21), (void*)value);
	}
};

struct SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Boolean_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>
struct  SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE  : public SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_In_Source_Map_1_t8620836FE3BF53CCD96DF04716DB518EAEEC2584  : public SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t8620836FE3BF53CCD96DF04716DB518EAEEC2584, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>
struct  SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741  : public SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1
{
public:
	// System.Collections.Generic.List`1<System.Int32> Valve.VR.SteamVR_Action_In_Source_Map`1::updatingSources
	List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * ___updatingSources_8;

public:
	inline static int32_t get_offset_of_updatingSources_8() { return static_cast<int32_t>(offsetof(SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741, ___updatingSources_8)); }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * get_updatingSources_8() const { return ___updatingSources_8; }
	inline List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 ** get_address_of_updatingSources_8() { return &___updatingSources_8; }
	inline void set_updatingSources_8(List_1_tE1526161A558A17A39A8B69D8EEF3801393B6226 * value)
	{
		___updatingSources_8 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___updatingSources_8), (void*)value);
	}
};


// Valve.VR.SteamVR_Action_Pose_Source
struct  SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// Valve.VR.ETrackingUniverseOrigin Valve.VR.SteamVR_Action_Pose_Source::universeOrigin
	int32_t ___universeOrigin_10;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::changeTolerance
	float ___changeTolerance_12;
	// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onActiveBindingChange
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Pose_ChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onChange
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___onChange_15;
	// Valve.VR.SteamVR_Action_Pose_UpdateHandler Valve.VR.SteamVR_Action_Pose_Source::onUpdate
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___onUpdate_16;
	// Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onTrackingChanged
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___onTrackingChanged_17;
	// Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onValidPoseChanged
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___onValidPoseChanged_18;
	// Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler Valve.VR.SteamVR_Action_Pose_Source::onDeviceConnectedChanged
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___onDeviceConnectedChanged_19;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_20;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_21;
	// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_22;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<localPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClocalPositionU3Ek__BackingField_23;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<localRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClocalRotationU3Ek__BackingField_24;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastLocalPosition>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastLocalPositionU3Ek__BackingField_25;
	// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::<lastLocalRotation>k__BackingField
	Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___U3ClastLocalRotationU3Ek__BackingField_26;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<velocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CvelocityU3Ek__BackingField_27;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastVelocityU3Ek__BackingField_28;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<angularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3CangularVelocityU3Ek__BackingField_29;
	// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::<lastAngularVelocity>k__BackingField
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___U3ClastAngularVelocityU3Ek__BackingField_30;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::poseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___poseActionData_31;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::lastPoseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___lastPoseActionData_32;
	// Valve.VR.InputPoseActionData_t Valve.VR.SteamVR_Action_Pose_Source::tempPoseActionData
	InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  ___tempPoseActionData_33;
	// Valve.VR.SteamVR_Action_Pose Valve.VR.SteamVR_Action_Pose_Source::poseAction
	SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___poseAction_34;

public:
	inline static int32_t get_offset_of_universeOrigin_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___universeOrigin_10)); }
	inline int32_t get_universeOrigin_10() const { return ___universeOrigin_10; }
	inline int32_t* get_address_of_universeOrigin_10() { return &___universeOrigin_10; }
	inline void set_universeOrigin_10(int32_t value)
	{
		___universeOrigin_10 = value;
	}

	inline static int32_t get_offset_of_changeTolerance_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___changeTolerance_12)); }
	inline float get_changeTolerance_12() const { return ___changeTolerance_12; }
	inline float* get_address_of_changeTolerance_12() { return &___changeTolerance_12; }
	inline void set_changeTolerance_12(float value)
	{
		___changeTolerance_12 = value;
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onChange_15)); }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onUpdate_16)); }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_onTrackingChanged_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onTrackingChanged_17)); }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * get_onTrackingChanged_17() const { return ___onTrackingChanged_17; }
	inline TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** get_address_of_onTrackingChanged_17() { return &___onTrackingChanged_17; }
	inline void set_onTrackingChanged_17(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * value)
	{
		___onTrackingChanged_17 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onTrackingChanged_17), (void*)value);
	}

	inline static int32_t get_offset_of_onValidPoseChanged_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onValidPoseChanged_18)); }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * get_onValidPoseChanged_18() const { return ___onValidPoseChanged_18; }
	inline ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** get_address_of_onValidPoseChanged_18() { return &___onValidPoseChanged_18; }
	inline void set_onValidPoseChanged_18(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * value)
	{
		___onValidPoseChanged_18 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onValidPoseChanged_18), (void*)value);
	}

	inline static int32_t get_offset_of_onDeviceConnectedChanged_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___onDeviceConnectedChanged_19)); }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * get_onDeviceConnectedChanged_19() const { return ___onDeviceConnectedChanged_19; }
	inline DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** get_address_of_onDeviceConnectedChanged_19() { return &___onDeviceConnectedChanged_19; }
	inline void set_onDeviceConnectedChanged_19(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * value)
	{
		___onDeviceConnectedChanged_19 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onDeviceConnectedChanged_19), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CchangedU3Ek__BackingField_20)); }
	inline bool get_U3CchangedU3Ek__BackingField_20() const { return ___U3CchangedU3Ek__BackingField_20; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_20() { return &___U3CchangedU3Ek__BackingField_20; }
	inline void set_U3CchangedU3Ek__BackingField_20(bool value)
	{
		___U3CchangedU3Ek__BackingField_20 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastChangedU3Ek__BackingField_21)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_21() const { return ___U3ClastChangedU3Ek__BackingField_21; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_21() { return &___U3ClastChangedU3Ek__BackingField_21; }
	inline void set_U3ClastChangedU3Ek__BackingField_21(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_21 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastActiveU3Ek__BackingField_22)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_22() const { return ___U3ClastActiveU3Ek__BackingField_22; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_22() { return &___U3ClastActiveU3Ek__BackingField_22; }
	inline void set_U3ClastActiveU3Ek__BackingField_22(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_22 = value;
	}

	inline static int32_t get_offset_of_U3ClocalPositionU3Ek__BackingField_23() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalPositionU3Ek__BackingField_23)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClocalPositionU3Ek__BackingField_23() const { return ___U3ClocalPositionU3Ek__BackingField_23; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClocalPositionU3Ek__BackingField_23() { return &___U3ClocalPositionU3Ek__BackingField_23; }
	inline void set_U3ClocalPositionU3Ek__BackingField_23(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClocalPositionU3Ek__BackingField_23 = value;
	}

	inline static int32_t get_offset_of_U3ClocalRotationU3Ek__BackingField_24() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClocalRotationU3Ek__BackingField_24)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClocalRotationU3Ek__BackingField_24() const { return ___U3ClocalRotationU3Ek__BackingField_24; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClocalRotationU3Ek__BackingField_24() { return &___U3ClocalRotationU3Ek__BackingField_24; }
	inline void set_U3ClocalRotationU3Ek__BackingField_24(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClocalRotationU3Ek__BackingField_24 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalPositionU3Ek__BackingField_25() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalPositionU3Ek__BackingField_25)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastLocalPositionU3Ek__BackingField_25() const { return ___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastLocalPositionU3Ek__BackingField_25() { return &___U3ClastLocalPositionU3Ek__BackingField_25; }
	inline void set_U3ClastLocalPositionU3Ek__BackingField_25(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastLocalPositionU3Ek__BackingField_25 = value;
	}

	inline static int32_t get_offset_of_U3ClastLocalRotationU3Ek__BackingField_26() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastLocalRotationU3Ek__BackingField_26)); }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  get_U3ClastLocalRotationU3Ek__BackingField_26() const { return ___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * get_address_of_U3ClastLocalRotationU3Ek__BackingField_26() { return &___U3ClastLocalRotationU3Ek__BackingField_26; }
	inline void set_U3ClastLocalRotationU3Ek__BackingField_26(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  value)
	{
		___U3ClastLocalRotationU3Ek__BackingField_26 = value;
	}

	inline static int32_t get_offset_of_U3CvelocityU3Ek__BackingField_27() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CvelocityU3Ek__BackingField_27)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CvelocityU3Ek__BackingField_27() const { return ___U3CvelocityU3Ek__BackingField_27; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CvelocityU3Ek__BackingField_27() { return &___U3CvelocityU3Ek__BackingField_27; }
	inline void set_U3CvelocityU3Ek__BackingField_27(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CvelocityU3Ek__BackingField_27 = value;
	}

	inline static int32_t get_offset_of_U3ClastVelocityU3Ek__BackingField_28() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastVelocityU3Ek__BackingField_28)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastVelocityU3Ek__BackingField_28() const { return ___U3ClastVelocityU3Ek__BackingField_28; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastVelocityU3Ek__BackingField_28() { return &___U3ClastVelocityU3Ek__BackingField_28; }
	inline void set_U3ClastVelocityU3Ek__BackingField_28(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastVelocityU3Ek__BackingField_28 = value;
	}

	inline static int32_t get_offset_of_U3CangularVelocityU3Ek__BackingField_29() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3CangularVelocityU3Ek__BackingField_29)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3CangularVelocityU3Ek__BackingField_29() const { return ___U3CangularVelocityU3Ek__BackingField_29; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3CangularVelocityU3Ek__BackingField_29() { return &___U3CangularVelocityU3Ek__BackingField_29; }
	inline void set_U3CangularVelocityU3Ek__BackingField_29(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3CangularVelocityU3Ek__BackingField_29 = value;
	}

	inline static int32_t get_offset_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___U3ClastAngularVelocityU3Ek__BackingField_30)); }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  get_U3ClastAngularVelocityU3Ek__BackingField_30() const { return ___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * get_address_of_U3ClastAngularVelocityU3Ek__BackingField_30() { return &___U3ClastAngularVelocityU3Ek__BackingField_30; }
	inline void set_U3ClastAngularVelocityU3Ek__BackingField_30(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  value)
	{
		___U3ClastAngularVelocityU3Ek__BackingField_30 = value;
	}

	inline static int32_t get_offset_of_poseActionData_31() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseActionData_31)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_poseActionData_31() const { return ___poseActionData_31; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_poseActionData_31() { return &___poseActionData_31; }
	inline void set_poseActionData_31(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___poseActionData_31 = value;
	}

	inline static int32_t get_offset_of_lastPoseActionData_32() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___lastPoseActionData_32)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_lastPoseActionData_32() const { return ___lastPoseActionData_32; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_lastPoseActionData_32() { return &___lastPoseActionData_32; }
	inline void set_lastPoseActionData_32(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___lastPoseActionData_32 = value;
	}

	inline static int32_t get_offset_of_tempPoseActionData_33() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___tempPoseActionData_33)); }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  get_tempPoseActionData_33() const { return ___tempPoseActionData_33; }
	inline InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * get_address_of_tempPoseActionData_33() { return &___tempPoseActionData_33; }
	inline void set_tempPoseActionData_33(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  value)
	{
		___tempPoseActionData_33 = value;
	}

	inline static int32_t get_offset_of_poseAction_34() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27, ___poseAction_34)); }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * get_poseAction_34() const { return ___poseAction_34; }
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** get_address_of_poseAction_34() { return &___poseAction_34; }
	inline void set_poseAction_34(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		___poseAction_34 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___poseAction_34), (void*)value);
	}
};

struct SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Pose_Source::poseActionData_size
	uint32_t ___poseActionData_size_11;
	// System.Single Valve.VR.SteamVR_Action_Pose_Source::framesAhead
	float ___framesAhead_35;

public:
	inline static int32_t get_offset_of_poseActionData_size_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___poseActionData_size_11)); }
	inline uint32_t get_poseActionData_size_11() const { return ___poseActionData_size_11; }
	inline uint32_t* get_address_of_poseActionData_size_11() { return &___poseActionData_size_11; }
	inline void set_poseActionData_size_11(uint32_t value)
	{
		___poseActionData_size_11 = value;
	}

	inline static int32_t get_offset_of_framesAhead_35() { return static_cast<int32_t>(offsetof(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields, ___framesAhead_35)); }
	inline float get_framesAhead_35() const { return ___framesAhead_35; }
	inline float* get_address_of_framesAhead_35() { return &___framesAhead_35; }
	inline void set_framesAhead_35(float value)
	{
		___framesAhead_35 = value;
	}
};


// Valve.VR.SteamVR_Action_Single_Source
struct  SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F  : public SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB
{
public:
	// System.Single Valve.VR.SteamVR_Action_Single_Source::changeTolerance
	float ___changeTolerance_11;
	// Valve.VR.SteamVR_Action_Single_AxisHandler Valve.VR.SteamVR_Action_Single_Source::onAxis
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___onAxis_12;
	// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveChange_13;
	// Valve.VR.SteamVR_Action_Single_ActiveChangeHandler Valve.VR.SteamVR_Action_Single_Source::onActiveBindingChange
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___onActiveBindingChange_14;
	// Valve.VR.SteamVR_Action_Single_ChangeHandler Valve.VR.SteamVR_Action_Single_Source::onChange
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___onChange_15;
	// Valve.VR.SteamVR_Action_Single_UpdateHandler Valve.VR.SteamVR_Action_Single_Source::onUpdate
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___onUpdate_16;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<changed>k__BackingField
	bool ___U3CchangedU3Ek__BackingField_17;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastChanged>k__BackingField
	bool ___U3ClastChangedU3Ek__BackingField_18;
	// System.Boolean Valve.VR.SteamVR_Action_Single_Source::<lastActive>k__BackingField
	bool ___U3ClastActiveU3Ek__BackingField_19;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::actionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___actionData_20;
	// Valve.VR.InputAnalogActionData_t Valve.VR.SteamVR_Action_Single_Source::lastActionData
	InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  ___lastActionData_21;
	// Valve.VR.SteamVR_Action_Single Valve.VR.SteamVR_Action_Single_Source::singleAction
	SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___singleAction_22;

public:
	inline static int32_t get_offset_of_changeTolerance_11() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___changeTolerance_11)); }
	inline float get_changeTolerance_11() const { return ___changeTolerance_11; }
	inline float* get_address_of_changeTolerance_11() { return &___changeTolerance_11; }
	inline void set_changeTolerance_11(float value)
	{
		___changeTolerance_11 = value;
	}

	inline static int32_t get_offset_of_onAxis_12() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onAxis_12)); }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * get_onAxis_12() const { return ___onAxis_12; }
	inline AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** get_address_of_onAxis_12() { return &___onAxis_12; }
	inline void set_onAxis_12(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * value)
	{
		___onAxis_12 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onAxis_12), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveChange_13() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveChange_13)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveChange_13() const { return ___onActiveChange_13; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveChange_13() { return &___onActiveChange_13; }
	inline void set_onActiveChange_13(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveChange_13 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveChange_13), (void*)value);
	}

	inline static int32_t get_offset_of_onActiveBindingChange_14() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onActiveBindingChange_14)); }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * get_onActiveBindingChange_14() const { return ___onActiveBindingChange_14; }
	inline ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** get_address_of_onActiveBindingChange_14() { return &___onActiveBindingChange_14; }
	inline void set_onActiveBindingChange_14(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * value)
	{
		___onActiveBindingChange_14 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onActiveBindingChange_14), (void*)value);
	}

	inline static int32_t get_offset_of_onChange_15() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onChange_15)); }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * get_onChange_15() const { return ___onChange_15; }
	inline ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** get_address_of_onChange_15() { return &___onChange_15; }
	inline void set_onChange_15(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * value)
	{
		___onChange_15 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onChange_15), (void*)value);
	}

	inline static int32_t get_offset_of_onUpdate_16() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___onUpdate_16)); }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * get_onUpdate_16() const { return ___onUpdate_16; }
	inline UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** get_address_of_onUpdate_16() { return &___onUpdate_16; }
	inline void set_onUpdate_16(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * value)
	{
		___onUpdate_16 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___onUpdate_16), (void*)value);
	}

	inline static int32_t get_offset_of_U3CchangedU3Ek__BackingField_17() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3CchangedU3Ek__BackingField_17)); }
	inline bool get_U3CchangedU3Ek__BackingField_17() const { return ___U3CchangedU3Ek__BackingField_17; }
	inline bool* get_address_of_U3CchangedU3Ek__BackingField_17() { return &___U3CchangedU3Ek__BackingField_17; }
	inline void set_U3CchangedU3Ek__BackingField_17(bool value)
	{
		___U3CchangedU3Ek__BackingField_17 = value;
	}

	inline static int32_t get_offset_of_U3ClastChangedU3Ek__BackingField_18() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastChangedU3Ek__BackingField_18)); }
	inline bool get_U3ClastChangedU3Ek__BackingField_18() const { return ___U3ClastChangedU3Ek__BackingField_18; }
	inline bool* get_address_of_U3ClastChangedU3Ek__BackingField_18() { return &___U3ClastChangedU3Ek__BackingField_18; }
	inline void set_U3ClastChangedU3Ek__BackingField_18(bool value)
	{
		___U3ClastChangedU3Ek__BackingField_18 = value;
	}

	inline static int32_t get_offset_of_U3ClastActiveU3Ek__BackingField_19() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___U3ClastActiveU3Ek__BackingField_19)); }
	inline bool get_U3ClastActiveU3Ek__BackingField_19() const { return ___U3ClastActiveU3Ek__BackingField_19; }
	inline bool* get_address_of_U3ClastActiveU3Ek__BackingField_19() { return &___U3ClastActiveU3Ek__BackingField_19; }
	inline void set_U3ClastActiveU3Ek__BackingField_19(bool value)
	{
		___U3ClastActiveU3Ek__BackingField_19 = value;
	}

	inline static int32_t get_offset_of_actionData_20() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___actionData_20)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_actionData_20() const { return ___actionData_20; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_actionData_20() { return &___actionData_20; }
	inline void set_actionData_20(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___actionData_20 = value;
	}

	inline static int32_t get_offset_of_lastActionData_21() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___lastActionData_21)); }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  get_lastActionData_21() const { return ___lastActionData_21; }
	inline InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * get_address_of_lastActionData_21() { return &___lastActionData_21; }
	inline void set_lastActionData_21(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  value)
	{
		___lastActionData_21 = value;
	}

	inline static int32_t get_offset_of_singleAction_22() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F, ___singleAction_22)); }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * get_singleAction_22() const { return ___singleAction_22; }
	inline SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 ** get_address_of_singleAction_22() { return &___singleAction_22; }
	inline void set_singleAction_22(SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * value)
	{
		___singleAction_22 = value;
		Il2CppCodeGenWriteBarrier((void**)(&___singleAction_22), (void*)value);
	}
};

struct SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields
{
public:
	// System.UInt32 Valve.VR.SteamVR_Action_Single_Source::actionData_size
	uint32_t ___actionData_size_10;

public:
	inline static int32_t get_offset_of_actionData_size_10() { return static_cast<int32_t>(offsetof(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields, ___actionData_size_10)); }
	inline uint32_t get_actionData_size_10() const { return ___actionData_size_10; }
	inline uint32_t* get_address_of_actionData_size_10() { return &___actionData_size_10; }
	inline void set_actionData_size_10(uint32_t value)
	{
		___actionData_size_10 = value;
	}
};


// Valve.VR.SteamVR_Action_Boolean_Source_Map
struct  SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B  : public SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE
{
public:

public:
};


// Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>
struct  SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9  : public SteamVR_Action_In_Source_Map_1_t8620836FE3BF53CCD96DF04716DB518EAEEC2584
{
public:

public:
};


// Valve.VR.SteamVR_Action_Single_Source_Map
struct  SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37  : public SteamVR_Action_In_Source_Map_1_t2C53C7DDA5E7BECE6E12D3EE7BFAB2ADF8781741
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Valve.VR.SteamVR_Action[]
struct SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * m_Items[1];

public:
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.ISteamVR_Action_In[]
struct ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

public:
	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.SteamVR_Action_Pose[]
struct SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * m_Items[1];

public:
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.SteamVR_Action_Skeleton[]
struct SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * m_Items[1];

public:
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.ISteamVR_Action_Out[]
struct ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) RuntimeObject* m_Items[1];

public:
	inline RuntimeObject* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, RuntimeObject* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline RuntimeObject* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline RuntimeObject** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, RuntimeObject* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.Boolean[]
struct BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) bool m_Items[1];

public:
	inline bool GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline bool* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, bool value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline bool GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline bool* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, bool value)
	{
		m_Items[index] = value;
	}
};
// System.Single[]
struct SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) float m_Items[1];

public:
	inline float GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline float* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, float value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline float GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline float* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, float value)
	{
		m_Items[index] = value;
	}
};
// System.Int32[]
struct Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_ActionSet[]
struct SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * m_Items[1];

public:
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.VRActiveActionSet_t[]
struct VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  m_Items[1];

public:
	inline VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.SteamVR_Input_Sources[]
struct SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// System.String[]
struct StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) String_t* m_Items[1];

public:
	inline String_t* GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline String_t** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, String_t* value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
	inline String_t* GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline String_t** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, String_t* value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier((void**)m_Items + index, (void*)value);
	}
};
// Valve.VR.EVRInputStringBits[]
struct EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};


// System.Void System.Collections.Generic.List`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<System.Object>::Add(!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, RuntimeObject * ___item0, const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<System.Object>::ToArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ObjectU5BU5D_t3C9242B5C88A48B2A5BD9FDA6CD0024E792AF08A* List_1_ToArray_m801D4DEF3587F60F463F04EEABE5CBE711FE5612_gshared (List_1_t05CC3C859AB5E6024394EF9A42E3E696628CA02D * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1__ctor_mF06B82312E78C159AEDF13A8DD791208649F24D8_gshared (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::get_Item(System.Int32)
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFE_gshared_inline (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, int32_t ___index0, const RuntimeMethod* method);
// System.Int32 System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::get_Count()
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7_gshared_inline (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::Insert(System.Int32,!0)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void List_1_Insert_m8E1B4C1E07BEE076D186D8F353B70C36EB7D3162_gshared (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, int32_t ___index0, VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  ___item1, const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::ToArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* List_1_ToArray_m1108FB082C3C5F9F61019E3418CBEEBC8683A2CC_gshared (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<System.Object>::get_Item(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject * SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared (SteamVR_Action_Source_Map_1_tCAA2C8FE17BA000619F1ADE00A17D8037F5B4B14 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_2__ctor_m1E68CCDF619CF154D71E1657018F8407C7E9E57C_gshared (SteamVR_Action_In_2_t69D3F3E304EB8FE2A070ACD581E61CDFF8732243 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<System.Object,System.Object>::InitAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared (SteamVR_Action_2_t17CE6363B177E4D037F3097259B68D6F8842CC5B * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Map_1__ctor_mABEF0F1512ABB73914B960E4A67930AC81E767F1_gshared (SteamVR_Action_In_Source_Map_1_t7F4F1E354FE5A814AEA83C884D31215ED36A1A8D * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::SetUniverseOrigin(Valve.VR.ETrackingUniverseOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2_SetUniverseOrigin_mD2B7C5BD95B32757F2C081384D169A35F877578A_gshared (int32_t ___newOrigin0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<System.Object,System.Object>::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Base_2__ctor_m15192F31C4B54121755BF28201D51E0616710270_gshared (SteamVR_Action_Pose_Base_2_tE4721EEBBC945BAAF6FF57A49BF6EB4ACDB13900 * __this, const RuntimeMethod* method);

// System.Void System.Object::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0 (RuntimeObject * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_Action[] Valve.VR.SteamVR_ActionSet_Data::get_allActions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_ActionSet_Data::get_nonVisualInActions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_ActionSet_Data::get_visualActions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_Action_Pose[] Valve.VR.SteamVR_ActionSet_Data::get_poseActions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_Action_Skeleton[] Valve.VR.SteamVR_ActionSet_Data::get_skeletonActions()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// Valve.VR.ISteamVR_Action_Out[] Valve.VR.SteamVR_ActionSet_Data::get_outActionArray()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_ActionSet_Data::get_fullPath()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_ActionSet_Data::get_usage()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_ActionSet_Data::get_handle()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint64_t SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data__ctor_m812A76A6EE69B1EC1169664FE8943FB654017719 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_fullPath(System.String)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, String_t* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::PreInitialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_PreInitialize_m87876D8B244F011424022EEC7ADF26A3BAD1E0B6 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::FinishPreInitialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_FinishPreInitialize_m8C0EAC503979427BADE6B4BDC78F96FFD1313814 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_Initialize_m0BE37476A9F4DCEA304B33032F3FABC598282A67 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet_Data Valve.VR.SteamVR_Input::GetActionSetDataFromPath(System.String,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * SteamVR_Input_GetActionSetDataFromPath_m5A334CDA6B889F2D636BF228BDB3EDEFCBA84ABF (String_t* ___path0, bool ___caseSensitive1, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet_Data::IsActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_Data_IsActive_mC6E31ADAB67DCCF82B2E27F64161BC66DC4DB25B (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___source0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_ActionSet_Data::GetTimeLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_ActionSet_Data_GetTimeLastChanged_m5ECECC1C5DE2077B835B5BD2F7BE0876638EEF8F (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___source0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::Activate(Valve.VR.SteamVR_Input_Sources,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_Activate_m8C958814A91F7C665A0BFCAF67627BAAEC93B3AC (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___activateForSource0, int32_t ___priority1, bool ___disableAllOtherActionSets2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::Deactivate(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_Deactivate_mE0A9AC1E44C88BE94147501C11CE88E193FCF627 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___forSource0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_ActionSet_Data::GetShortName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_Data_GetShortName_mDEEB621483F8E19D8AD132B2E0225CD2A2AF467D (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Input::ShowBindingHints(Valve.VR.ISteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Input_ShowBindingHints_mDC7A5EC06619FC1F857C88633AF521DCD4073052 (RuntimeObject* ___setToShow0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Input::ShowBindingHints(Valve.VR.ISteamVR_Action_In)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Input_ShowBindingHints_mC7657D924D1B4FE258291214F7CAC53FC1D80FC6 (RuntimeObject* ___originToHighlight0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet_Data::ReadRawSetActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_Data_ReadRawSetActive_m891E7459F99CA50296CDA3B125BFD30A5354E885 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_ActionSet_Data::ReadRawSetLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_ActionSet_Data_ReadRawSetLastChanged_m919EB49DF19CF40FE2656A04DD3426CEBAFDB17F (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Int32 Valve.VR.SteamVR_ActionSet_Data::ReadRawSetPriority(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_ActionSet_Data_ReadRawSetPriority_mED5DD82308639337336BB89EAD040FC46E0063C4 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.Boolean System.String::op_Equality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// System.Boolean System.String::IsNullOrEmpty(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_IsNullOrEmpty_m06A85A206AC2106D1982826C5665B9BD35324229 (String_t* ___value0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet::Equals(Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_Equals_mFD436DEBDAA9D1FF4B19B80F16AB1F59D723D6B5 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___other0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet::op_Equality(Valve.VR.SteamVR_ActionSet,Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_op_Equality_mE7F907A29CA5B03F5449D3B017572D85A7D7667E (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set10, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set21, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet::GetActionSetData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method);
// System.Boolean System.String::op_Inequality(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool String_op_Inequality_m0BD184A74F453A72376E81CC6CAEE2556B80493E (String_t* ___a0, String_t* ___b1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Valve.VR.SteamVR_Action>::.ctor()
inline void List_1__ctor_m457F51332DF249D2915C9C74417863E1FFE39421 (List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_In>::.ctor()
inline void List_1__ctor_m6DD1A135C8AAA0CABC4E324E43DDC01B8E5DA377 (List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Pose>::.ctor()
inline void List_1__ctor_m7B9B03A716E37A20B0DEADEC320577C95FEF69EA (List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Skeleton>::.ctor()
inline void List_1__ctor_m4B6E82AE7F17F9C7BA593C6B9560A953DAF7669A (List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_Out>::.ctor()
inline void List_1__ctor_mDE47585A983559D5FF01B691252B7916A522D8BC (List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 *, const RuntimeMethod*))List_1__ctor_mC832F1AC0F814BAEB19175F5D7972A7507508BC3_gshared)(__this, method);
}
// System.Void UnityEngine.Debug::LogError(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29 (RuntimeObject * ___message0, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Valve.VR.SteamVR_Action>::Add(!0)
inline void List_1_Add_m2F40A46649DE9F41DA5EFF00B1BE9E6398B8C230 (List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E *, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_In>::Add(!0)
inline void List_1_Add_mF78B2826BBA103681C33B9B3324B40499714D270 (List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * __this, RuntimeObject* ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 *, RuntimeObject*, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Pose>::Add(!0)
inline void List_1_Add_mEF5A942248F62F6C41B60715025920933A09D025 (List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D *, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Skeleton>::Add(!0)
inline void List_1_Add_mDF2F700986FF96334AB4BDF4A6C59B21F5D363BD (List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE * __this, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 * ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE *, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_Out>::Add(!0)
inline void List_1_Add_mE2CD0AD29CD6CE0EEA987C0060B8888D7BBA7D97 (List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 * __this, RuntimeObject* ___item0, const RuntimeMethod* method)
{
	((  void (*) (List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 *, RuntimeObject*, const RuntimeMethod*))List_1_Add_m6930161974C7504C80F52EC379EF012387D43138_gshared)(__this, ___item0, method);
}
// System.String System.String::Concat(System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE (String_t* ___str00, String_t* ___str11, const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<Valve.VR.SteamVR_Action>::ToArray()
inline SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* List_1_ToArray_m2BDB1565BA0CC1BD90519A604819C49271EBF994 (List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* (*) (List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E *, const RuntimeMethod*))List_1_ToArray_m801D4DEF3587F60F463F04EEABE5CBE711FE5612_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_allActions(Valve.VR.SteamVR_Action[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* ___value0, const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_In>::ToArray()
inline ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* List_1_ToArray_m470F0A969BF075D357A86483EAE70044615743A9 (List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * __this, const RuntimeMethod* method)
{
	return ((  ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* (*) (List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 *, const RuntimeMethod*))List_1_ToArray_m801D4DEF3587F60F463F04EEABE5CBE711FE5612_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_nonVisualInActions(Valve.VR.ISteamVR_Action_In[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_visualActions(Valve.VR.ISteamVR_Action_In[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___value0, const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Pose>::ToArray()
inline SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* List_1_ToArray_mAD65CA979E887314BE09D9F86956A71F4DD0C63D (List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* (*) (List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D *, const RuntimeMethod*))List_1_ToArray_m801D4DEF3587F60F463F04EEABE5CBE711FE5612_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_poseActions(Valve.VR.SteamVR_Action_Pose[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* ___value0, const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<Valve.VR.SteamVR_Action_Skeleton>::ToArray()
inline SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* List_1_ToArray_mC869178ED852E7FAD653B847FFD1D68B7E3442AC (List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE * __this, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* (*) (List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE *, const RuntimeMethod*))List_1_ToArray_m801D4DEF3587F60F463F04EEABE5CBE711FE5612_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_skeletonActions(Valve.VR.SteamVR_Action_Skeleton[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* ___value0, const RuntimeMethod* method);
// !0[] System.Collections.Generic.List`1<Valve.VR.ISteamVR_Action_Out>::ToArray()
inline ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* List_1_ToArray_m1DEF39891430F5006DACED95FF5635E20E5383AB (List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 * __this, const RuntimeMethod* method)
{
	return ((  ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* (*) (List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 *, const RuntimeMethod*))List_1_ToArray_m801D4DEF3587F60F463F04EEABE5CBE711FE5612_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_outActionArray(Valve.VR.ISteamVR_Action_Out[])
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* ___value0, const RuntimeMethod* method);
// Valve.VR.CVRInput Valve.VR.OpenVR::get_Input()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414 (const RuntimeMethod* method);
// System.String System.String::ToLower()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8 (String_t* __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetActionSetHandle(System.String,System.UInt64&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetActionSetHandle_m2901A740E07DD4A7633A45B13E106A20E88FE5BD (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, String_t* ___pchActionSetName0, uint64_t* ___pHandle1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_handle(System.UInt64)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, uint64_t ___value0, const RuntimeMethod* method);
// System.String System.String::Concat(System.String,System.String,System.String,System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64 (String_t* ___str00, String_t* ___str11, String_t* ___str22, String_t* ___str33, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Manager::DisableAllActionSets()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_DisableAllActionSets_m12EB6122FBA645AB44644A2D46785CEBB3FB3B35 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Manager::SetChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD (const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_realtimeSinceStartup()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03 (const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Input_ActionFile::GetShortName(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Input_ActionFile_GetShortName_m2DBB3F38D27A42BC7D4C9A9228FF8407334D6059 (String_t* ___name0, const RuntimeMethod* method);
// System.Type System.Type::GetTypeFromHandle(System.RuntimeTypeHandle)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Type_t * Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6 (RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  ___handle0, const RuntimeMethod* method);
// System.Int32 System.Runtime.InteropServices.Marshal::SizeOf(System.Type)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130 (Type_t * ___t0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet::Deactivate(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___forSource0, const RuntimeMethod* method);
// System.Int32 UnityEngine.Time::get_frameCount()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Manager::UpdateActionSetsArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_UpdateActionSetsArray_m5B38E7C7984AA6B00A0D53678600DA349B88D4B3 (const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::UpdateActionState(Valve.VR.VRActiveActionSet_t[],System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_UpdateActionState_m9C4DC24DE1B68DF8804DA117F4CF7FB4C14807CB (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* ___pSets0, uint32_t ___unSizeOfVRSelectedActionSet_t1, const RuntimeMethod* method);
// System.Void System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::.ctor()
inline void List_1__ctor_mF06B82312E78C159AEDF13A8DD791208649F24D8 (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, const RuntimeMethod* method)
{
	((  void (*) (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA *, const RuntimeMethod*))List_1__ctor_mF06B82312E78C159AEDF13A8DD791208649F24D8_gshared)(__this, method);
}
// Valve.VR.SteamVR_Input_Sources[] Valve.VR.SteamVR_Input_Source::GetAllSources()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* SteamVR_Input_Source_GetAllSources_m3FEDAE791D389B6ED4E1A7665B1F6381780C8352 (const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet::ReadRawSetActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_ReadRawSetActive_m161B1A01E1A47E416D34A1221B95214693E51952 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_ActionSet::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_ActionSet_get_handle_m3C1592C47E16A579B14F77D84DE50B89BDB9405F (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method);
// System.Int32 Valve.VR.SteamVR_ActionSet::ReadRawSetPriority(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_ActionSet_ReadRawSetPriority_m58E0F9561136FBE76C799447547C14C1C4FB8476 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___inputSource0, const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_Input_Source::GetHandle(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Input_Source_GetHandle_mEA0F6E33E3CB937C11859B35CDB283523240E185 (int32_t ___inputSource0, const RuntimeMethod* method);
// !0 System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::get_Item(System.Int32)
inline VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFE_inline (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, int32_t ___index0, const RuntimeMethod* method)
{
	return ((  VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  (*) (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA *, int32_t, const RuntimeMethod*))List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFE_gshared_inline)(__this, ___index0, method);
}
// System.Int32 System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::get_Count()
inline int32_t List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7_inline (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, const RuntimeMethod* method)
{
	return ((  int32_t (*) (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA *, const RuntimeMethod*))List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7_gshared_inline)(__this, method);
}
// System.Void System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::Insert(System.Int32,!0)
inline void List_1_Insert_m8E1B4C1E07BEE076D186D8F353B70C36EB7D3162 (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, int32_t ___index0, VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  ___item1, const RuntimeMethod* method)
{
	((  void (*) (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA *, int32_t, VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38 , const RuntimeMethod*))List_1_Insert_m8E1B4C1E07BEE076D186D8F353B70C36EB7D3162_gshared)(__this, ___index0, ___item1, method);
}
// !0[] System.Collections.Generic.List`1<Valve.VR.VRActiveActionSet_t>::ToArray()
inline VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* List_1_ToArray_m1108FB082C3C5F9F61019E3418CBEEBC8683A2CC (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, const RuntimeMethod* method)
{
	return ((  VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* (*) (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA *, const RuntimeMethod*))List_1_ToArray_m1108FB082C3C5F9F61019E3418CBEEBC8683A2CC_gshared)(__this, method);
}
// System.Boolean UnityEngine.Application::get_isEditor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool Application_get_isEditor_m347E6EE16E5109EF613C83ED98DB1EC6E3EF5E26 (const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_ActionSet_Manager::UpdateDebugText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_UpdateDebugText_m650FC8288DEEC6717EAFD78F778D990DE023F14F (const RuntimeMethod* method);
// System.Void System.Text.StringBuilder::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StringBuilder__ctor_mF928376F82E8C8FF3C11842C562DB8CF28B2735E (StringBuilder_t * __this, const RuntimeMethod* method);
// System.Text.StringBuilder System.Text.StringBuilder::Append(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StringBuilder_t * StringBuilder_Append_m85874CFF9E4B152DB2A91936C6F2CA3E9B1EFF84 (StringBuilder_t * __this, int32_t ___value0, const RuntimeMethod* method);
// System.Text.StringBuilder System.Text.StringBuilder::Append(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StringBuilder_t * StringBuilder_Append_mDBB8CCBB7750C67BE2F2D92F47E6C0FA42793260 (StringBuilder_t * __this, String_t* ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Input_Source::GetSource(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Input_Source_GetSource_mA164CF850044FA00ACCF139C47A575894CF8E04F (uint64_t ___handle0, const RuntimeMethod* method);
// System.Text.StringBuilder System.Text.StringBuilder::Append(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR StringBuilder_t * StringBuilder_Append_mA1A063A1388A21C8EA011DBA7FC98C24C3EE3D65 (StringBuilder_t * __this, RuntimeObject * ___value0, const RuntimeMethod* method);
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_ActionSet_Manager::GetSetFromHandle(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_ActionSet_Manager_GetSetFromHandle_m9F9E7D5DFFC04B5C8CBAAB15B6E9F75997B9C22D (uint64_t ___handle0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_ActionSet::GetShortName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_GetShortName_mA622B5396AA3CB274F8290FD4C0DD1BF6504769E (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E (SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * (*) (SteamVR_Action_Source_Map_1_t201E3E98AE5A0596AB8B460805D1C622B3C8288B *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onChange(Valve.VR.SteamVR_Action_Boolean/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Boolean/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onState(Valve.VR.SteamVR_Action_Boolean/StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateDown(Valve.VR.SteamVR_Action_Boolean/StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateUp(Valve.VR.SteamVR_Action_Boolean/StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onActiveChange_m7E094E7B60FD19A1F34DDD37589C37878DB6F636 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onActiveChange_m929F8C0D16D3EB930B80201ED30C2B06ABB153E5 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onActiveBindingChange_m3E749DFEECD4756269020C7159A8848C05503C7E (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_m2FBB2D79C11CDAD80D58D3558DAA55377F7FC42F (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_state()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_stateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_stateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastState_m3738D53D87B67856DCF3E6C32DB0A4DF72B828DD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastStateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastStateDown_mC33753F4A4DB7BF33BF0727E0B441D556EF9FE96 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastStateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastStateUp_mECCC96AB8645D1EA185DCCA78478B47850850276 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::.ctor()
inline void SteamVR_Action_In_2__ctor_m421E8FB8CFB44A3AAAE42D765F4158180B98B9B1 (SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_2_t2F8E3210A305FC855ECD46AD48FA406BA177FAA9 *, const RuntimeMethod*))SteamVR_Action_In_2__ctor_m1E68CCDF619CF154D71E1657018F8407C7E9E57C_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Boolean_Source_Map,Valve.VR.SteamVR_Action_Boolean_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m631EE116B3831060F47CC659AE2A5FBF7186559A (SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared)(__this, method);
}
// System.Delegate System.Delegate::Combine(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1 (Delegate_t * ___a0, Delegate_t * ___b1, const RuntimeMethod* method);
// System.Delegate System.Delegate::Remove(System.Delegate,System.Delegate)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Delegate_t * Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D (Delegate_t * ___source0, Delegate_t * ___value1, const RuntimeMethod* method);
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_Source::get_inputSource()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_ActionSet::IsActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___source0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetDigitalActionData(System.UInt64,Valve.VR.InputDigitalActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetDigitalActionData_m4A847DD95FD14F887E12A308E35CB33073F2B261 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * ___pActionData1, uint32_t ___unActionDataSize2, uint64_t ___ulRestrictToDevice3, const RuntimeMethod* method);
// System.String System.UInt64::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672 (uint64_t* __this, const RuntimeMethod* method);
// System.String System.String::Concat(System.String[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* ___values0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_changedTime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_updateTime(System.Single)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateDownHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_mBAD714BEB0B3CDDD1301544003C7C42C17743084 (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateUpHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_m8243F855D40DEA046F71E82DB601D20DEFBED41A (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/StateHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_m1CDA16A03E31472750E45DECCE4B6136482C0F46 (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m953BCC74C1105C1EA81FEBEC410157082FE98E81 (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m9C95A4E4CA301E2E6DADBCF2ABCDE00671ECBAF5 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Boolean/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mFB2090F4429E50979967A677C25DA938F97B620D (ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source_Map`1<Valve.VR.SteamVR_Action_Boolean_Source>::.ctor()
inline void SteamVR_Action_In_Source_Map_1__ctor_mE09AB88DCEFF91428F5A5C11BC337B2DEA0E492B (SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_Source_Map_1_t462A62AFB6CF3E08F3D5A481212A290F3FEB5FFE *, const RuntimeMethod*))SteamVR_Action_In_Source_Map_1__ctor_mABEF0F1512ABB73914B960E4A67930AC81E767F1_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_In_Source::UpdateOriginTrackedDeviceInfo()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.String Valve.VR.InputOriginInfo_t::get_rchRenderModelComponentName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* InputOriginInfo_t_get_rchRenderModelComponentName_m9B8B4E08EA4E7AA048D4DD0BFEF65EBFD7641883 (InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * __this, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOrigin_m3F7940786DFA6BAC3C618A67EA65C503E585D9CC (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.Int32 Valve.VR.SteamVR_Action_In_Source::get_lastOriginGetFrame()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetOriginTrackedDeviceInfo(System.UInt64,Valve.VR.InputOriginInfo_t&,System.UInt32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetOriginTrackedDeviceInfo_m7827785EB25A3AB7F1255235E91C5EBD041FA2BB (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___origin0, InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * ___pOriginInfo1, uint32_t ___unOriginInfoSize2, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Action_Source::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.UInt64 Valve.VR.SteamVR_Action_Source::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// System.String System.Boolean::ToString()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* Boolean_ToString_m62D1EFD5F6D5F6B6AF0D14A07BF5741C94413301 (bool* __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In_Source::set_lastOriginGetFrame(System.Int32)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, int32_t ___value0, const RuntimeMethod* method);
// System.String Valve.VR.SteamVR_Input::GetLocalizedName(System.UInt64,Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Input_GetLocalizedName_m0EC52235A6671CC04A8BB9273358737AA49C8FF8 (uint64_t ___originHandle0, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Source__ctor_m50ABEE6BD7F519AB9E0296103A69073EEA2D6576 (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986 (SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * (*) (SteamVR_Action_Source_Map_1_t4A3528A78F542534FFD6E6F281FB9A8905078A20 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onActiveChange_m6C3297DBA3E2608BE985FA75EE8D46EAC5C792B2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onActiveChange_m0D6A09A4D2599E4EECF2460CF2A3B7466BC0B739 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onActiveBindingChange_m2CCB91E08B318C4D6A45A8356BBAA73BC9831580 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m800A450B68164A69677E890066A3C6CE0B59BD15 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onChange(Valve.VR.SteamVR_Action_Pose/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Pose/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onValidPoseChanged_m35C4DDEF19BCA4F9606F36E545FF6D39461DF637 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onValidPoseChanged_m30DDDE1F913F495779B5369059C11D07D18A8749 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m2F768D4CC6A466FA8C4227575AAF7AE0B58FE8EA (SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::SetUniverseOrigin(Valve.VR.ETrackingUniverseOrigin)
inline void SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m9C4D69476F261793A9C024F0B06DE9B549EE8C2C (int32_t ___newOrigin0, const RuntimeMethod* method)
{
	((  void (*) (int32_t, const RuntimeMethod*))SteamVR_Action_Pose_Base_2_SetUniverseOrigin_mD2B7C5BD95B32757F2C081384D169A35F877578A_gshared)(___newOrigin0, method);
}
// Valve.VR.CVRCompositor Valve.VR.OpenVR::get_Compositor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A * OpenVR_get_Compositor_m23FBC18F748E899365E93022FAEA24774FD7276E (const RuntimeMethod* method);
// System.Void Valve.VR.CVRCompositor::SetTrackingSpace(Valve.VR.ETrackingUniverseOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void CVRCompositor_SetTrackingSpace_m6C8B6AD410AE8367BDD5249D304D569F90D98D31 (CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A * __this, int32_t ___eOrigin0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Base`2<Valve.VR.SteamVR_Action_Pose_Source_Map`1<Valve.VR.SteamVR_Action_Pose_Source>,Valve.VR.SteamVR_Action_Pose_Source>::.ctor()
inline void SteamVR_Action_Pose_Base_2__ctor_m04D9EF0A3BBF604D9C6F5846B1DC9A4A852AC7D8 (SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_Pose_Base_2_tBAE9134F2B018AC078BAF24A2A5197F0A976D59A *, const RuntimeMethod*))SteamVR_Action_Pose_Base_2__ctor_m15192F31C4B54121755BF28201D51E0616710270_gshared)(__this, method);
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_localPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastLocalPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_localRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastLocalRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_velocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_angularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastAngularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetPoseActionDataForNextFrame(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.InputPoseActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetPoseActionDataForNextFrame_m5D5DF76029C3F3044DED92C6D4BE66CD1A6D8623 (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___eOrigin1, InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * ___pActionData2, uint32_t ___unActionDataSize3, uint64_t ___ulRestrictToDevice4, const RuntimeMethod* method);
// System.Single UnityEngine.Time::get_timeScale()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Time_get_timeScale_m7E198A5814859A08FD0FFE6DD5F7ED5C907719F8 (const RuntimeMethod* method);
// Valve.VR.SteamVR Valve.VR.SteamVR::get_instance()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * SteamVR_get_instance_m051B21845BD2F1EACC9DAF67416E7B898EB8E248 (const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR::get_hmd_DisplayFrequency()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_get_hmd_DisplayFrequency_m375C2CC22516CB3468CD91E4BE6F9CC82F963132 (SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * __this, const RuntimeMethod* method);
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetPoseActionDataRelativeToNow(System.UInt64,Valve.VR.ETrackingUniverseOrigin,System.Single,Valve.VR.InputPoseActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetPoseActionDataRelativeToNow_mC2AB35B1C17F485F9BE0474BBD66CDD7CC7B399F (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, int32_t ___eOrigin1, float ___fPredictedSecondsFromNow2, InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * ___pActionData3, uint32_t ___unActionDataSize4, uint64_t ___ulRestrictToDevice5, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::SetCacheVariables()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_SetCacheVariables_m0BC40967351405886DCA503AC1DB8D0FEE51E51E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetChanged_mDCF9B89311A87C0C4E58E86E4D87002F8DEFF8E5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_In_Source::get_updateTime()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.HmdMatrix34_t::GetPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  HmdMatrix34_t_GetPosition_m19C067FAAAF182DE25CF89BB718F69EE6A3B38D2 (HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.HmdMatrix34_t::GetRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  HmdMatrix34_t_GetRotation_m577C2567481CCDC641DD1861EC627F2663CFB381 (HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateVelocity(Valve.VR.HmdVector3_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vector0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_velocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateAngularVelocity(Valve.VR.HmdVector3_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vector0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_angularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalPosition()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Vector3::Distance(UnityEngine.Vector3,UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7 (Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___a0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___b1, const RuntimeMethod* method);
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalRotation()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Single UnityEngine.Quaternion::Angle(UnityEngine.Quaternion,UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1 (Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___a0, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___b1, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastAngularVelocity()
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// UnityEngine.Vector3 UnityEngine.Vector3::get_zero()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2 (const RuntimeMethod* method);
// UnityEngine.Quaternion UnityEngine.Quaternion::get_identity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64 (const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728 (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method);
// System.Void UnityEngine.Transform::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A (Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method);
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_trackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_lastTrackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_mB75EEED68A19DD7FC8988E887F982788E99A1E02 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_poseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m2DB8001CFAE1F578556A47959FA7FDEC22075702 (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_deviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_mEEAA2A7D5DB7888DAA31E9B414946CF495F26A7F (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mB5D41EA120DB15F9D1C3D31862A5B481CE22C0B8 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mCCA44BC573ECDBA8778D4910575267293389F622 (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Pose/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mE74BC4C57DFC977BC12469CC6062FB39140C92F8 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateVelocity(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m170A3FFF941B012949E57D5DA611B896170AD4BD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateAngularVelocity(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m64A302D834078EB5F852E2454736416EFAA6094D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method);
// SourceElement Valve.VR.SteamVR_Action_Source_Map`1<Valve.VR.SteamVR_Action_Single_Source>::get_Item(Valve.VR.SteamVR_Input_Sources)
inline SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72 (SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	return ((  SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * (*) (SteamVR_Action_Source_Map_1_t35C427C8B75EF289976D4DB641CA212F073FB0A1 *, int32_t, const RuntimeMethod*))SteamVR_Action_Source_Map_1_get_Item_mE7E2BE18AECB1CDFEADB1E81CEC1C729BBACAB4D_gshared)(__this, ___inputSource0, method);
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onChange(Valve.VR.SteamVR_Action_Single/ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Single/UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onAxis(Valve.VR.SteamVR_Action_Single/AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onActiveChange_m1F6680C2292E111DB5C646ACF18B915E97FCAD65 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onActiveChange_m57429A6EDBB434A11FAD387C6A4FE3C1A87D45EF (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onActiveBindingChange_m6187F6A9C25E278771AB9620CC3A622C2DA6B91C (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Single/ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onActiveBindingChange_mBCD97A3A9E5EF5A9D861D8540468DDA5347D386D (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_lastAxis_m3BB3B19BEE34D02E4B2482059D7E7B5F3F752DAF (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_lastDelta_m4D35501771FFC7984A62619FEF732F456B8F4CFD (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_In`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::.ctor()
inline void SteamVR_Action_In_2__ctor_m3D48B8CB47E690C4518B62F2A6AEEAA715C58756 (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_In_2_t518EEA73CD833B39D557DDB94804313377E0FE02 *, const RuntimeMethod*))SteamVR_Action_In_2__ctor_m1E68CCDF619CF154D71E1657018F8407C7E9E57C_gshared)(__this, method);
}
// System.Void Valve.VR.SteamVR_Action`2<Valve.VR.SteamVR_Action_Single_Source_Map,Valve.VR.SteamVR_Action_Single_Source>::InitAfterDeserialize()
inline void SteamVR_Action_2_InitAfterDeserialize_m6A42B25463661C95EFB21E4291307959C9F0E647 (SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 * __this, const RuntimeMethod* method)
{
	((  void (*) (SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *, const RuntimeMethod*))SteamVR_Action_2_InitAfterDeserialize_mCC6445068DDB02EA2F504749308CE3382698F4BE_gshared)(__this, method);
}
// Valve.VR.EVRInputError Valve.VR.CVRInput::GetAnalogActionData(System.UInt64,Valve.VR.InputAnalogActionData_t&,System.UInt32,System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t CVRInput_GetAnalogActionData_m363EF49EA0485B0A4FF93C37842AC2CF8D21041A (CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * __this, uint64_t ___action0, InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * ___pActionData1, uint32_t ___unActionDataSize2, uint64_t ___ulRestrictToDevice3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m6672A8D7C2C829DAB05FF96A6B6DCD47C4234FED (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/AxisHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m60A66159540CA8174A7C52BDC8E5E4F7301CFFC1 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mEFC67AD99DE1C0D2468FF3D82FCAACA9B5B9B982 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method);
// System.Void Valve.VR.SteamVR_Action_Single/ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mB25857B7C1A2F20AA1DD0B4E50BAF973FAE7728A (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method);
// System.Void System.ThrowHelper::ThrowArgumentOutOfRangeException()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550 (const RuntimeMethod* method);
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_ActionSet::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet__ctor_m219C95976CE339EC6C3221895BB110986F1DC84B (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet__ctor_m219C95976CE339EC6C3221895BB110986F1DC84B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet__ctor_m219C95976CE339EC6C3221895BB110986F1DC84B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3535));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3536));
	{
		// protected bool initialized = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3537));
		__this->set_initialized_2((bool)0);
		// public SteamVR_ActionSet() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3538));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3541));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3541));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3539));
		// public SteamVR_ActionSet() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3540));
		return;
	}
}
// Valve.VR.SteamVR_Action[] Valve.VR.SteamVR_ActionSet::get_allActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* SteamVR_ActionSet_get_allActions_m62CE49140438A5C8B93840F945587E2BDCA22413 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_allActions_m62CE49140438A5C8B93840F945587E2BDCA22413_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_allActions_m62CE49140438A5C8B93840F945587E2BDCA22413_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3542));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3543));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3544));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3545));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3546));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3547));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3550));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3550));
	}

IL_0017:
	{
		// return setData.allActions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3548));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3551));
		NullCheck(L_2);
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_3 = SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3551));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3549));
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_4 = V_1;
		return L_4;
	}
}
// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_ActionSet::get_nonVisualInActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* SteamVR_ActionSet_get_nonVisualInActions_m4D86AC17F666B3ED42B07F2487F49982B60B16D9 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_nonVisualInActions_m4D86AC17F666B3ED42B07F2487F49982B60B16D9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_nonVisualInActions_m4D86AC17F666B3ED42B07F2487F49982B60B16D9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3552));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3553));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3554));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3555));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3556));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3557));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3560));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3560));
	}

IL_0017:
	{
		// return setData.nonVisualInActions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3558));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3561));
		NullCheck(L_2);
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_3 = SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3561));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3559));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_4 = V_1;
		return L_4;
	}
}
// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_ActionSet::get_visualActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* SteamVR_ActionSet_get_visualActions_m3FC0BF9AF969A8B1B8E3ABAEB9202915CEAD05F1 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_visualActions_m3FC0BF9AF969A8B1B8E3ABAEB9202915CEAD05F1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_visualActions_m3FC0BF9AF969A8B1B8E3ABAEB9202915CEAD05F1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3562));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3563));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3564));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3565));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3566));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3567));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3570));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3570));
	}

IL_0017:
	{
		// return setData.visualActions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3568));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3571));
		NullCheck(L_2);
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_3 = SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3571));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3569));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_4 = V_1;
		return L_4;
	}
}
// Valve.VR.SteamVR_Action_Pose[] Valve.VR.SteamVR_ActionSet::get_poseActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* SteamVR_ActionSet_get_poseActions_m53164D70956166FE1E44DE8C6D9B27C911DA167A (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_poseActions_m53164D70956166FE1E44DE8C6D9B27C911DA167A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_poseActions_m53164D70956166FE1E44DE8C6D9B27C911DA167A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3572));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3573));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3574));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3575));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3576));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3577));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3580));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3580));
	}

IL_0017:
	{
		// return setData.poseActions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3578));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3581));
		NullCheck(L_2);
		SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* L_3 = SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3581));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3579));
		SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* L_4 = V_1;
		return L_4;
	}
}
// Valve.VR.SteamVR_Action_Skeleton[] Valve.VR.SteamVR_ActionSet::get_skeletonActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* SteamVR_ActionSet_get_skeletonActions_mAD34C5C7F47FD4FA7C97ED7DD80B1AC1D99009FD (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_skeletonActions_mAD34C5C7F47FD4FA7C97ED7DD80B1AC1D99009FD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_skeletonActions_mAD34C5C7F47FD4FA7C97ED7DD80B1AC1D99009FD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3582));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3583));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3584));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3585));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3586));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3587));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3590));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3590));
	}

IL_0017:
	{
		// return setData.skeletonActions;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3588));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3591));
		NullCheck(L_2);
		SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* L_3 = SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3591));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3589));
		SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* L_4 = V_1;
		return L_4;
	}
}
// Valve.VR.ISteamVR_Action_Out[] Valve.VR.SteamVR_ActionSet::get_outActionArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* SteamVR_ActionSet_get_outActionArray_mC0550B0E6E1027097D6DD5D5876088959EF72072 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_outActionArray_mC0550B0E6E1027097D6DD5D5876088959EF72072_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_outActionArray_mC0550B0E6E1027097D6DD5D5876088959EF72072_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3592));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3593));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3594));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3595));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3596));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3597));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3600));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3600));
	}

IL_0017:
	{
		// return setData.outActionArray;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3598));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3601));
		NullCheck(L_2);
		ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* L_3 = SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3601));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3599));
		ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* L_4 = V_1;
		return L_4;
	}
}
// System.String Valve.VR.SteamVR_ActionSet::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_get_fullPath_m04E577C3FD515068729E2DB651CE8767995DC432 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_fullPath_m04E577C3FD515068729E2DB651CE8767995DC432_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_fullPath_m04E577C3FD515068729E2DB651CE8767995DC432_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3602));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3603));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3604));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3605));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3606));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3607));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3610));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3610));
	}

IL_0017:
	{
		// return setData.fullPath;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3608));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3611));
		NullCheck(L_2);
		String_t* L_3 = SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3611));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3609));
		String_t* L_4 = V_1;
		return L_4;
	}
}
// System.String Valve.VR.SteamVR_ActionSet::get_usage()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_get_usage_mB535DF8D539763EE2D97E92829825879BFF6DCD2 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_usage_mB535DF8D539763EE2D97E92829825879BFF6DCD2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_usage_mB535DF8D539763EE2D97E92829825879BFF6DCD2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3612));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3613));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3614));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3615));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3616));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3617));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3620));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3620));
	}

IL_0017:
	{
		// return setData.usage;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3618));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3621));
		NullCheck(L_2);
		String_t* L_3 = SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3621));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3619));
		String_t* L_4 = V_1;
		return L_4;
	}
}
// System.UInt64 Valve.VR.SteamVR_ActionSet::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_ActionSet_get_handle_m3C1592C47E16A579B14F77D84DE50B89BDB9405F (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_get_handle_m3C1592C47E16A579B14F77D84DE50B89BDB9405F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	uint64_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_get_handle_m3C1592C47E16A579B14F77D84DE50B89BDB9405F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3622));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3623));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3624));
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3625));
		bool L_0 = __this->get_initialized_2();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3626));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0017;
		}
	}
	{
		// Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3627));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3630));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3630));
	}

IL_0017:
	{
		// return setData.handle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3628));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3631));
		NullCheck(L_2);
		uint64_t L_3 = SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3631));
		V_1 = L_3;
		goto IL_0025;
	}

IL_0025:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3629));
		uint64_t L_4 = V_1;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet::PreInitialize(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_PreInitialize_m12C2199310C3984FF48A7D8A4C598D1F3C68F87C (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, String_t* ___newActionPath0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_PreInitialize_m12C2199310C3984FF48A7D8A4C598D1F3C68F87C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newActionPath0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_PreInitialize_m12C2199310C3984FF48A7D8A4C598D1F3C68F87C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3651));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3652));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3653));
		// actionSetPath = newActionPath;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3654));
		String_t* L_0 = ___newActionPath0;
		__this->set_actionSetPath_0(L_0);
		// setData = new SteamVR_ActionSet_Data();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3655));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3660));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_1 = (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 *)il2cpp_codegen_object_new(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Data__ctor_m812A76A6EE69B1EC1169664FE8943FB654017719(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3660));
		__this->set_setData_1(L_1);
		// setData.fullPath = actionSetPath;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3656));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		String_t* L_3 = __this->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3661));
		NullCheck(L_2);
		SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C_inline(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3661));
		// setData.PreInitialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3657));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_4 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3662));
		NullCheck(L_4);
		SteamVR_ActionSet_Data_PreInitialize_m87876D8B244F011424022EEC7ADF26A3BAD1E0B6(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3662));
		// initialized = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3658));
		__this->set_initialized_2((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3659));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet::FinishPreInitialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_FinishPreInitialize_m70B79F27A12FC273FC4F973BB36BC186FBC8364D (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_FinishPreInitialize_m70B79F27A12FC273FC4F973BB36BC186FBC8364D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_FinishPreInitialize_m70B79F27A12FC273FC4F973BB36BC186FBC8364D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3663));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3664));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3665));
		// setData.FinishPreInitialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3666));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3668));
		NullCheck(L_0);
		SteamVR_ActionSet_Data_FinishPreInitialize_m8C0EAC503979427BADE6B4BDC78F96FFD1313814(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3668));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3667));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Initialize_m4C0A7CCA08EA428ECBA226CDCA56752D02F2C7EA (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, bool ___createNew0, bool ___throwErrors1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Initialize_m4C0A7CCA08EA428ECBA226CDCA56752D02F2C7EA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___createNew0), (&___throwErrors1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Initialize_m4C0A7CCA08EA428ECBA226CDCA56752D02F2C7EA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3669));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3670));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3671));
		// if (createNew)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3672));
		bool L_0 = ___createNew0;
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3673));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0016;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3674));
		// setData.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3675));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3686));
		NullCheck(L_2);
		SteamVR_ActionSet_Data_Initialize_m0BE37476A9F4DCEA304B33032F3FABC598282A67(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3686));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3676));
		goto IL_0039;
	}

IL_0016:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3677));
		// setData = SteamVR_Input.GetActionSetDataFromPath(actionSetPath);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3678));
		String_t* L_3 = __this->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3687));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_4 = SteamVR_Input_GetActionSetDataFromPath_m5A334CDA6B889F2D636BF228BDB3EDEFCBA84ABF(L_3, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3687));
		__this->set_setData_1(L_4);
		// if (setData == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3679));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_5 = __this->get_setData_1();
		V_1 = (bool)((((RuntimeObject*)(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 *)L_5) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3680));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0038;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3681));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3682));
	}

IL_0038:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3683));
	}

IL_0039:
	{
		// initialized = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3684));
		__this->set_initialized_2((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3685));
		return;
	}
}
// System.String Valve.VR.SteamVR_ActionSet::GetPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_GetPath_mAF6DADB564441DA1A937E81E61A235008C75D124 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_GetPath_mAF6DADB564441DA1A937E81E61A235008C75D124_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_GetPath_mAF6DADB564441DA1A937E81E61A235008C75D124_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3688));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3689));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3690));
		// return actionSetPath;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3691));
		String_t* L_0 = __this->get_actionSetPath_0();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3692));
		String_t* L_1 = V_0;
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet::IsActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___source0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___source0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3693));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3694));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3695));
		// return setData.IsActive(source);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3696));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		int32_t L_1 = ___source0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3698));
		NullCheck(L_0);
		bool L_2 = SteamVR_ActionSet_Data_IsActive_mC6E31ADAB67DCCF82B2E27F64161BC66DC4DB25B(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3698));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3697));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_ActionSet::GetTimeLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_ActionSet_GetTimeLastChanged_mDE79600B7D30E830487C824CA58E5FDB6ADDDF91 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___source0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_GetTimeLastChanged_mDE79600B7D30E830487C824CA58E5FDB6ADDDF91_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___source0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_GetTimeLastChanged_mDE79600B7D30E830487C824CA58E5FDB6ADDDF91_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3699));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3700));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3701));
		// return setData.GetTimeLastChanged(source);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3702));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		int32_t L_1 = ___source0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3704));
		NullCheck(L_0);
		float L_2 = SteamVR_ActionSet_Data_GetTimeLastChanged_m5ECECC1C5DE2077B835B5BD2F7BE0876638EEF8F(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3704));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3703));
		float L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet::Activate(Valve.VR.SteamVR_Input_Sources,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___activateForSource0, int32_t ___priority1, bool ___disableAllOtherActionSets2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___activateForSource0), (&___priority1), (&___disableAllOtherActionSets2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Activate_m675A0B29BB6BBB783FEB8F1F1086037F16420509_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3705));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3706));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3707));
		// setData.Activate(activateForSource, priority, disableAllOtherActionSets);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3708));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		int32_t L_1 = ___activateForSource0;
		int32_t L_2 = ___priority1;
		bool L_3 = ___disableAllOtherActionSets2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3710));
		NullCheck(L_0);
		SteamVR_ActionSet_Data_Activate_m8C958814A91F7C665A0BFCAF67627BAAEC93B3AC(L_0, L_1, L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3710));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3709));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet::Deactivate(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___forSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___forSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3711));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3712));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3713));
		// setData.Deactivate(forSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3714));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		int32_t L_1 = ___forSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3716));
		NullCheck(L_0);
		SteamVR_ActionSet_Data_Deactivate_mE0A9AC1E44C88BE94147501C11CE88E193FCF627(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3716));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3715));
		return;
	}
}
// System.String Valve.VR.SteamVR_ActionSet::GetShortName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_GetShortName_mA622B5396AA3CB274F8290FD4C0DD1BF6504769E (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_GetShortName_mA622B5396AA3CB274F8290FD4C0DD1BF6504769E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_GetShortName_mA622B5396AA3CB274F8290FD4C0DD1BF6504769E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3717));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3718));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3719));
		// return setData.GetShortName();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3720));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3722));
		NullCheck(L_0);
		String_t* L_1 = SteamVR_ActionSet_Data_GetShortName_mDEEB621483F8E19D8AD132B2E0225CD2A2AF467D(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3722));
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3721));
		String_t* L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet::ShowBindingHints(Valve.VR.ISteamVR_Action_In)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_ShowBindingHints_mB909AC05EE8CDFDDC3378208BF53789A28508D7D (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, RuntimeObject* ___originToHighlight0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_ShowBindingHints_mB909AC05EE8CDFDDC3378208BF53789A28508D7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___originToHighlight0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_ShowBindingHints_mB909AC05EE8CDFDDC3378208BF53789A28508D7D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3723));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3724));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3725));
		// if (originToHighlight == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3726));
		RuntimeObject* L_0 = ___originToHighlight0;
		V_0 = (bool)((((RuntimeObject*)(RuntimeObject*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3727));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		// return SteamVR_Input.ShowBindingHints(this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3728));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3731));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		bool L_2 = SteamVR_Input_ShowBindingHints_mDC7A5EC06619FC1F857C88633AF521DCD4073052(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3731));
		V_1 = L_2;
		goto IL_001b;
	}

IL_0012:
	{
		// return SteamVR_Input.ShowBindingHints(originToHighlight);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3729));
		RuntimeObject* L_3 = ___originToHighlight0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3732));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		bool L_4 = SteamVR_Input_ShowBindingHints_mC7657D924D1B4FE258291214F7CAC53FC1D80FC6(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3732));
		V_1 = L_4;
		goto IL_001b;
	}

IL_001b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3730));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet::ReadRawSetActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_ReadRawSetActive_m161B1A01E1A47E416D34A1221B95214693E51952 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_ReadRawSetActive_m161B1A01E1A47E416D34A1221B95214693E51952_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_ReadRawSetActive_m161B1A01E1A47E416D34A1221B95214693E51952_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3734));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3735));
		// return setData.ReadRawSetActive(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3736));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3738));
		NullCheck(L_0);
		bool L_2 = SteamVR_ActionSet_Data_ReadRawSetActive_m891E7459F99CA50296CDA3B125BFD30A5354E885(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3738));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3737));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_ActionSet::ReadRawSetLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_ActionSet_ReadRawSetLastChanged_m91B3EC744644009BCF35304756E9521931E0716B (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_ReadRawSetLastChanged_m91B3EC744644009BCF35304756E9521931E0716B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_ReadRawSetLastChanged_m91B3EC744644009BCF35304756E9521931E0716B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3739));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3740));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3741));
		// return setData.ReadRawSetLastChanged(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3742));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3744));
		NullCheck(L_0);
		float L_2 = SteamVR_ActionSet_Data_ReadRawSetLastChanged_m919EB49DF19CF40FE2656A04DD3426CEBAFDB17F(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3744));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3743));
		float L_3 = V_0;
		return L_3;
	}
}
// System.Int32 Valve.VR.SteamVR_ActionSet::ReadRawSetPriority(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_ActionSet_ReadRawSetPriority_m58E0F9561136FBE76C799447547C14C1C4FB8476 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_ReadRawSetPriority_m58E0F9561136FBE76C799447547C14C1C4FB8476_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_ReadRawSetPriority_m58E0F9561136FBE76C799447547C14C1C4FB8476_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3745));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3746));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3747));
		// return setData.ReadRawSetPriority(inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3748));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3750));
		NullCheck(L_0);
		int32_t L_2 = SteamVR_ActionSet_Data_ReadRawSetPriority_mED5DD82308639337336BB89EAD040FC46E0063C4(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3750));
		V_0 = L_2;
		goto IL_0010;
	}

IL_0010:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3749));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// Valve.VR.SteamVR_ActionSet_Data Valve.VR.SteamVR_ActionSet::GetActionSetData()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3751));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3752));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3753));
		// return setData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3754));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		V_0 = L_0;
		goto IL_000a;
	}

IL_000a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3755));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_1 = V_0;
		return L_1;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet::Equals(Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_Equals_mFD436DEBDAA9D1FF4B19B80F16AB1F59D723D6B5 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___other0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Equals_mFD436DEBDAA9D1FF4B19B80F16AB1F59D723D6B5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___other0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Equals_mFD436DEBDAA9D1FF4B19B80F16AB1F59D723D6B5_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3772));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3773));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3774));
		// if (ReferenceEquals(null, other))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3775));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___other0;
		V_0 = (bool)((((RuntimeObject*)(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3776));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_000d;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3777));
		V_1 = (bool)0;
		goto IL_0021;
	}

IL_000d:
	{
		// return this.actionSetPath == other.actionSetPath;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3778));
		String_t* L_2 = __this->get_actionSetPath_0();
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = ___other0;
		NullCheck(L_3);
		String_t* L_4 = L_3->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3780));
		bool L_5 = String_op_Equality_m139F0E4195AE2F856019E63B241F36F016997FCE(L_2, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3780));
		V_1 = L_5;
		goto IL_0021;
	}

IL_0021:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3779));
		bool L_6 = V_1;
		return L_6;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet::Equals(System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_Equals_m33289198F04431CE9945A4B99A73206DE68F4110 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, RuntimeObject * ___other0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Equals_m33289198F04431CE9945A4B99A73206DE68F4110_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___other0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Equals_m33289198F04431CE9945A4B99A73206DE68F4110_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3781));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3782));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3783));
		// if (ReferenceEquals(null, other))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3784));
		RuntimeObject * L_0 = ___other0;
		V_0 = (bool)((((RuntimeObject*)(RuntimeObject *)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3785));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3786));
		// if (string.IsNullOrEmpty(this.actionSetPath)) //if we haven't set a path, say this action set is equal to null
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3787));
		String_t* L_2 = __this->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3799));
		bool L_3 = String_IsNullOrEmpty_m06A85A206AC2106D1982826C5665B9BD35324229(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3799));
		V_1 = L_3;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3788));
		bool L_4 = V_1;
		if (!L_4)
		{
			goto IL_001d;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3789));
		V_2 = (bool)1;
		goto IL_004f;
	}

IL_001d:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3790));
		V_2 = (bool)0;
		goto IL_004f;
	}

IL_0021:
	{
		// if (ReferenceEquals(this, other))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3791));
		RuntimeObject * L_5 = ___other0;
		V_3 = (bool)((((RuntimeObject*)(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)__this) == ((RuntimeObject*)(RuntimeObject *)L_5))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3792));
		bool L_6 = V_3;
		if (!L_6)
		{
			goto IL_002d;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3793));
		V_2 = (bool)1;
		goto IL_004f;
	}

IL_002d:
	{
		// if (other is SteamVR_ActionSet)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3794));
		RuntimeObject * L_7 = ___other0;
		V_4 = (bool)((!(((RuntimeObject*)(SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)((SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)IsInstClass((RuntimeObject*)L_7, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3795));
		bool L_8 = V_4;
		if (!L_8)
		{
			goto IL_004b;
		}
	}
	{
		// return this.Equals((SteamVR_ActionSet)other);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3796));
		RuntimeObject * L_9 = ___other0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3800));
		bool L_10 = SteamVR_ActionSet_Equals_mFD436DEBDAA9D1FF4B19B80F16AB1F59D723D6B5(__this, ((SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)CastclassClass((RuntimeObject*)L_9, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6_il2cpp_TypeInfo_var)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3800));
		V_2 = L_10;
		goto IL_004f;
	}

IL_004b:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3797));
		V_2 = (bool)0;
		goto IL_004f;
	}

IL_004f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3798));
		bool L_11 = V_2;
		return L_11;
	}
}
// System.Int32 Valve.VR.SteamVR_ActionSet::GetHashCode()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_ActionSet_GetHashCode_m9908CECA319994BE6D7C21E64B10472310E0B395 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_GetHashCode_m9908CECA319994BE6D7C21E64B10472310E0B395_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_GetHashCode_m9908CECA319994BE6D7C21E64B10472310E0B395_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3801));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3802));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3803));
		// if (actionSetPath == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3804));
		String_t* L_0 = __this->get_actionSetPath_0();
		V_0 = (bool)((((RuntimeObject*)(String_t*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3805));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0012;
		}
	}
	{
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3806));
		V_1 = 0;
		goto IL_0020;
	}

IL_0012:
	{
		// return actionSetPath.GetHashCode();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3807));
		String_t* L_2 = __this->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3809));
		NullCheck(L_2);
		int32_t L_3 = VirtFuncInvoker0< int32_t >::Invoke(2 /* System.Int32 System.Object::GetHashCode() */, L_2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3809));
		V_1 = L_3;
		goto IL_0020;
	}

IL_0020:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3808));
		int32_t L_4 = V_1;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet::op_Inequality(Valve.VR.SteamVR_ActionSet,Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set10, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set21, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___set10), (&___set21));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_op_Inequality_m3FAE077B46B4BF80F47322FC6DFB771C2EC48EB5_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3810));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3811));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3812));
		// return !(set1 == set2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3813));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___set10;
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_1 = ___set21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3815));
		bool L_2 = SteamVR_ActionSet_op_Equality_mE7F907A29CA5B03F5449D3B017572D85A7D7667E(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3815));
		V_0 = (bool)((((int32_t)L_2) == ((int32_t)0))? 1 : 0);
		goto IL_000e;
	}

IL_000e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3814));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet::op_Equality(Valve.VR.SteamVR_ActionSet,Valve.VR.SteamVR_ActionSet)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_op_Equality_mE7F907A29CA5B03F5449D3B017572D85A7D7667E (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set10, SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * ___set21, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_op_Equality_mE7F907A29CA5B03F5449D3B017572D85A7D7667E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___set10), (&___set21));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_op_Equality_mE7F907A29CA5B03F5449D3B017572D85A7D7667E_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3816));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3817));
	int32_t G_B4_0 = 0;
	int32_t G_B8_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3818));
		// bool set1null = (ReferenceEquals(null, set1) || string.IsNullOrEmpty(set1.actionSetPath) || set1.GetActionSetData() == null);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3819));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_0 = ___set10;
		if (!L_0)
		{
			goto IL_001c;
		}
	}
	{
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_1 = ___set10;
		NullCheck(L_1);
		String_t* L_2 = L_1->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3829));
		bool L_3 = String_IsNullOrEmpty_m06A85A206AC2106D1982826C5665B9BD35324229(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3829));
		if (L_3)
		{
			goto IL_001c;
		}
	}
	{
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_4 = ___set10;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3830));
		NullCheck(L_4);
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_5 = SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3830));
		G_B4_0 = ((((RuntimeObject*)(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 *)L_5) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		goto IL_001d;
	}

IL_001c:
	{
		G_B4_0 = 1;
	}

IL_001d:
	{
		V_0 = (bool)G_B4_0;
		// bool set2null = (ReferenceEquals(null, set2) || string.IsNullOrEmpty(set2.actionSetPath) || set2.GetActionSetData() == null);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3820));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_6 = ___set21;
		if (!L_6)
		{
			goto IL_0039;
		}
	}
	{
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_7 = ___set21;
		NullCheck(L_7);
		String_t* L_8 = L_7->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3831));
		bool L_9 = String_IsNullOrEmpty_m06A85A206AC2106D1982826C5665B9BD35324229(L_8, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3831));
		if (L_9)
		{
			goto IL_0039;
		}
	}
	{
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_10 = ___set21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3832));
		NullCheck(L_10);
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_11 = SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3832));
		G_B8_0 = ((((RuntimeObject*)(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 *)L_11) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		goto IL_003a;
	}

IL_0039:
	{
		G_B8_0 = 1;
	}

IL_003a:
	{
		V_1 = (bool)G_B8_0;
		// if (set1null && set2null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3821));
		bool L_12 = V_0;
		bool L_13 = V_1;
		V_2 = (bool)((int32_t)((int32_t)L_12&(int32_t)L_13));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3822));
		bool L_14 = V_2;
		if (!L_14)
		{
			goto IL_0046;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3823));
		V_3 = (bool)1;
		goto IL_0061;
	}

IL_0046:
	{
		// else if (set1null != set2null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3824));
		bool L_15 = V_0;
		bool L_16 = V_1;
		V_4 = (bool)((((int32_t)((((int32_t)L_15) == ((int32_t)L_16))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3825));
		bool L_17 = V_4;
		if (!L_17)
		{
			goto IL_0057;
		}
	}
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3826));
		V_3 = (bool)0;
		goto IL_0061;
	}

IL_0057:
	{
		// return set1.Equals(set2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3827));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_18 = ___set10;
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_19 = ___set21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3833));
		NullCheck(L_18);
		bool L_20 = SteamVR_ActionSet_Equals_mFD436DEBDAA9D1FF4B19B80F16AB1F59D723D6B5(L_18, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3833));
		V_3 = L_20;
		goto IL_0061;
	}

IL_0061:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3828));
		bool L_21 = V_3;
		return L_21;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m57517F475143B3FA3F8B76EFC37B2A8189882804 (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m57517F475143B3FA3F8B76EFC37B2A8189882804_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m57517F475143B3FA3F8B76EFC37B2A8189882804_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3834));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3835));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3836));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3837));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mBD177016456C229158B18513D6D42A73DC1D161D (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mBD177016456C229158B18513D6D42A73DC1D161D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_mBD177016456C229158B18513D6D42A73DC1D161D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3838));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3839));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3840));
		// if (setData != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3841));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_0 = __this->get_setData_1();
		V_0 = (bool)((!(((RuntimeObject*)(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 *)L_0) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3842));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_003e;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3843));
		// if (setData.fullPath != actionSetPath)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3844));
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_2 = __this->get_setData_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3854));
		NullCheck(L_2);
		String_t* L_3 = SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_inline(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3854));
		String_t* L_4 = __this->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3855));
		bool L_5 = String_op_Inequality_m0BD184A74F453A72376E81CC6CAEE2556B80493E(L_3, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3855));
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3845));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_003d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3846));
		// setData = SteamVR_Input.GetActionSetDataFromPath(actionSetPath);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3847));
		String_t* L_7 = __this->get_actionSetPath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3856));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_8 = SteamVR_Input_GetActionSetDataFromPath_m5A334CDA6B889F2D636BF228BDB3EDEFCBA84ABF(L_7, (bool)0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3856));
		__this->set_setData_1(L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3848));
	}

IL_003d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3849));
	}

IL_003e:
	{
		// if (initialized == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3850));
		bool L_9 = __this->get_initialized_2();
		V_2 = (bool)((((int32_t)L_9) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3851));
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_0054;
		}
	}
	{
		// Initialize(false, false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3852));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3857));
		VirtActionInvoker2< bool, bool >::Invoke(25 /* System.Void Valve.VR.SteamVR_ActionSet::Initialize(System.Boolean,System.Boolean) */, __this, (bool)0, (bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3857));
	}

IL_0054:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3853));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_ActionSet_Data::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data__ctor_m812A76A6EE69B1EC1169664FE8943FB654017719 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data__ctor_m812A76A6EE69B1EC1169664FE8943FB654017719_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data__ctor_m812A76A6EE69B1EC1169664FE8943FB654017719_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3858));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3859));
	{
		// protected bool[] rawSetActive = new bool[SteamVR_Input_Source.numSources];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3860));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		int32_t L_0 = ((SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var))->get_numSources_0();
		BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* L_1 = (BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040*)(BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040*)SZArrayNew(BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040_il2cpp_TypeInfo_var, (uint32_t)L_0);
		__this->set_rawSetActive_9(L_1);
		// protected float[] rawSetLastChanged = new float[SteamVR_Input_Source.numSources];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3861));
		int32_t L_2 = ((SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var))->get_numSources_0();
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = (SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5*)SZArrayNew(SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5_il2cpp_TypeInfo_var, (uint32_t)L_2);
		__this->set_rawSetLastChanged_10(L_3);
		// protected int[] rawSetPriority = new int[SteamVR_Input_Source.numSources];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3862));
		int32_t L_4 = ((SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var))->get_numSources_0();
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_5 = (Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83*)SZArrayNew(Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83_il2cpp_TypeInfo_var, (uint32_t)L_4);
		__this->set_rawSetPriority_11(L_5);
		// protected bool initialized = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3863));
		__this->set_initialized_12((bool)0);
		// public SteamVR_ActionSet_Data() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3864));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3867));
		Object__ctor_m925ECA5E85CA100E3FB86A4F9E15C120E9A184C0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3867));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3865));
		// public SteamVR_ActionSet_Data() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3866));
		return;
	}
}
// Valve.VR.SteamVR_Action[] Valve.VR.SteamVR_ActionSet_Data::get_allActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3868));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3869));
	{
		// public SteamVR_Action[] allActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3870));
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_0 = __this->get_U3CallActionsU3Ek__BackingField_0();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_allActions(Valve.VR.SteamVR_Action[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3871));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3872));
	{
		// public SteamVR_Action[] allActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3873));
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_0 = ___value0;
		__this->set_U3CallActionsU3Ek__BackingField_0(L_0);
		return;
	}
}
// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_ActionSet_Data::get_nonVisualInActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3874));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3875));
	{
		// public ISteamVR_Action_In[] nonVisualInActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3876));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_0 = __this->get_U3CnonVisualInActionsU3Ek__BackingField_1();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_nonVisualInActions(Valve.VR.ISteamVR_Action_In[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3877));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3878));
	{
		// public ISteamVR_Action_In[] nonVisualInActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3879));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_0 = ___value0;
		__this->set_U3CnonVisualInActionsU3Ek__BackingField_1(L_0);
		return;
	}
}
// Valve.VR.ISteamVR_Action_In[] Valve.VR.SteamVR_ActionSet_Data::get_visualActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3880));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3881));
	{
		// public ISteamVR_Action_In[] visualActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3882));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_0 = __this->get_U3CvisualActionsU3Ek__BackingField_2();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_visualActions(Valve.VR.ISteamVR_Action_In[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3883));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3884));
	{
		// public ISteamVR_Action_In[] visualActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3885));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_0 = ___value0;
		__this->set_U3CvisualActionsU3Ek__BackingField_2(L_0);
		return;
	}
}
// Valve.VR.SteamVR_Action_Pose[] Valve.VR.SteamVR_ActionSet_Data::get_poseActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3886));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3887));
	{
		// public SteamVR_Action_Pose[] poseActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3888));
		SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* L_0 = __this->get_U3CposeActionsU3Ek__BackingField_3();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_poseActions(Valve.VR.SteamVR_Action_Pose[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3889));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3890));
	{
		// public SteamVR_Action_Pose[] poseActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3891));
		SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* L_0 = ___value0;
		__this->set_U3CposeActionsU3Ek__BackingField_3(L_0);
		return;
	}
}
// Valve.VR.SteamVR_Action_Skeleton[] Valve.VR.SteamVR_ActionSet_Data::get_skeletonActions()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3892));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3893));
	{
		// public SteamVR_Action_Skeleton[] skeletonActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3894));
		SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* L_0 = __this->get_U3CskeletonActionsU3Ek__BackingField_4();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_skeletonActions(Valve.VR.SteamVR_Action_Skeleton[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3895));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3896));
	{
		// public SteamVR_Action_Skeleton[] skeletonActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3897));
		SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* L_0 = ___value0;
		__this->set_U3CskeletonActionsU3Ek__BackingField_4(L_0);
		return;
	}
}
// Valve.VR.ISteamVR_Action_Out[] Valve.VR.SteamVR_ActionSet_Data::get_outActionArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3898));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3899));
	{
		// public ISteamVR_Action_Out[] outActionArray { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3900));
		ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* L_0 = __this->get_U3CoutActionArrayU3Ek__BackingField_5();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_outActionArray(Valve.VR.ISteamVR_Action_Out[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3901));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3902));
	{
		// public ISteamVR_Action_Out[] outActionArray { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3903));
		ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* L_0 = ___value0;
		__this->set_U3CoutActionArrayU3Ek__BackingField_5(L_0);
		return;
	}
}
// System.String Valve.VR.SteamVR_ActionSet_Data::get_fullPath()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3904));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3905));
	{
		// public string fullPath { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3906));
		String_t* L_0 = __this->get_U3CfullPathU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_fullPath(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3907));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3908));
	{
		// public string fullPath { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3909));
		String_t* L_0 = ___value0;
		__this->set_U3CfullPathU3Ek__BackingField_6(L_0);
		return;
	}
}
// System.String Valve.VR.SteamVR_ActionSet_Data::get_usage()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3910));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3911));
	{
		// public string usage { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3912));
		String_t* L_0 = __this->get_U3CusageU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_usage(System.String)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_usage_mC3F7B583669D0E55F049F3D1022FF1707ABCD75F (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_usage_mC3F7B583669D0E55F049F3D1022FF1707ABCD75F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_usage_mC3F7B583669D0E55F049F3D1022FF1707ABCD75F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3913));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3914));
	{
		// public string usage { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3915));
		String_t* L_0 = ___value0;
		__this->set_U3CusageU3Ek__BackingField_7(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_ActionSet_Data::get_handle()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3916));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3917));
	{
		// public ulong handle { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3918));
		uint64_t L_0 = __this->get_U3ChandleU3Ek__BackingField_8();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::set_handle(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, uint64_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3919));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3920));
	{
		// public ulong handle { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3921));
		uint64_t L_0 = ___value0;
		__this->set_U3ChandleU3Ek__BackingField_8(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::PreInitialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_PreInitialize_m87876D8B244F011424022EEC7ADF26A3BAD1E0B6 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_PreInitialize_m87876D8B244F011424022EEC7ADF26A3BAD1E0B6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_PreInitialize_m87876D8B244F011424022EEC7ADF26A3BAD1E0B6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3922));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3923));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3924));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3925));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::FinishPreInitialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_FinishPreInitialize_m8C0EAC503979427BADE6B4BDC78F96FFD1313814 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_FinishPreInitialize_m8C0EAC503979427BADE6B4BDC78F96FFD1313814_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E * V_0 = NULL;
	List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * V_1 = NULL;
	List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * V_2 = NULL;
	List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D * V_3 = NULL;
	List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE * V_4 = NULL;
	List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 * V_5 = NULL;
	bool V_6 = false;
	int32_t V_7 = 0;
	SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * V_8 = NULL;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	bool V_14 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_7), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_FinishPreInitialize_m8C0EAC503979427BADE6B4BDC78F96FFD1313814_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3926));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3927));
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3928));
		// List<SteamVR_Action> allActionsList = new List<SteamVR_Action>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3929));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3985));
		List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E * L_0 = (List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E *)il2cpp_codegen_object_new(List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E_il2cpp_TypeInfo_var);
		List_1__ctor_m457F51332DF249D2915C9C74417863E1FFE39421(L_0, /*hidden argument*/List_1__ctor_m457F51332DF249D2915C9C74417863E1FFE39421_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3985));
		V_0 = L_0;
		// List<ISteamVR_Action_In> nonVisualInActionsList = new List<ISteamVR_Action_In>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3930));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3986));
		List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * L_1 = (List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 *)il2cpp_codegen_object_new(List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039_il2cpp_TypeInfo_var);
		List_1__ctor_m6DD1A135C8AAA0CABC4E324E43DDC01B8E5DA377(L_1, /*hidden argument*/List_1__ctor_m6DD1A135C8AAA0CABC4E324E43DDC01B8E5DA377_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3986));
		V_1 = L_1;
		// List<ISteamVR_Action_In> visualActionsList = new List<ISteamVR_Action_In>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3931));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3987));
		List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * L_2 = (List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 *)il2cpp_codegen_object_new(List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039_il2cpp_TypeInfo_var);
		List_1__ctor_m6DD1A135C8AAA0CABC4E324E43DDC01B8E5DA377(L_2, /*hidden argument*/List_1__ctor_m6DD1A135C8AAA0CABC4E324E43DDC01B8E5DA377_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3987));
		V_2 = L_2;
		// List<SteamVR_Action_Pose> poseActionsList = new List<SteamVR_Action_Pose>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3932));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3988));
		List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D * L_3 = (List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D *)il2cpp_codegen_object_new(List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D_il2cpp_TypeInfo_var);
		List_1__ctor_m7B9B03A716E37A20B0DEADEC320577C95FEF69EA(L_3, /*hidden argument*/List_1__ctor_m7B9B03A716E37A20B0DEADEC320577C95FEF69EA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3988));
		V_3 = L_3;
		// List<SteamVR_Action_Skeleton> skeletonActionsList = new List<SteamVR_Action_Skeleton>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3933));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3989));
		List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE * L_4 = (List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE *)il2cpp_codegen_object_new(List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE_il2cpp_TypeInfo_var);
		List_1__ctor_m4B6E82AE7F17F9C7BA593C6B9560A953DAF7669A(L_4, /*hidden argument*/List_1__ctor_m4B6E82AE7F17F9C7BA593C6B9560A953DAF7669A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3989));
		V_4 = L_4;
		// List<ISteamVR_Action_Out> outActionList = new List<ISteamVR_Action_Out>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3934));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3990));
		List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 * L_5 = (List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 *)il2cpp_codegen_object_new(List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00_il2cpp_TypeInfo_var);
		List_1__ctor_mDE47585A983559D5FF01B691252B7916A522D8BC(L_5, /*hidden argument*/List_1__ctor_mDE47585A983559D5FF01B691252B7916A522D8BC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3990));
		V_5 = L_5;
		// if (SteamVR_Input.actions == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3935));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_6 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actions_13();
		V_6 = (bool)((((RuntimeObject*)(SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB*)L_6) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3936));
		bool L_7 = V_6;
		if (!L_7)
		{
			goto IL_0046;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3937));
		// Debug.LogError("<b>[SteamVR Input]</b> Actions not initialized!");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3938));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3991));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(_stringLiteralE3B64D915824C645A785624AFF1FCD3F38554B93, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3991));
		// return;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3939));
		goto IL_01c7;
	}

IL_0046:
	{
		// for (int actionIndex = 0; actionIndex < SteamVR_Input.actions.Length; actionIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3940));
		V_7 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3941));
		goto IL_0163;
	}

IL_004e:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3942));
		// SteamVR_Action action = SteamVR_Input.actions[actionIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3943));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_8 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actions_13();
		int32_t L_9 = V_7;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		V_8 = L_11;
		// if (action.actionSet.GetActionSetData() == this)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3944));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_12 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3992));
		NullCheck(L_12);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_13 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3992));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3993));
		NullCheck(L_13);
		SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * L_14 = SteamVR_ActionSet_GetActionSetData_m0C1E7238EFD7AA8821629E6DD717A38D40684357(L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3993));
		V_9 = (bool)((((RuntimeObject*)(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 *)L_14) == ((RuntimeObject*)(SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 *)__this))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3945));
		bool L_15 = V_9;
		if (!L_15)
		{
			goto IL_015c;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3946));
		// allActionsList.Add(action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3947));
		List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E * L_16 = V_0;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_17 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3994));
		NullCheck(L_16);
		List_1_Add_m2F40A46649DE9F41DA5EFF00B1BE9E6398B8C230(L_16, L_17, /*hidden argument*/List_1_Add_m2F40A46649DE9F41DA5EFF00B1BE9E6398B8C230_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3994));
		// if (action is ISteamVR_Action_Boolean || action is ISteamVR_Action_Single || action is ISteamVR_Action_Vector2 || action is ISteamVR_Action_Vector3)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3948));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_18 = V_8;
		if (((RuntimeObject*)IsInst((RuntimeObject*)L_18, ISteamVR_Action_Boolean_t8CDD2F5A44326969F039DC858F8684734DA427D2_il2cpp_TypeInfo_var)))
		{
			goto IL_00a2;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_19 = V_8;
		if (((RuntimeObject*)IsInst((RuntimeObject*)L_19, ISteamVR_Action_Single_tD46A103FE251329BF5EBF9A7BEE38B6AE78A5562_il2cpp_TypeInfo_var)))
		{
			goto IL_00a2;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_20 = V_8;
		if (((RuntimeObject*)IsInst((RuntimeObject*)L_20, ISteamVR_Action_Vector2_t00FBC4A3D9043744BFC49EC00B5E2DBA6B7868D4_il2cpp_TypeInfo_var)))
		{
			goto IL_00a2;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_21 = V_8;
		G_B9_0 = ((!(((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_21, ISteamVR_Action_Vector3_t2FB9D59D2C266F6BF4E9FE14EBA4C0DD8B470647_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_00a3;
	}

IL_00a2:
	{
		G_B9_0 = 1;
	}

IL_00a3:
	{
		V_10 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3949));
		bool L_22 = V_10;
		if (!L_22)
		{
			goto IL_00be;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3950));
		// nonVisualInActionsList.Add((ISteamVR_Action_In)action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3951));
		List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * L_23 = V_1;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_24 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3995));
		NullCheck(L_23);
		List_1_Add_mF78B2826BBA103681C33B9B3324B40499714D270(L_23, ((RuntimeObject*)Castclass((RuntimeObject*)L_24, ISteamVR_Action_In_t087B31F77B97D0622A2D5B36D4D1EDAA86107884_il2cpp_TypeInfo_var)), /*hidden argument*/List_1_Add_mF78B2826BBA103681C33B9B3324B40499714D270_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3995));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3952));
		goto IL_015b;
	}

IL_00be:
	{
		// else if (action is SteamVR_Action_Pose)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3953));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_25 = V_8;
		V_11 = (bool)((!(((RuntimeObject*)(SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *)((SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *)IsInstClass((RuntimeObject*)L_25, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3954));
		bool L_26 = V_11;
		if (!L_26)
		{
			goto IL_00ee;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3955));
		// visualActionsList.Add((ISteamVR_Action_In)action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3956));
		List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * L_27 = V_2;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_28 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3996));
		NullCheck(L_27);
		List_1_Add_mF78B2826BBA103681C33B9B3324B40499714D270(L_27, ((RuntimeObject*)Castclass((RuntimeObject*)L_28, ISteamVR_Action_In_t087B31F77B97D0622A2D5B36D4D1EDAA86107884_il2cpp_TypeInfo_var)), /*hidden argument*/List_1_Add_mF78B2826BBA103681C33B9B3324B40499714D270_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3996));
		// poseActionsList.Add((SteamVR_Action_Pose)action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3957));
		List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D * L_29 = V_3;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_30 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3997));
		NullCheck(L_29);
		List_1_Add_mEF5A942248F62F6C41B60715025920933A09D025(L_29, ((SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *)CastclassClass((RuntimeObject*)L_30, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_il2cpp_TypeInfo_var)), /*hidden argument*/List_1_Add_mEF5A942248F62F6C41B60715025920933A09D025_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3997));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3958));
		goto IL_015b;
	}

IL_00ee:
	{
		// else if (action is SteamVR_Action_Skeleton)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3959));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_31 = V_8;
		V_12 = (bool)((!(((RuntimeObject*)(SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *)((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *)IsInstClass((RuntimeObject*)L_31, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3960));
		bool L_32 = V_12;
		if (!L_32)
		{
			goto IL_011f;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3961));
		// visualActionsList.Add((ISteamVR_Action_In)action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3962));
		List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * L_33 = V_2;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_34 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3998));
		NullCheck(L_33);
		List_1_Add_mF78B2826BBA103681C33B9B3324B40499714D270(L_33, ((RuntimeObject*)Castclass((RuntimeObject*)L_34, ISteamVR_Action_In_t087B31F77B97D0622A2D5B36D4D1EDAA86107884_il2cpp_TypeInfo_var)), /*hidden argument*/List_1_Add_mF78B2826BBA103681C33B9B3324B40499714D270_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3998));
		// skeletonActionsList.Add((SteamVR_Action_Skeleton)action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3963));
		List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE * L_35 = V_4;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_36 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3999));
		NullCheck(L_35);
		List_1_Add_mDF2F700986FF96334AB4BDF4A6C59B21F5D363BD(L_35, ((SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504 *)CastclassClass((RuntimeObject*)L_36, SteamVR_Action_Skeleton_t7E7D4C52B0F7C916A35C6CE369BDDA563C478504_il2cpp_TypeInfo_var)), /*hidden argument*/List_1_Add_mDF2F700986FF96334AB4BDF4A6C59B21F5D363BD_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3999));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3964));
		goto IL_015b;
	}

IL_011f:
	{
		// else if (action is ISteamVR_Action_Out)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3965));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_37 = V_8;
		V_13 = (bool)((!(((RuntimeObject*)(RuntimeObject*)((RuntimeObject*)IsInst((RuntimeObject*)L_37, ISteamVR_Action_Out_t7D4A27346C161DD4EB2C2749A80AA06D9E728D33_il2cpp_TypeInfo_var))) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3966));
		bool L_38 = V_13;
		if (!L_38)
		{
			goto IL_0142;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3967));
		// outActionList.Add((ISteamVR_Action_Out)action);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3968));
		List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 * L_39 = V_5;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_40 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4000));
		NullCheck(L_39);
		List_1_Add_mE2CD0AD29CD6CE0EEA987C0060B8888D7BBA7D97(L_39, ((RuntimeObject*)Castclass((RuntimeObject*)L_40, ISteamVR_Action_Out_t7D4A27346C161DD4EB2C2749A80AA06D9E728D33_il2cpp_TypeInfo_var)), /*hidden argument*/List_1_Add_mE2CD0AD29CD6CE0EEA987C0060B8888D7BBA7D97_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4000));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3969));
		goto IL_015b;
	}

IL_0142:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3970));
		// Debug.LogError("<b>[SteamVR Input]</b> Action doesn't implement known interface: " + action.fullPath);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3971));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_41 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4001));
		NullCheck(L_41);
		String_t* L_42 = VirtFuncInvoker0< String_t* >::Invoke(17 /* System.String Valve.VR.SteamVR_Action::get_fullPath() */, L_41);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4001));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4002));
		String_t* L_43 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteral23F9C830C2F7B5EEA2CFEF2E6227481A1E13ED72, L_42, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4002));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4003));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_43, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4003));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3972));
	}

IL_015b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3973));
	}

IL_015c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3974));
		// for (int actionIndex = 0; actionIndex < SteamVR_Input.actions.Length; actionIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3975));
		int32_t L_44 = V_7;
		V_7 = ((int32_t)il2cpp_codegen_add((int32_t)L_44, (int32_t)1));
	}

IL_0163:
	{
		// for (int actionIndex = 0; actionIndex < SteamVR_Input.actions.Length; actionIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3976));
		int32_t L_45 = V_7;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_46 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actions_13();
		NullCheck(L_46);
		V_14 = (bool)((((int32_t)L_45) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_46)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3977));
		bool L_47 = V_14;
		if (L_47)
		{
			goto IL_004e;
		}
	}
	{
		// allActions = allActionsList.ToArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3978));
		List_1_t2BD73E4F1F9FBADE4D23AE7C9FE3BE494639D40E * L_48 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4004));
		NullCheck(L_48);
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_49 = List_1_ToArray_m2BDB1565BA0CC1BD90519A604819C49271EBF994(L_48, /*hidden argument*/List_1_ToArray_m2BDB1565BA0CC1BD90519A604819C49271EBF994_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4004));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4005));
		SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C_inline(__this, L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4005));
		// nonVisualInActions = nonVisualInActionsList.ToArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3979));
		List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * L_50 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4006));
		NullCheck(L_50);
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_51 = List_1_ToArray_m470F0A969BF075D357A86483EAE70044615743A9(L_50, /*hidden argument*/List_1_ToArray_m470F0A969BF075D357A86483EAE70044615743A9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4006));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4007));
		SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A_inline(__this, L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4007));
		// visualActions = visualActionsList.ToArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3980));
		List_1_tEB7F694E68D5931006BDC58AA9F81BA8303D9039 * L_52 = V_2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4008));
		NullCheck(L_52);
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_53 = List_1_ToArray_m470F0A969BF075D357A86483EAE70044615743A9(L_52, /*hidden argument*/List_1_ToArray_m470F0A969BF075D357A86483EAE70044615743A9_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4008));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4009));
		SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1_inline(__this, L_53, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4009));
		// poseActions = poseActionsList.ToArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3981));
		List_1_t0352E265383E0E0BCC8D445620E03B8FE91CF55D * L_54 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4010));
		NullCheck(L_54);
		SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* L_55 = List_1_ToArray_mAD65CA979E887314BE09D9F86956A71F4DD0C63D(L_54, /*hidden argument*/List_1_ToArray_mAD65CA979E887314BE09D9F86956A71F4DD0C63D_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4010));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4011));
		SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251_inline(__this, L_55, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4011));
		// skeletonActions = skeletonActionsList.ToArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3982));
		List_1_tB74EC5A1FB0A15FB80BB32F217B0C103BF1D14BE * L_56 = V_4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4012));
		NullCheck(L_56);
		SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* L_57 = List_1_ToArray_mC869178ED852E7FAD653B847FFD1D68B7E3442AC(L_56, /*hidden argument*/List_1_ToArray_mC869178ED852E7FAD653B847FFD1D68B7E3442AC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4012));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4013));
		SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D_inline(__this, L_57, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4013));
		// outActionArray = outActionList.ToArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3983));
		List_1_tE467E90EADE7209C4DB5039F92D407E2DD8B6E00 * L_58 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4014));
		NullCheck(L_58);
		ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* L_59 = List_1_ToArray_m1DEF39891430F5006DACED95FF5635E20E5383AB(L_58, /*hidden argument*/List_1_ToArray_m1DEF39891430F5006DACED95FF5635E20E5383AB_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4014));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4015));
		SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8_inline(__this, L_59, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4015));
	}

IL_01c7:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3984));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_Initialize_m0BE37476A9F4DCEA304B33032F3FABC598282A67 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_Initialize_m0BE37476A9F4DCEA304B33032F3FABC598282A67_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	int32_t V_1 = 0;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_Initialize_m0BE37476A9F4DCEA304B33032F3FABC598282A67_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4016));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4017));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4018));
		// ulong newHandle = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4019));
		V_0 = (((int64_t)((int64_t)0)));
		// EVRInputError err = OpenVR.Input.GetActionSetHandle(fullPath.ToLower(), ref newHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4020));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4027));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4027));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4028));
		String_t* L_1 = SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4028));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4029));
		NullCheck(L_1);
		String_t* L_2 = String_ToLower_m5287204D93C9DDC4DF84581ADD756D0FDE2BA5A8(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4029));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4030));
		NullCheck(L_0);
		int32_t L_3 = CVRInput_GetActionSetHandle_m2901A740E07DD4A7633A45B13E106A20E88FE5BD(L_0, L_2, (uint64_t*)(&V_0), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4030));
		V_1 = L_3;
		// handle = newHandle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4021));
		uint64_t L_4 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4031));
		SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B_inline(__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4031));
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4022));
		int32_t L_5 = V_1;
		V_2 = (bool)((!(((uint32_t)L_5) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4023));
		bool L_6 = V_2;
		if (!L_6)
		{
			goto IL_0054;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetActionSetHandle (" + fullPath + ") error: " + err.ToString());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4024));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4032));
		String_t* L_7 = SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4032));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4033));
		RuntimeObject * L_8 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_8);
		String_t* L_9 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_8);
		V_1 = *(int32_t*)UnBox(L_8);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4033));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4034));
		String_t* L_10 = String_Concat_mDD2E38332DED3A8C088D38D78A0E0BEB5091DA64(_stringLiteral1FD9E143C289F97C9834DDDBFD3CAA4FF064024F, L_7, _stringLiteral82053ECBCAD6503F26FE33F5976A1604F67CDD45, L_9, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4034));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4035));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4035));
	}

IL_0054:
	{
		// initialized = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4025));
		__this->set_initialized_12((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4026));
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet_Data::IsActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_Data_IsActive_mC6E31ADAB67DCCF82B2E27F64161BC66DC4DB25B (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___source0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_IsActive_mC6E31ADAB67DCCF82B2E27F64161BC66DC4DB25B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___source0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_IsActive_mC6E31ADAB67DCCF82B2E27F64161BC66DC4DB25B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4036));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4037));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4038));
		// int sourceIndex = (int)source;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4039));
		int32_t L_0 = ___source0;
		V_0 = L_0;
		// if (initialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4040));
		bool L_1 = __this->get_initialized_12();
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4041));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_0025;
		}
	}
	{
		// return rawSetActive[sourceIndex] || rawSetActive[0];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4042));
		BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* L_3 = __this->get_rawSetActive_9();
		int32_t L_4 = V_0;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		uint8_t L_6 = (uint8_t)(L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		if (L_6)
		{
			goto IL_0021;
		}
	}
	{
		BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* L_7 = __this->get_rawSetActive_9();
		NullCheck(L_7);
		int32_t L_8 = 0;
		uint8_t L_9 = (uint8_t)(L_7)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		G_B4_0 = ((int32_t)(L_9));
		goto IL_0022;
	}

IL_0021:
	{
		G_B4_0 = 1;
	}

IL_0022:
	{
		V_2 = (bool)G_B4_0;
		goto IL_0029;
	}

IL_0025:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4043));
		V_2 = (bool)0;
		goto IL_0029;
	}

IL_0029:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4044));
		bool L_10 = V_2;
		return L_10;
	}
}
// System.Single Valve.VR.SteamVR_ActionSet_Data::GetTimeLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_ActionSet_Data_GetTimeLastChanged_m5ECECC1C5DE2077B835B5BD2F7BE0876638EEF8F (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___source0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_GetTimeLastChanged_m5ECECC1C5DE2077B835B5BD2F7BE0876638EEF8F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	float V_2 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___source0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_GetTimeLastChanged_m5ECECC1C5DE2077B835B5BD2F7BE0876638EEF8F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4046));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4047));
		// int sourceIndex = (int)source;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4048));
		int32_t L_0 = ___source0;
		V_0 = L_0;
		// if (initialized)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4049));
		bool L_1 = __this->get_initialized_12();
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4050));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_0018;
		}
	}
	{
		// return rawSetLastChanged[sourceIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4051));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_3 = __this->get_rawSetLastChanged_10();
		int32_t L_4 = V_0;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		float L_6 = (L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_2 = L_6;
		goto IL_0020;
	}

IL_0018:
	{
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4052));
		V_2 = (0.0f);
		goto IL_0020;
	}

IL_0020:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4053));
		float L_7 = V_2;
		return L_7;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::Activate(Valve.VR.SteamVR_Input_Sources,System.Int32,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_Activate_m8C958814A91F7C665A0BFCAF67627BAAEC93B3AC (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___activateForSource0, int32_t ___priority1, bool ___disableAllOtherActionSets2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_Activate_m8C958814A91F7C665A0BFCAF67627BAAEC93B3AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___activateForSource0), (&___priority1), (&___disableAllOtherActionSets2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_Activate_m8C958814A91F7C665A0BFCAF67627BAAEC93B3AC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4054));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4055));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4056));
		// int sourceIndex = (int)activateForSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4057));
		int32_t L_0 = ___activateForSource0;
		V_0 = L_0;
		// if (disableAllOtherActionSets)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4058));
		bool L_1 = ___disableAllOtherActionSets2;
		V_1 = L_1;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4059));
		bool L_2 = V_1;
		if (!L_2)
		{
			goto IL_000e;
		}
	}
	{
		// SteamVR_ActionSet_Manager.DisableAllActionSets();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4060));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4076));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Manager_DisableAllActionSets_m12EB6122FBA645AB44644A2D46785CEBB3FB3B35(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4076));
	}

IL_000e:
	{
		// if (rawSetActive[sourceIndex] == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4061));
		BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* L_3 = __this->get_rawSetActive_9();
		int32_t L_4 = V_0;
		NullCheck(L_3);
		int32_t L_5 = L_4;
		uint8_t L_6 = (uint8_t)(L_3)->GetAt(static_cast<il2cpp_array_size_t>(L_5));
		V_2 = (bool)((((int32_t)L_6) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4062));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_003b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4063));
		// rawSetActive[sourceIndex] = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4064));
		BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* L_8 = __this->get_rawSetActive_9();
		int32_t L_9 = V_0;
		NullCheck(L_8);
		(L_8)->SetAt(static_cast<il2cpp_array_size_t>(L_9), (bool)1);
		// SteamVR_ActionSet_Manager.SetChanged();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4065));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4077));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4077));
		// rawSetLastChanged[sourceIndex] = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4066));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_10 = __this->get_rawSetLastChanged_10();
		int32_t L_11 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4078));
		float L_12 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4078));
		NullCheck(L_10);
		(L_10)->SetAt(static_cast<il2cpp_array_size_t>(L_11), (float)L_12);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4067));
	}

IL_003b:
	{
		// if (rawSetPriority[sourceIndex] != priority)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4068));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_13 = __this->get_rawSetPriority_11();
		int32_t L_14 = V_0;
		NullCheck(L_13);
		int32_t L_15 = L_14;
		int32_t L_16 = (L_13)->GetAt(static_cast<il2cpp_array_size_t>(L_15));
		int32_t L_17 = ___priority1;
		V_3 = (bool)((((int32_t)((((int32_t)L_16) == ((int32_t)L_17))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4069));
		bool L_18 = V_3;
		if (!L_18)
		{
			goto IL_006b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4070));
		// rawSetPriority[sourceIndex] = priority;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4071));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_19 = __this->get_rawSetPriority_11();
		int32_t L_20 = V_0;
		int32_t L_21 = ___priority1;
		NullCheck(L_19);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(L_20), (int32_t)L_21);
		// SteamVR_ActionSet_Manager.SetChanged();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4072));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4079));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4079));
		// rawSetLastChanged[sourceIndex] = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4073));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_22 = __this->get_rawSetLastChanged_10();
		int32_t L_23 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4080));
		float L_24 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4080));
		NullCheck(L_22);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(L_23), (float)L_24);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4074));
	}

IL_006b:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4075));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Data::Deactivate(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_Deactivate_mE0A9AC1E44C88BE94147501C11CE88E193FCF627 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___forSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_Deactivate_mE0A9AC1E44C88BE94147501C11CE88E193FCF627_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___forSource0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_Deactivate_mE0A9AC1E44C88BE94147501C11CE88E193FCF627_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4081));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4082));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4083));
		// int sourceIndex = (int)forSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4084));
		int32_t L_0 = ___forSource0;
		V_0 = L_0;
		// if (rawSetActive[sourceIndex] != false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4085));
		BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* L_1 = __this->get_rawSetActive_9();
		int32_t L_2 = V_0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		uint8_t L_4 = (uint8_t)(L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_1 = (bool)L_4;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4086));
		bool L_5 = V_1;
		if (!L_5)
		{
			goto IL_0024;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4087));
		// rawSetLastChanged[sourceIndex] = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4088));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_6 = __this->get_rawSetLastChanged_10();
		int32_t L_7 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4094));
		float L_8 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4094));
		NullCheck(L_6);
		(L_6)->SetAt(static_cast<il2cpp_array_size_t>(L_7), (float)L_8);
		// SteamVR_ActionSet_Manager.SetChanged();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4089));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4095));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4095));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4090));
	}

IL_0024:
	{
		// rawSetActive[sourceIndex] = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4091));
		BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* L_9 = __this->get_rawSetActive_9();
		int32_t L_10 = V_0;
		NullCheck(L_9);
		(L_9)->SetAt(static_cast<il2cpp_array_size_t>(L_10), (bool)0);
		// rawSetPriority[sourceIndex] = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4092));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_11 = __this->get_rawSetPriority_11();
		int32_t L_12 = V_0;
		NullCheck(L_11);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(L_12), (int32_t)0);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4093));
		return;
	}
}
// System.String Valve.VR.SteamVR_ActionSet_Data::GetShortName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_Data_GetShortName_mDEEB621483F8E19D8AD132B2E0225CD2A2AF467D (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_GetShortName_mDEEB621483F8E19D8AD132B2E0225CD2A2AF467D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_GetShortName_mDEEB621483F8E19D8AD132B2E0225CD2A2AF467D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4096));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4097));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4098));
		// if (cachedShortName == null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4099));
		String_t* L_0 = __this->get_cachedShortName_13();
		V_0 = (bool)((((RuntimeObject*)(String_t*)L_0) == ((RuntimeObject*)(RuntimeObject *)NULL))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4100));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0021;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4101));
		// cachedShortName = SteamVR_Input_ActionFile.GetShortName(fullPath);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4102));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4106));
		String_t* L_2 = SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4106));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4107));
		String_t* L_3 = SteamVR_Input_ActionFile_GetShortName_m2DBB3F38D27A42BC7D4C9A9228FF8407334D6059(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4107));
		__this->set_cachedShortName_13(L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4103));
	}

IL_0021:
	{
		// return cachedShortName;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4104));
		String_t* L_4 = __this->get_cachedShortName_13();
		V_1 = L_4;
		goto IL_002a;
	}

IL_002a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4105));
		String_t* L_5 = V_1;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_ActionSet_Data::ReadRawSetActive(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_ActionSet_Data_ReadRawSetActive_m891E7459F99CA50296CDA3B125BFD30A5354E885 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_ReadRawSetActive_m891E7459F99CA50296CDA3B125BFD30A5354E885_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_ReadRawSetActive_m891E7459F99CA50296CDA3B125BFD30A5354E885_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4108));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4109));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4110));
		// int sourceIndex = (int)inputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4111));
		int32_t L_0 = ___inputSource0;
		V_0 = L_0;
		// return rawSetActive[sourceIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4112));
		BooleanU5BU5D_t192C7579715690E25BD5EFED47F3E0FC9DCB2040* L_1 = __this->get_rawSetActive_9();
		int32_t L_2 = V_0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		uint8_t L_4 = (uint8_t)(L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_1 = (bool)L_4;
		goto IL_000e;
	}

IL_000e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4113));
		bool L_5 = V_1;
		return L_5;
	}
}
// System.Single Valve.VR.SteamVR_ActionSet_Data::ReadRawSetLastChanged(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_ActionSet_Data_ReadRawSetLastChanged_m919EB49DF19CF40FE2656A04DD3426CEBAFDB17F (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_ReadRawSetLastChanged_m919EB49DF19CF40FE2656A04DD3426CEBAFDB17F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_ReadRawSetLastChanged_m919EB49DF19CF40FE2656A04DD3426CEBAFDB17F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4114));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4115));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4116));
		// int sourceIndex = (int)inputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4117));
		int32_t L_0 = ___inputSource0;
		V_0 = L_0;
		// return rawSetLastChanged[sourceIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4118));
		SingleU5BU5D_tA7139B7CAA40EAEF9178E2C386C8A5993754FDD5* L_1 = __this->get_rawSetLastChanged_10();
		int32_t L_2 = V_0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		float L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_1 = L_4;
		goto IL_000e;
	}

IL_000e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4119));
		float L_5 = V_1;
		return L_5;
	}
}
// System.Int32 Valve.VR.SteamVR_ActionSet_Data::ReadRawSetPriority(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_ActionSet_Data_ReadRawSetPriority_mED5DD82308639337336BB89EAD040FC46E0063C4 (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_ReadRawSetPriority_mED5DD82308639337336BB89EAD040FC46E0063C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	int32_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_ReadRawSetPriority_mED5DD82308639337336BB89EAD040FC46E0063C4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4120));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4121));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4122));
		// int sourceIndex = (int)inputSource;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4123));
		int32_t L_0 = ___inputSource0;
		V_0 = L_0;
		// return rawSetPriority[sourceIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4124));
		Int32U5BU5D_t2B9E4FDDDB9F0A00EC0AC631BA2DA915EB1ECF83* L_1 = __this->get_rawSetPriority_11();
		int32_t L_2 = V_0;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		int32_t L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_1 = L_4;
		goto IL_000e;
	}

IL_000e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4125));
		int32_t L_5 = V_1;
		return L_5;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_ActionSet_Manager::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_Initialize_m5B739027E6B67DDDE636C29896058342FA235D7F (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Manager_Initialize_m5B739027E6B67DDDE636C29896058342FA235D7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Manager_Initialize_m5B739027E6B67DDDE636C29896058342FA235D7F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4126));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4127));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4128));
		// activeActionSetSize = (uint)(Marshal.SizeOf(typeof(VRActiveActionSet_t)));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4129));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_0 = { reinterpret_cast<intptr_t> (VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4131));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_1 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4131));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4132));
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_2 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4132));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->set_activeActionSetSize_1(L_2);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4130));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Manager::DisableAllActionSets()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_DisableAllActionSets_m12EB6122FBA645AB44644A2D46785CEBB3FB3B35 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Manager_DisableAllActionSets_m12EB6122FBA645AB44644A2D46785CEBB3FB3B35_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Manager_DisableAllActionSets_m12EB6122FBA645AB44644A2D46785CEBB3FB3B35_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4133));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4134));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4135));
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4136));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4137));
		goto IL_0035;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4138));
		// SteamVR_Input.actionSets[actionSetIndex].Deactivate(SteamVR_Input_Sources.Any);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4139));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* L_0 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actionSets_12();
		int32_t L_1 = V_0;
		NullCheck(L_0);
		int32_t L_2 = L_1;
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_2));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4147));
		NullCheck(L_3);
		SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021(L_3, 0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4147));
		// SteamVR_Input.actionSets[actionSetIndex].Deactivate(SteamVR_Input_Sources.LeftHand);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4140));
		SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* L_4 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actionSets_12();
		int32_t L_5 = V_0;
		NullCheck(L_4);
		int32_t L_6 = L_5;
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_7 = (L_4)->GetAt(static_cast<il2cpp_array_size_t>(L_6));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4148));
		NullCheck(L_7);
		SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021(L_7, 1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4148));
		// SteamVR_Input.actionSets[actionSetIndex].Deactivate(SteamVR_Input_Sources.RightHand);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4141));
		SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* L_8 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actionSets_12();
		int32_t L_9 = V_0;
		NullCheck(L_8);
		int32_t L_10 = L_9;
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_11 = (L_8)->GetAt(static_cast<il2cpp_array_size_t>(L_10));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4149));
		NullCheck(L_11);
		SteamVR_ActionSet_Deactivate_mC05C9A9355C257755030C58042CB9EFC7104F021(L_11, 2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4149));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4142));
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4143));
		int32_t L_12 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_12, (int32_t)1));
	}

IL_0035:
	{
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4144));
		int32_t L_13 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* L_14 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actionSets_12();
		NullCheck(L_14);
		V_1 = (bool)((((int32_t)L_13) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_14)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4145));
		bool L_15 = V_1;
		if (L_15)
		{
			goto IL_0005;
		}
	}
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4146));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Manager::UpdateActionStates(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_UpdateActionStates_m6F0D76FF654C97F1700EBBB1D6E00A7FEBE426AF (bool ___force0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Manager_UpdateActionStates_m6F0D76FF654C97F1700EBBB1D6E00A7FEBE426AF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	int32_t V_4 = 0;
	bool V_5 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___force0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_4));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Manager_UpdateActionStates_m6F0D76FF654C97F1700EBBB1D6E00A7FEBE426AF_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4150));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4151));
	int32_t G_B3_0 = 0;
	int32_t G_B9_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4152));
		// if (force || Time.frameCount != lastFrameUpdated)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4153));
		bool L_0 = ___force0;
		if (L_0)
		{
			goto IL_0015;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4178));
		int32_t L_1 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4178));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		int32_t L_2 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_lastFrameUpdated_3();
		G_B3_0 = ((((int32_t)((((int32_t)L_1) == ((int32_t)L_2))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0016;
	}

IL_0015:
	{
		G_B3_0 = 1;
	}

IL_0016:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4154));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_00a3;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4155));
		// lastFrameUpdated = Time.frameCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4156));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4179));
		int32_t L_4 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4179));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->set_lastFrameUpdated_3(L_4);
		// if (changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4157));
		bool L_5 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_changed_2();
		V_1 = L_5;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4158));
		bool L_6 = V_1;
		if (!L_6)
		{
			goto IL_0039;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4159));
		// UpdateActionSetsArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4160));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4180));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Manager_UpdateActionSetsArray_m5B38E7C7984AA6B00A0D53678600DA349B88D4B3(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4180));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4161));
	}

IL_0039:
	{
		// if (rawActiveActionSetArray != null && rawActiveActionSetArray.Length > 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4162));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* L_7 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_rawActiveActionSetArray_0();
		if (!L_7)
		{
			goto IL_004b;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* L_8 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_rawActiveActionSetArray_0();
		NullCheck(L_8);
		G_B9_0 = ((!(((uint32_t)(((RuntimeArray*)L_8)->max_length)) <= ((uint32_t)0)))? 1 : 0);
		goto IL_004c;
	}

IL_004b:
	{
		G_B9_0 = 0;
	}

IL_004c:
	{
		V_2 = (bool)G_B9_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4163));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_00a0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4164));
		// if (OpenVR.Input != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4165));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4181));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_10 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4181));
		V_3 = (bool)((!(((RuntimeObject*)(CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B *)L_10) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4166));
		bool L_11 = V_3;
		if (!L_11)
		{
			goto IL_009d;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4167));
		// EVRInputError err = OpenVR.Input.UpdateActionState(rawActiveActionSetArray, activeActionSetSize);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4168));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4182));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_12 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4182));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* L_13 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_rawActiveActionSetArray_0();
		uint32_t L_14 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_activeActionSetSize_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4183));
		NullCheck(L_12);
		int32_t L_15 = CVRInput_UpdateActionState_m9C4DC24DE1B68DF8804DA117F4CF7FB4C14807CB(L_12, L_13, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4183));
		V_4 = L_15;
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4169));
		int32_t L_16 = V_4;
		V_5 = (bool)((!(((uint32_t)L_16) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4170));
		bool L_17 = V_5;
		if (!L_17)
		{
			goto IL_009c;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> UpdateActionState error: " + err.ToString());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4171));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4184));
		RuntimeObject * L_18 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_4));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_4 = *(int32_t*)UnBox(L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4184));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4185));
		String_t* L_20 = String_Concat_mB78D0094592718DA6D5DB6C712A9C225631666BE(_stringLiteral835969BE246438C0C1F94252E3DAA388ABE21BBE, L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4185));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4186));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4186));
	}

IL_009c:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4172));
	}

IL_009d:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4173));
		goto IL_00a2;
	}

IL_00a0:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4174));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4175));
	}

IL_00a2:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4176));
	}

IL_00a3:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4177));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Manager::SetChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Manager_SetChanged_m4E335C623F087D80CC8D5B43AFC45989A0CC1DBD_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4187));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4188));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4189));
		// changed = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4190));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->set_changed_2((bool)1);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4191));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Manager::UpdateActionSetsArray()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_UpdateActionSetsArray_m5B38E7C7984AA6B00A0D53678600DA349B88D4B3 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Manager_UpdateActionSetsArray_m5B38E7C7984AA6B00A0D53678600DA349B88D4B3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * V_0 = NULL;
	SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* V_1 = NULL;
	int32_t V_2 = 0;
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * V_3 = NULL;
	int32_t V_4 = 0;
	int32_t V_5 = 0;
	bool V_6 = false;
	VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  V_7;
	memset((&V_7), 0, sizeof(V_7));
	int32_t V_8 = 0;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	bool V_12 = false;
	bool V_13 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2), (&V_3), (&V_4), (&V_5), (&V_7), (&V_8));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Manager_UpdateActionSetsArray_m5B38E7C7984AA6B00A0D53678600DA349B88D4B3_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4192));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4193));
	int32_t G_B16_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4194));
		// List<VRActiveActionSet_t> activeActionSetsList = new List<VRActiveActionSet_t>();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4195));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4239));
		List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * L_0 = (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA *)il2cpp_codegen_object_new(List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA_il2cpp_TypeInfo_var);
		List_1__ctor_mF06B82312E78C159AEDF13A8DD791208649F24D8(L_0, /*hidden argument*/List_1__ctor_mF06B82312E78C159AEDF13A8DD791208649F24D8_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4239));
		V_0 = L_0;
		// SteamVR_Input_Sources[] sources = SteamVR_Input_Source.GetAllSources();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4196));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4240));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_1 = SteamVR_Input_Source_GetAllSources_m3FEDAE791D389B6ED4E1A7665B1F6381780C8352(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4240));
		V_1 = L_1;
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4197));
		V_2 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4198));
		goto IL_00d3;
	}

IL_0014:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4199));
		// SteamVR_ActionSet set = SteamVR_Input.actionSets[actionSetIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4200));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* L_2 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actionSets_12();
		int32_t L_3 = V_2;
		NullCheck(L_2);
		int32_t L_4 = L_3;
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_5 = (L_2)->GetAt(static_cast<il2cpp_array_size_t>(L_4));
		V_3 = L_5;
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4201));
		V_4 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4202));
		goto IL_00be;
	}

IL_0025:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4203));
		// SteamVR_Input_Sources source = sources[sourceIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4204));
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_6 = V_1;
		int32_t L_7 = V_4;
		NullCheck(L_6);
		int32_t L_8 = L_7;
		int32_t L_9 = (int32_t)(L_6)->GetAt(static_cast<il2cpp_array_size_t>(L_8));
		V_5 = L_9;
		// if (set.ReadRawSetActive(source))
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4205));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_10 = V_3;
		int32_t L_11 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4241));
		NullCheck(L_10);
		bool L_12 = SteamVR_ActionSet_ReadRawSetActive_m161B1A01E1A47E416D34A1221B95214693E51952(L_10, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4241));
		V_6 = L_12;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4206));
		bool L_13 = V_6;
		if (!L_13)
		{
			goto IL_00b7;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4207));
		// VRActiveActionSet_t activeSet = new VRActiveActionSet_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4208));
		il2cpp_codegen_initobj((&V_7), sizeof(VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38 ));
		// activeSet.ulActionSet = set.handle;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4209));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_14 = V_3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4242));
		NullCheck(L_14);
		uint64_t L_15 = SteamVR_ActionSet_get_handle_m3C1592C47E16A579B14F77D84DE50B89BDB9405F(L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4242));
		(&V_7)->set_ulActionSet_0(L_15);
		// activeSet.nPriority = set.ReadRawSetPriority(source);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4210));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_16 = V_3;
		int32_t L_17 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4243));
		NullCheck(L_16);
		int32_t L_18 = SteamVR_ActionSet_ReadRawSetPriority_m58E0F9561136FBE76C799447547C14C1C4FB8476(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4243));
		(&V_7)->set_nPriority_4(L_18);
		// activeSet.ulRestrictedToDevice = SteamVR_Input_Source.GetHandle(source);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4211));
		int32_t L_19 = V_5;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4244));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_20 = SteamVR_Input_Source_GetHandle_mEA0F6E33E3CB937C11859B35CDB283523240E185(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4244));
		(&V_7)->set_ulRestrictedToDevice_1(L_20);
		// int insertionIndex = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4212));
		V_8 = 0;
		// for (insertionIndex = 0; insertionIndex < activeActionSetsList.Count; insertionIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4213));
		V_8 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4214));
		goto IL_009b;
	}

IL_0075:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4215));
		// if (activeActionSetsList[insertionIndex].nPriority > activeSet.nPriority)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4216));
		List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * L_21 = V_0;
		int32_t L_22 = V_8;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4245));
		NullCheck(L_21);
		VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  L_23 = List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFE_inline(L_21, L_22, /*hidden argument*/List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFE_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4245));
		int32_t L_24 = L_23.get_nPriority_4();
		VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  L_25 = V_7;
		int32_t L_26 = L_25.get_nPriority_4();
		V_9 = (bool)((((int32_t)L_24) > ((int32_t)L_26))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4217));
		bool L_27 = V_9;
		if (!L_27)
		{
			goto IL_0094;
		}
	}
	{
		// break;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4218));
		goto IL_00ab;
	}

IL_0094:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4219));
		// for (insertionIndex = 0; insertionIndex < activeActionSetsList.Count; insertionIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4220));
		int32_t L_28 = V_8;
		V_8 = ((int32_t)il2cpp_codegen_add((int32_t)L_28, (int32_t)1));
	}

IL_009b:
	{
		// for (insertionIndex = 0; insertionIndex < activeActionSetsList.Count; insertionIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4221));
		int32_t L_29 = V_8;
		List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * L_30 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4246));
		NullCheck(L_30);
		int32_t L_31 = List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7_inline(L_30, /*hidden argument*/List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4246));
		V_10 = (bool)((((int32_t)L_29) < ((int32_t)L_31))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4222));
		bool L_32 = V_10;
		if (L_32)
		{
			goto IL_0075;
		}
	}

IL_00ab:
	{
		// activeActionSetsList.Insert(insertionIndex, activeSet);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4223));
		List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * L_33 = V_0;
		int32_t L_34 = V_8;
		VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  L_35 = V_7;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4247));
		NullCheck(L_33);
		List_1_Insert_m8E1B4C1E07BEE076D186D8F353B70C36EB7D3162(L_33, L_34, L_35, /*hidden argument*/List_1_Insert_m8E1B4C1E07BEE076D186D8F353B70C36EB7D3162_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4247));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4224));
	}

IL_00b7:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4225));
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4226));
		int32_t L_36 = V_4;
		V_4 = ((int32_t)il2cpp_codegen_add((int32_t)L_36, (int32_t)1));
	}

IL_00be:
	{
		// for (int sourceIndex = 0; sourceIndex < sources.Length; sourceIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4227));
		int32_t L_37 = V_4;
		SteamVR_Input_SourcesU5BU5D_t735048547A8599BA461FE16B1BC029194E1F184A* L_38 = V_1;
		NullCheck(L_38);
		V_11 = (bool)((((int32_t)L_37) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_38)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4228));
		bool L_39 = V_11;
		if (L_39)
		{
			goto IL_0025;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4229));
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4230));
		int32_t L_40 = V_2;
		V_2 = ((int32_t)il2cpp_codegen_add((int32_t)L_40, (int32_t)1));
	}

IL_00d3:
	{
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4231));
		int32_t L_41 = V_2;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* L_42 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actionSets_12();
		NullCheck(L_42);
		V_12 = (bool)((((int32_t)L_41) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_42)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4232));
		bool L_43 = V_12;
		if (L_43)
		{
			goto IL_0014;
		}
	}
	{
		// changed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4233));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->set_changed_2((bool)0);
		// rawActiveActionSetArray = activeActionSetsList.ToArray();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4234));
		List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * L_44 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4248));
		NullCheck(L_44);
		VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* L_45 = List_1_ToArray_m1108FB082C3C5F9F61019E3418CBEEBC8683A2CC(L_44, /*hidden argument*/List_1_ToArray_m1108FB082C3C5F9F61019E3418CBEEBC8683A2CC_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4248));
		((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->set_rawActiveActionSetArray_0(L_45);
		// if (Application.isEditor || updateDebugTextInBuilds)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4235));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4249));
		bool L_46 = Application_get_isEditor_m347E6EE16E5109EF613C83ED98DB1EC6E3EF5E26(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4249));
		if (L_46)
		{
			goto IL_0105;
		}
	}
	{
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		bool L_47 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_updateDebugTextInBuilds_5();
		G_B16_0 = ((int32_t)(L_47));
		goto IL_0106;
	}

IL_0105:
	{
		G_B16_0 = 1;
	}

IL_0106:
	{
		V_13 = (bool)G_B16_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4236));
		bool L_48 = V_13;
		if (!L_48)
		{
			goto IL_0112;
		}
	}
	{
		// UpdateDebugText();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4237));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4250));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		SteamVR_ActionSet_Manager_UpdateDebugText_m650FC8288DEEC6717EAFD78F778D990DE023F14F(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4250));
	}

IL_0112:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4238));
		return;
	}
}
// Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_ActionSet_Manager::GetSetFromHandle(System.UInt64)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * SteamVR_ActionSet_Manager_GetSetFromHandle_m9F9E7D5DFFC04B5C8CBAAB15B6E9F75997B9C22D (uint64_t ___handle0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Manager_GetSetFromHandle_m9F9E7D5DFFC04B5C8CBAAB15B6E9F75997B9C22D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * V_1 = NULL;
	bool V_2 = false;
	SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * V_3 = NULL;
	bool V_4 = false;
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___handle0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Manager_GetSetFromHandle_m9F9E7D5DFFC04B5C8CBAAB15B6E9F75997B9C22D_RuntimeMethod_var, NULL, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4251));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4252));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4253));
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4254));
		V_0 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4255));
		goto IL_0024;
	}

IL_0005:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4256));
		// SteamVR_ActionSet set = SteamVR_Input.actionSets[actionSetIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4257));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* L_0 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actionSets_12();
		int32_t L_1 = V_0;
		NullCheck(L_0);
		int32_t L_2 = L_1;
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_3 = (L_0)->GetAt(static_cast<il2cpp_array_size_t>(L_2));
		V_1 = L_3;
		// if (set.handle == handle)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4258));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_4 = V_1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4267));
		NullCheck(L_4);
		uint64_t L_5 = SteamVR_ActionSet_get_handle_m3C1592C47E16A579B14F77D84DE50B89BDB9405F(L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4267));
		uint64_t L_6 = ___handle0;
		V_2 = (bool)((((int64_t)L_5) == ((int64_t)L_6))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4259));
		bool L_7 = V_2;
		if (!L_7)
		{
			goto IL_001f;
		}
	}
	{
		// return set;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4260));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_8 = V_1;
		V_3 = L_8;
		goto IL_0038;
	}

IL_001f:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4261));
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4262));
		int32_t L_9 = V_0;
		V_0 = ((int32_t)il2cpp_codegen_add((int32_t)L_9, (int32_t)1));
	}

IL_0024:
	{
		// for (int actionSetIndex = 0; actionSetIndex < SteamVR_Input.actionSets.Length; actionSetIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4263));
		int32_t L_10 = V_0;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		SteamVR_ActionSetU5BU5D_tC9136AFAEDB1DBB1ED428EDDD4B9B49EC82698FA* L_11 = ((SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var))->get_actionSets_12();
		NullCheck(L_11);
		V_4 = (bool)((((int32_t)L_10) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_11)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4264));
		bool L_12 = V_4;
		if (L_12)
		{
			goto IL_0005;
		}
	}
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4265));
		V_3 = (SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 *)NULL;
		goto IL_0038;
	}

IL_0038:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4266));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_13 = V_3;
		return L_13;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Manager::UpdateDebugText()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager_UpdateDebugText_m650FC8288DEEC6717EAFD78F778D990DE023F14F (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Manager_UpdateDebugText_m650FC8288DEEC6717EAFD78F778D990DE023F14F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StringBuilder_t * V_0 = NULL;
	int32_t V_1 = 0;
	VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  V_2;
	memset((&V_2), 0, sizeof(V_2));
	bool V_3 = false;
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0), (&V_1), (&V_2));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Manager_UpdateDebugText_m650FC8288DEEC6717EAFD78F778D990DE023F14F_RuntimeMethod_var, NULL, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4268));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4269));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4270));
		// StringBuilder stringBuilder = new StringBuilder();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4271));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4288));
		StringBuilder_t * L_0 = (StringBuilder_t *)il2cpp_codegen_object_new(StringBuilder_t_il2cpp_TypeInfo_var);
		StringBuilder__ctor_mF928376F82E8C8FF3C11842C562DB8CF28B2735E(L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4288));
		V_0 = L_0;
		// for (int activeIndex = 0; activeIndex < rawActiveActionSetArray.Length; activeIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4272));
		V_1 = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4273));
		goto IL_007c;
	}

IL_000b:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4274));
		// VRActiveActionSet_t set = rawActiveActionSetArray[activeIndex];
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4275));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* L_1 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_rawActiveActionSetArray_0();
		int32_t L_2 = V_1;
		NullCheck(L_1);
		int32_t L_3 = L_2;
		VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  L_4 = (L_1)->GetAt(static_cast<il2cpp_array_size_t>(L_3));
		V_2 = L_4;
		// stringBuilder.Append(set.nPriority);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4276));
		StringBuilder_t * L_5 = V_0;
		VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  L_6 = V_2;
		int32_t L_7 = L_6.get_nPriority_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4289));
		NullCheck(L_5);
		StringBuilder_Append_m85874CFF9E4B152DB2A91936C6F2CA3E9B1EFF84(L_5, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4289));
		// stringBuilder.Append("\t");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4277));
		StringBuilder_t * L_8 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4290));
		NullCheck(L_8);
		StringBuilder_Append_mDBB8CCBB7750C67BE2F2D92F47E6C0FA42793260(L_8, _stringLiteralAC9231DA4082430AFE8F4D40127814C613648D8E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4290));
		// stringBuilder.Append(SteamVR_Input_Source.GetSource(set.ulRestrictedToDevice));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4278));
		StringBuilder_t * L_9 = V_0;
		VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  L_10 = V_2;
		uint64_t L_11 = L_10.get_ulRestrictedToDevice_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4291));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		int32_t L_12 = SteamVR_Input_Source_GetSource_mA164CF850044FA00ACCF139C47A575894CF8E04F(L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4291));
		int32_t L_13 = L_12;
		RuntimeObject * L_14 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &L_13);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4292));
		NullCheck(L_9);
		StringBuilder_Append_mA1A063A1388A21C8EA011DBA7FC98C24C3EE3D65(L_9, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4292));
		// stringBuilder.Append("\t");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4279));
		StringBuilder_t * L_15 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4293));
		NullCheck(L_15);
		StringBuilder_Append_mDBB8CCBB7750C67BE2F2D92F47E6C0FA42793260(L_15, _stringLiteralAC9231DA4082430AFE8F4D40127814C613648D8E, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4293));
		// stringBuilder.Append(GetSetFromHandle(set.ulActionSet).GetShortName());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4280));
		StringBuilder_t * L_16 = V_0;
		VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  L_17 = V_2;
		uint64_t L_18 = L_17.get_ulActionSet_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4294));
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_19 = SteamVR_ActionSet_Manager_GetSetFromHandle_m9F9E7D5DFFC04B5C8CBAAB15B6E9F75997B9C22D(L_18, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4294));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4295));
		NullCheck(L_19);
		String_t* L_20 = SteamVR_ActionSet_GetShortName_mA622B5396AA3CB274F8290FD4C0DD1BF6504769E(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4295));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4296));
		NullCheck(L_16);
		StringBuilder_Append_mDBB8CCBB7750C67BE2F2D92F47E6C0FA42793260(L_16, L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4296));
		// stringBuilder.Append("\n");
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4281));
		StringBuilder_t * L_21 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4297));
		NullCheck(L_21);
		StringBuilder_Append_mDBB8CCBB7750C67BE2F2D92F47E6C0FA42793260(L_21, _stringLiteralADC83B19E793491B1C6EA0FD8B46CD9F32E592FC, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4297));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4282));
		// for (int activeIndex = 0; activeIndex < rawActiveActionSetArray.Length; activeIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4283));
		int32_t L_22 = V_1;
		V_1 = ((int32_t)il2cpp_codegen_add((int32_t)L_22, (int32_t)1));
	}

IL_007c:
	{
		// for (int activeIndex = 0; activeIndex < rawActiveActionSetArray.Length; activeIndex++)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4284));
		int32_t L_23 = V_1;
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* L_24 = ((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->get_rawActiveActionSetArray_0();
		NullCheck(L_24);
		V_3 = (bool)((((int32_t)L_23) < ((int32_t)(((int32_t)((int32_t)(((RuntimeArray*)L_24)->max_length))))))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4285));
		bool L_25 = V_3;
		if (L_25)
		{
			goto IL_000b;
		}
	}
	{
		// debugActiveSetListText = stringBuilder.ToString();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4286));
		StringBuilder_t * L_26 = V_0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4298));
		NullCheck(L_26);
		String_t* L_27 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_26);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4298));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var);
		((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->set_debugActiveSetListText_4(L_27);
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4287));
		return;
	}
}
// System.Void Valve.VR.SteamVR_ActionSet_Manager::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Manager__cctor_mF9DD347E731DCED17050FA5DA5FBCCD90163C6E7 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Manager__cctor_mF9DD347E731DCED17050FA5DA5FBCCD90163C6E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Manager__cctor_mF9DD347E731DCED17050FA5DA5FBCCD90163C6E7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4299));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4300));
	{
		// private static bool changed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4301));
		((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->set_changed_2((bool)0);
		// public static bool updateDebugTextInBuilds = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4302));
		((SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_ActionSet_Manager_t52D7B7C8EA8A71B9AB6EB15002686B1F3C40B7DB_il2cpp_TypeInfo_var))->set_updateDebugTextInBuilds_5((bool)0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean::add_onChange(Valve.VR.SteamVR_Action_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_add_onChange_m7B0D49054E855F76E3B6CC0A275AAD0C183B891C (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_add_onChange_m7B0D49054E855F76E3B6CC0A275AAD0C183B891C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_add_onChange_m7B0D49054E855F76E3B6CC0A275AAD0C183B891C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4303));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4304));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4305));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4306));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4308));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4308));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4309));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4309));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4307));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::remove_onChange(Valve.VR.SteamVR_Action_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_remove_onChange_m1C931656596969E280B81F6A8BBAFAF82615E5F7 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_remove_onChange_m1C931656596969E280B81F6A8BBAFAF82615E5F7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_remove_onChange_m1C931656596969E280B81F6A8BBAFAF82615E5F7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4310));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4311));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4312));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4313));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4315));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4315));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4316));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4316));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4314));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::add_onUpdate(Valve.VR.SteamVR_Action_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_add_onUpdate_m6D5FF31323BDD55FEDCB493F233A1FB08ACA4B48 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_add_onUpdate_m6D5FF31323BDD55FEDCB493F233A1FB08ACA4B48_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_add_onUpdate_m6D5FF31323BDD55FEDCB493F233A1FB08ACA4B48_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4317));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4318));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4319));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4320));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4322));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4322));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4323));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4323));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4321));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::remove_onUpdate(Valve.VR.SteamVR_Action_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_remove_onUpdate_m9764ED6836A812B8C6FDF052FDE77702EBB31DC3 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_remove_onUpdate_m9764ED6836A812B8C6FDF052FDE77702EBB31DC3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_remove_onUpdate_m9764ED6836A812B8C6FDF052FDE77702EBB31DC3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4324));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4325));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4326));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4327));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4329));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4329));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4330));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4330));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4328));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::add_onState(Valve.VR.SteamVR_Action_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_add_onState_m15FBFBFCB8B0E902475BC583C34C6B34CED020BE (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_add_onState_m15FBFBFCB8B0E902475BC583C34C6B34CED020BE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_add_onState_m15FBFBFCB8B0E902475BC583C34C6B34CED020BE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4331));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4332));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4333));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onState += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onState -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4334));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4336));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4336));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4337));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4337));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onState += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onState -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4335));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::remove_onState(Valve.VR.SteamVR_Action_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_remove_onState_m7FFCE1D294F192CAA994986A467891829A777433 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_remove_onState_m7FFCE1D294F192CAA994986A467891829A777433_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_remove_onState_m7FFCE1D294F192CAA994986A467891829A777433_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4339));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4340));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onState += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onState -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4341));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4343));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4343));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4344));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4344));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onState += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onState -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4342));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::add_onStateDown(Valve.VR.SteamVR_Action_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_add_onStateDown_m1A5D1FF097F7C411A428C347BAD0CD4BE14A8F7B (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_add_onStateDown_m1A5D1FF097F7C411A428C347BAD0CD4BE14A8F7B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_add_onStateDown_m1A5D1FF097F7C411A428C347BAD0CD4BE14A8F7B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4345));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4346));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4347));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onStateDown += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onStateDown -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4348));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4350));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4350));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4351));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4351));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onStateDown += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onStateDown -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4349));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::remove_onStateDown(Valve.VR.SteamVR_Action_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_remove_onStateDown_m4583281E4E97D5357C1BD28558EFDC7C41B7CC7E (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_remove_onStateDown_m4583281E4E97D5357C1BD28558EFDC7C41B7CC7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_remove_onStateDown_m4583281E4E97D5357C1BD28558EFDC7C41B7CC7E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4352));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4353));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4354));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onStateDown += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onStateDown -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4355));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4357));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4357));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4358));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4358));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onStateDown += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onStateDown -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4356));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::add_onStateUp(Valve.VR.SteamVR_Action_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_add_onStateUp_m784A9D29CD9EE31E8FA28BCA458ED59C4A989B75 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_add_onStateUp_m784A9D29CD9EE31E8FA28BCA458ED59C4A989B75_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_add_onStateUp_m784A9D29CD9EE31E8FA28BCA458ED59C4A989B75_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4359));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4360));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4361));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onStateUp += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onStateUp -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4362));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4364));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4364));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4365));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4365));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onStateUp += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onStateUp -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4363));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::remove_onStateUp(Valve.VR.SteamVR_Action_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_remove_onStateUp_m68A919C2D693F81D12ACCB7769B179C6D83B4A00 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_remove_onStateUp_m68A919C2D693F81D12ACCB7769B179C6D83B4A00_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_remove_onStateUp_m68A919C2D693F81D12ACCB7769B179C6D83B4A00_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4366));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4367));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4368));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onStateUp += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onStateUp -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4369));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4371));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4371));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4372));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4372));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onStateUp += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onStateUp -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4370));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::add_onActiveChange(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_add_onActiveChange_m1E2FA167B7AC342D02F27E15C5F3074AFD3C3CE3 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_add_onActiveChange_m1E2FA167B7AC342D02F27E15C5F3074AFD3C3CE3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_add_onActiveChange_m1E2FA167B7AC342D02F27E15C5F3074AFD3C3CE3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4373));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4374));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4375));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4376));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4378));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4378));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4379));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_add_onActiveChange_m7E094E7B60FD19A1F34DDD37589C37878DB6F636(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4379));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4377));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::remove_onActiveChange(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_remove_onActiveChange_mAFBBAE5B2ED269DE18C06DBC9197AC826C0BB6FD (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_remove_onActiveChange_mAFBBAE5B2ED269DE18C06DBC9197AC826C0BB6FD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_remove_onActiveChange_mAFBBAE5B2ED269DE18C06DBC9197AC826C0BB6FD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4380));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4381));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4382));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4383));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4385));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4385));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4386));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_remove_onActiveChange_m929F8C0D16D3EB930B80201ED30C2B06ABB153E5(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4386));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4384));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_add_onActiveBindingChange_mBDBB80F0FD7810164E27701BDA5E1798B4554788 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_add_onActiveBindingChange_mBDBB80F0FD7810164E27701BDA5E1798B4554788_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_add_onActiveBindingChange_mBDBB80F0FD7810164E27701BDA5E1798B4554788_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4387));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4388));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4389));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4390));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4392));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4392));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4393));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_add_onActiveBindingChange_m3E749DFEECD4756269020C7159A8848C05503C7E(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4393));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4391));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_remove_onActiveBindingChange_m1B9E622090040B4B45F15A9A414C96363D7F6FE8 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_remove_onActiveBindingChange_m1B9E622090040B4B45F15A9A414C96363D7F6FE8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_remove_onActiveBindingChange_m1B9E622090040B4B45F15A9A414C96363D7F6FE8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4394));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4395));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4396));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4397));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4399));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4399));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4400));
		NullCheck(L_1);
		SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_m2FBB2D79C11CDAD80D58D3558DAA55377F7FC42F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4400));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4398));
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::get_state()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_get_state_m6B3B4CD7594ABBFCD9DF45FDEDAD47DE27873FD9 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_get_state_m6B3B4CD7594ABBFCD9DF45FDEDAD47DE27873FD9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_get_state_m6B3B4CD7594ABBFCD9DF45FDEDAD47DE27873FD9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4401));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4402));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4403));
		// public bool state { get { return sourceMap[SteamVR_Input_Sources.Any].state; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4404));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4406));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4406));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4407));
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4407));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool state { get { return sourceMap[SteamVR_Input_Sources.Any].state; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4405));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::get_stateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_get_stateDown_m4178138E7D39243E86ECADD56416A31E902B24BA (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_get_stateDown_m4178138E7D39243E86ECADD56416A31E902B24BA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_get_stateDown_m4178138E7D39243E86ECADD56416A31E902B24BA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4408));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4409));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4410));
		// public bool stateDown { get { return sourceMap[SteamVR_Input_Sources.Any].stateDown; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4411));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4413));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4413));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4414));
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4414));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool stateDown { get { return sourceMap[SteamVR_Input_Sources.Any].stateDown; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4412));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::get_stateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_get_stateUp_mDC96596EA265A6EB09F69F68E62E7A6D032EF433 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_get_stateUp_mDC96596EA265A6EB09F69F68E62E7A6D032EF433_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_get_stateUp_mDC96596EA265A6EB09F69F68E62E7A6D032EF433_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4415));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4416));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4417));
		// public bool stateUp { get { return sourceMap[SteamVR_Input_Sources.Any].stateUp; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4418));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4420));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4420));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4421));
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4421));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool stateUp { get { return sourceMap[SteamVR_Input_Sources.Any].stateUp; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4419));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::get_lastState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_get_lastState_m70E82A3A7FA8B736966EC95CCF9128DABC1090BC (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_get_lastState_m70E82A3A7FA8B736966EC95CCF9128DABC1090BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_get_lastState_m70E82A3A7FA8B736966EC95CCF9128DABC1090BC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4422));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4423));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4424));
		// public bool lastState { get { return sourceMap[SteamVR_Input_Sources.Any].lastState; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4425));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4427));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4427));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4428));
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Boolean_Source_get_lastState_m3738D53D87B67856DCF3E6C32DB0A4DF72B828DD(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4428));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool lastState { get { return sourceMap[SteamVR_Input_Sources.Any].lastState; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4426));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::get_lastStateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_get_lastStateDown_m63B05087D4E2131C2438AEC60F1BE63932C7BC00 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_get_lastStateDown_m63B05087D4E2131C2438AEC60F1BE63932C7BC00_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_get_lastStateDown_m63B05087D4E2131C2438AEC60F1BE63932C7BC00_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4429));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4430));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4431));
		// public bool lastStateDown { get { return sourceMap[SteamVR_Input_Sources.Any].lastStateDown; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4432));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4434));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4434));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4435));
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Boolean_Source_get_lastStateDown_mC33753F4A4DB7BF33BF0727E0B441D556EF9FE96(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4435));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool lastStateDown { get { return sourceMap[SteamVR_Input_Sources.Any].lastStateDown; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4433));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::get_lastStateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_get_lastStateUp_m4FB0D1BA1D24D0A1CDB00C49A447FBE37BEE28CB (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_get_lastStateUp_m4FB0D1BA1D24D0A1CDB00C49A447FBE37BEE28CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_get_lastStateUp_m4FB0D1BA1D24D0A1CDB00C49A447FBE37BEE28CB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4436));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4437));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4438));
		// public bool lastStateUp { get { return sourceMap[SteamVR_Input_Sources.Any].lastStateUp; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4439));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4441));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_1 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4441));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4442));
		NullCheck(L_1);
		bool L_2 = SteamVR_Action_Boolean_Source_get_lastStateUp_mECCC96AB8645D1EA185DCCA78478B47850850276(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4442));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public bool lastStateUp { get { return sourceMap[SteamVR_Input_Sources.Any].lastStateUp; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4440));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean__ctor_m0E0938333888A2EBC06EB368DC37BC4686F8093B (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean__ctor_m0E0938333888A2EBC06EB368DC37BC4686F8093B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean__ctor_m0E0938333888A2EBC06EB368DC37BC4686F8093B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4443));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4444));
	{
		// public SteamVR_Action_Boolean() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4445));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4448));
		SteamVR_Action_In_2__ctor_m421E8FB8CFB44A3AAAE42D765F4158180B98B9B1(__this, /*hidden argument*/SteamVR_Action_In_2__ctor_m421E8FB8CFB44A3AAAE42D765F4158180B98B9B1_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4448));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4446));
		// public SteamVR_Action_Boolean() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4447));
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::GetStateDown(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_GetStateDown_m86915AC100687E07E0796D52FAB721DD30D5CDC6 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_GetStateDown_m86915AC100687E07E0796D52FAB721DD30D5CDC6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_GetStateDown_m86915AC100687E07E0796D52FAB721DD30D5CDC6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4449));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4450));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4451));
		// return sourceMap[inputSource].stateDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4452));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4454));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4454));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4455));
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4455));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4453));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::GetStateUp(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_GetStateUp_m83F063805256AEBD01AFF9368025D9D5DDAE9457 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_GetStateUp_m83F063805256AEBD01AFF9368025D9D5DDAE9457_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_GetStateUp_m83F063805256AEBD01AFF9368025D9D5DDAE9457_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4456));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4457));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4458));
		// return sourceMap[inputSource].stateUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4459));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4461));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4461));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4462));
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4462));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4460));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::GetState(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_GetState_m2D6400A61EA7E39E3ECE024B7542FFCEF1242908 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_GetState_m2D6400A61EA7E39E3ECE024B7542FFCEF1242908_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_GetState_m2D6400A61EA7E39E3ECE024B7542FFCEF1242908_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4463));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4464));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4465));
		// return sourceMap[inputSource].state;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4466));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4468));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4468));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4469));
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4469));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4467));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::GetLastStateDown(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_GetLastStateDown_mDF8F5659705B49C23F77CEB13884086AA05BD446 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_GetLastStateDown_mDF8F5659705B49C23F77CEB13884086AA05BD446_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_GetLastStateDown_mDF8F5659705B49C23F77CEB13884086AA05BD446_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4470));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4471));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4472));
		// return sourceMap[inputSource].lastStateDown;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4473));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4475));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4475));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4476));
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Boolean_Source_get_lastStateDown_mC33753F4A4DB7BF33BF0727E0B441D556EF9FE96(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4476));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4474));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::GetLastStateUp(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_GetLastStateUp_mCD7A04FC288B34EFBC4597E2E6D7395CB7838D7B (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_GetLastStateUp_mCD7A04FC288B34EFBC4597E2E6D7395CB7838D7B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_GetLastStateUp_mCD7A04FC288B34EFBC4597E2E6D7395CB7838D7B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4477));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4478));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4479));
		// return sourceMap[inputSource].lastStateUp;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4480));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4482));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4482));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4483));
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Boolean_Source_get_lastStateUp_mECCC96AB8645D1EA185DCCA78478B47850850276(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4483));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4481));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean::GetLastState(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_GetLastState_m5BCD65EBEC51B93D30C31C727CFB4958B5E02019 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_GetLastState_m5BCD65EBEC51B93D30C31C727CFB4958B5E02019_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_GetLastState_m5BCD65EBEC51B93D30C31C727CFB4958B5E02019_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4484));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4485));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4486));
		// return sourceMap[inputSource].lastState;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4487));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4489));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4489));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4490));
		NullCheck(L_2);
		bool L_3 = SteamVR_Action_Boolean_Source_get_lastState_m3738D53D87B67856DCF3E6C32DB0A4DF72B828DD(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4490));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4488));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_AddOnActiveChangeListener_mF32B5AFCCD10C1460B7C13697EEFF65E0EB61D23 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_AddOnActiveChangeListener_mF32B5AFCCD10C1460B7C13697EEFF65E0EB61D23_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_AddOnActiveChangeListener_mF32B5AFCCD10C1460B7C13697EEFF65E0EB61D23_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4491));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4492));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4493));
		// sourceMap[inputSource].onActiveChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4494));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4496));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4496));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4497));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onActiveChange_m7E094E7B60FD19A1F34DDD37589C37878DB6F636(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4497));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4495));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_RemoveOnActiveChangeListener_m0A5E33C0D2C705EF74246AC6E2B10F34716D2E55 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_RemoveOnActiveChangeListener_m0A5E33C0D2C705EF74246AC6E2B10F34716D2E55_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_RemoveOnActiveChangeListener_m0A5E33C0D2C705EF74246AC6E2B10F34716D2E55_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4498));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4499));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4500));
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4501));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4503));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4503));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4504));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_remove_onActiveChange_m929F8C0D16D3EB930B80201ED30C2B06ABB153E5(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4504));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4502));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_AddOnActiveBindingChangeListener_m5910008B1E06400710E7124CF610CE6CF1C8BEF2 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_AddOnActiveBindingChangeListener_m5910008B1E06400710E7124CF610CE6CF1C8BEF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_AddOnActiveBindingChangeListener_m5910008B1E06400710E7124CF610CE6CF1C8BEF2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4505));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4506));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4507));
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4508));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4510));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4510));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4511));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onActiveBindingChange_m3E749DFEECD4756269020C7159A8848C05503C7E(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4511));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4509));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_RemoveOnActiveBindingChangeListener_m887837BCEA9D6F0E75AD281B4CC7ED02F28CA88A (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_RemoveOnActiveBindingChangeListener_m887837BCEA9D6F0E75AD281B4CC7ED02F28CA88A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_RemoveOnActiveBindingChangeListener_m887837BCEA9D6F0E75AD281B4CC7ED02F28CA88A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4512));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4513));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4514));
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4515));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4517));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4517));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4518));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_m2FBB2D79C11CDAD80D58D3558DAA55377F7FC42F(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4518));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4516));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::AddOnChangeListener(Valve.VR.SteamVR_Action_Boolean_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_AddOnChangeListener_mCF5FCD63EF55DD3723E4C650DA603AC5C6A0DDFD (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_AddOnChangeListener_mCF5FCD63EF55DD3723E4C650DA603AC5C6A0DDFD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_AddOnChangeListener_mCF5FCD63EF55DD3723E4C650DA603AC5C6A0DDFD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4519));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4520));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4521));
		// sourceMap[inputSource].onChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4522));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4524));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4524));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4525));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4525));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4523));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Boolean_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_RemoveOnChangeListener_mCE6B6CA0C80E2C83C62305AC9A5181E0F9C8C033 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_RemoveOnChangeListener_mCE6B6CA0C80E2C83C62305AC9A5181E0F9C8C033_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_RemoveOnChangeListener_mCE6B6CA0C80E2C83C62305AC9A5181E0F9C8C033_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4526));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4527));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4528));
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4529));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4531));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4531));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4532));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4532));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4530));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::AddOnUpdateListener(Valve.VR.SteamVR_Action_Boolean_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_AddOnUpdateListener_mECB6B8646EAC45266923098D9BAF539DF3D05C5C (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_AddOnUpdateListener_mECB6B8646EAC45266923098D9BAF539DF3D05C5C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_AddOnUpdateListener_mECB6B8646EAC45266923098D9BAF539DF3D05C5C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4533));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4534));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4535));
		// sourceMap[inputSource].onUpdate += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4536));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4538));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4538));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4539));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4539));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4537));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Boolean_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_RemoveOnUpdateListener_mFDF8AC7BDE485488AD051616A88B15135A78B3B2 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_RemoveOnUpdateListener_mFDF8AC7BDE485488AD051616A88B15135A78B3B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_RemoveOnUpdateListener_mFDF8AC7BDE485488AD051616A88B15135A78B3B2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4540));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4541));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4542));
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4543));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4545));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4545));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4546));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4546));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4544));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::AddOnStateDownListener(Valve.VR.SteamVR_Action_Boolean_StateDownHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_AddOnStateDownListener_m81FDDC6C1F9DD9B04DA9F701B68926379FCE9FD9 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_AddOnStateDownListener_m81FDDC6C1F9DD9B04DA9F701B68926379FCE9FD9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_AddOnStateDownListener_m81FDDC6C1F9DD9B04DA9F701B68926379FCE9FD9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4547));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4548));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4549));
		// sourceMap[inputSource].onStateDown += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4550));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4552));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4552));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4553));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4553));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4551));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::RemoveOnStateDownListener(Valve.VR.SteamVR_Action_Boolean_StateDownHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_RemoveOnStateDownListener_mD35F3C39B9080D819E483837F37513624601060E (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_RemoveOnStateDownListener_mD35F3C39B9080D819E483837F37513624601060E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_RemoveOnStateDownListener_mD35F3C39B9080D819E483837F37513624601060E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4554));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4555));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4556));
		// sourceMap[inputSource].onStateDown -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4557));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4559));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4559));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4560));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4560));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4558));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::AddOnStateUpListener(Valve.VR.SteamVR_Action_Boolean_StateUpHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_AddOnStateUpListener_mF11EDC53EF1D2CB4FD87211B54A3505E9094887B (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_AddOnStateUpListener_mF11EDC53EF1D2CB4FD87211B54A3505E9094887B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_AddOnStateUpListener_mF11EDC53EF1D2CB4FD87211B54A3505E9094887B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4561));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4562));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4563));
		// sourceMap[inputSource].onStateUp += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4564));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4566));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4566));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4567));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4567));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4565));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::RemoveOnStateUpListener(Valve.VR.SteamVR_Action_Boolean_StateUpHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_RemoveOnStateUpListener_mBDF4B15FB6844F70884083D81956A740670DA845 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_RemoveOnStateUpListener_mBDF4B15FB6844F70884083D81956A740670DA845_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_RemoveOnStateUpListener_mBDF4B15FB6844F70884083D81956A740670DA845_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4568));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4569));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4570));
		// sourceMap[inputSource].onStateUp -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4571));
		SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * L_0 = ((SteamVR_Action_2_tEF35EA9CF866C4CE33A6702A6D71E8DDE8081AC8 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4573));
		NullCheck(L_0);
		SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * L_2 = SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m234BD679E7B1376C91AF1DAB1F1B0B87CA20207E_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4573));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4574));
		NullCheck(L_2);
		SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4574));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4572));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m50DEA2A00F7179CA460458CCE26547855C3F852E (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m50DEA2A00F7179CA460458CCE26547855C3F852E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m50DEA2A00F7179CA460458CCE26547855C3F852E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4575));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4576));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4577));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4578));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m5E920BA13AE0EF0BDE92264615FB690CF0A5AE66 (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m5E920BA13AE0EF0BDE92264615FB690CF0A5AE66_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m5E920BA13AE0EF0BDE92264615FB690CF0A5AE66_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4579));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4580));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4581));
		// InitAfterDeserialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4582));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4584));
		SteamVR_Action_2_InitAfterDeserialize_m631EE116B3831060F47CC659AE2A5FBF7186559A(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m631EE116B3831060F47CC659AE2A5FBF7186559A_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4584));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4583));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_mB78A5E479AAFA82B4133A7F6A0D85AD9B0002638 (ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mFB2090F4429E50979967A677C25DA938F97B620D (ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_m42B71B85E68FB4F1E70EDCF2DEF69CE9D075580C (ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_m42B71B85E68FB4F1E70EDCF2DEF69CE9D075580C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m962D8D945E18AF2F65308C8BA82E7A0658E5C1A8 (ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mBD6FBA8BF779984B89C666C8C1210BA3C61F6B3B (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m953BCC74C1105C1EA81FEBEC410157082FE98E81 (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Boolean_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_mB7EF01CE8944172870E8000443000CEAADDC92CD (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_mB7EF01CE8944172870E8000443000CEAADDC92CD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m87794D7934D652D4B99F5247EA54986564D46096 (ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_StateDownHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler__ctor_m54362BB217B5251C8EB76A5FEED10FF3DF9BFBA3 (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_StateDownHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_Invoke_mBAD714BEB0B3CDDD1301544003C7C42C17743084 (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Boolean_StateDownHandler::BeginInvoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateDownHandler_BeginInvoke_mAEDD2E6F9F121012F770B41A0083279507BDF27B (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateDownHandler_BeginInvoke_mAEDD2E6F9F121012F770B41A0083279507BDF27B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_StateDownHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateDownHandler_EndInvoke_m0C112ECDBA5605C481F57BA725BA907ED9FB110B (StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_StateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler__ctor_mD536193D0C88821B66B667A03E4710142A33E112 (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_StateHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_Invoke_m1CDA16A03E31472750E45DECCE4B6136482C0F46 (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Boolean_StateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateHandler_BeginInvoke_m0AA9B5228B44CED761DB4135DD80C73CA3618F05 (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateHandler_BeginInvoke_m0AA9B5228B44CED761DB4135DD80C73CA3618F05_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_StateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateHandler_EndInvoke_m7334A7F65B82FC95F1D675AE39CC399252CE9754 (StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_StateUpHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler__ctor_m9EF02EC85AA50B176C35BD412710624F3E2AE285 (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_StateUpHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_Invoke_m8243F855D40DEA046F71E82DB601D20DEFBED41A (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Boolean_StateUpHandler::BeginInvoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* StateUpHandler_BeginInvoke_m23FCD385677F0DF1EB14760EC91C2DC602E30EBC (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (StateUpHandler_BeginInvoke_m23FCD385677F0DF1EB14760EC91C2DC602E30EBC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_StateUpHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void StateUpHandler_EndInvoke_m9B2961A401C9FA1A1BE101B7FC433014A5AD5F68 (StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m68B2F5666A6F84AB256BDC9A1A0909290717ADB9 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_m9C95A4E4CA301E2E6DADBCF2ABCDE00671ECBAF5 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
					else
						VirtActionInvoker3< SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Boolean_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Boolean,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_m240FEE9478B708A9992CB332DD40867A109DDA19 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * ___fromAction0, int32_t ___fromSource1, bool ___newState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_m240FEE9478B708A9992CB332DD40867A109DDA19_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___newState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Boolean_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m1615F6BD40D132B3F17DB48A2EDF3158E2EE3496 (UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateDown(Valve.VR.SteamVR_Action_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_0 = NULL;
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_1 = NULL;
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_add_onStateDown_mA4DDBD321D3341520E4328691634D28662EC1A6C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_0 = __this->get_onStateDown_11();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_2 = V_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** L_5 = __this->get_address_of_onStateDown_11();
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_6 = V_2;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_7 = V_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *>((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_9 = V_0;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_9) == ((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateDown(Valve.VR.SteamVR_Action_Boolean_StateDownHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_0 = NULL;
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_1 = NULL;
	StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_remove_onStateDown_m1D3AB0790D7CAC19944B8C1D28D9C84946BD32F4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_0 = __this->get_onStateDown_11();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_1 = V_0;
		V_1 = L_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_2 = V_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)CastclassSealed((RuntimeObject*)L_4, StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464_il2cpp_TypeInfo_var));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 ** L_5 = __this->get_address_of_onStateDown_11();
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_6 = V_2;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_7 = V_1;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_8 = InterlockedCompareExchangeImpl<StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *>((StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_9 = V_0;
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_9) == ((RuntimeObject*)(StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onStateUp(Valve.VR.SteamVR_Action_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_0 = NULL;
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_1 = NULL;
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_add_onStateUp_m6E3701968DB62C8658FE77B47301FCC539F0A846_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_0 = __this->get_onStateUp_12();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_2 = V_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** L_5 = __this->get_address_of_onStateUp_12();
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_6 = V_2;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_7 = V_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *>((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_9 = V_0;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_9) == ((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onStateUp(Valve.VR.SteamVR_Action_Boolean_StateUpHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_0 = NULL;
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_1 = NULL;
	StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_remove_onStateUp_mDA98D1C74F95507A5519AC2A3C95F3CA6BD7F229_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_0 = __this->get_onStateUp_12();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_1 = V_0;
		V_1 = L_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_2 = V_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)CastclassSealed((RuntimeObject*)L_4, StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8_il2cpp_TypeInfo_var));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 ** L_5 = __this->get_address_of_onStateUp_12();
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_6 = V_2;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_7 = V_1;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_8 = InterlockedCompareExchangeImpl<StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *>((StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 **)L_5, L_6, L_7);
		V_0 = L_8;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_9 = V_0;
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_9) == ((RuntimeObject*)(StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onState(Valve.VR.SteamVR_Action_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_0 = NULL;
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_1 = NULL;
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_add_onState_mCA5E2D446D6F926BE045288CA0237D76F0080B68_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_0 = __this->get_onState_13();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_2 = V_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** L_5 = __this->get_address_of_onState_13();
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_6 = V_2;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_7 = V_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_8 = InterlockedCompareExchangeImpl<StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *>((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_9 = V_0;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_9) == ((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onState(Valve.VR.SteamVR_Action_Boolean_StateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_0 = NULL;
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_1 = NULL;
	StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_remove_onState_m4B9CF1F2637CD3DAF1AAB3896E32D22808C0544D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_0 = __this->get_onState_13();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_1 = V_0;
		V_1 = L_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_2 = V_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)CastclassSealed((RuntimeObject*)L_4, StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA_il2cpp_TypeInfo_var));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA ** L_5 = __this->get_address_of_onState_13();
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_6 = V_2;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_7 = V_1;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_8 = InterlockedCompareExchangeImpl<StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *>((StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA **)L_5, L_6, L_7);
		V_0 = L_8;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_9 = V_0;
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_10 = V_1;
		if ((!(((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_9) == ((RuntimeObject*)(StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onActiveChange_m7E094E7B60FD19A1F34DDD37589C37878DB6F636 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onActiveChange_m7E094E7B60FD19A1F34DDD37589C37878DB6F636_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_0 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_1 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_add_onActiveChange_m7E094E7B60FD19A1F34DDD37589C37878DB6F636_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_0 = __this->get_onActiveChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** L_5 = __this->get_address_of_onActiveChange_14();
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_6 = V_2;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_7 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *>((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_9 = V_0;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onActiveChange_m929F8C0D16D3EB930B80201ED30C2B06ABB153E5 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onActiveChange_m929F8C0D16D3EB930B80201ED30C2B06ABB153E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_0 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_1 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_remove_onActiveChange_m929F8C0D16D3EB930B80201ED30C2B06ABB153E5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_0 = __this->get_onActiveChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** L_5 = __this->get_address_of_onActiveChange_14();
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_6 = V_2;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_7 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *>((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_9 = V_0;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onActiveBindingChange_m3E749DFEECD4756269020C7159A8848C05503C7E (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onActiveBindingChange_m3E749DFEECD4756269020C7159A8848C05503C7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_0 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_1 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_add_onActiveBindingChange_m3E749DFEECD4756269020C7159A8848C05503C7E_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_0 = __this->get_onActiveBindingChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** L_5 = __this->get_address_of_onActiveBindingChange_15();
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_6 = V_2;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_7 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *>((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_9 = V_0;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Boolean_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_m2FBB2D79C11CDAD80D58D3558DAA55377F7FC42F (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_m2FBB2D79C11CDAD80D58D3558DAA55377F7FC42F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_0 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_1 = NULL;
	ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_remove_onActiveBindingChange_m2FBB2D79C11CDAD80D58D3558DAA55377F7FC42F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_0 = __this->get_onActiveBindingChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_2 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 ** L_5 = __this->get_address_of_onActiveBindingChange_15();
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_6 = V_2;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_7 = V_1;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *>((ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_9 = V_0;
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onChange(Valve.VR.SteamVR_Action_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_0 = NULL;
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_1 = NULL;
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_add_onChange_m68CCE8BD8761AD8F33C83F871B2B75B5E908755D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_0 = __this->get_onChange_16();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_2 = V_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** L_5 = __this->get_address_of_onChange_16();
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_6 = V_2;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_7 = V_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *>((ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_9 = V_0;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)L_9) == ((RuntimeObject*)(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onChange(Valve.VR.SteamVR_Action_Boolean_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_0 = NULL;
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_1 = NULL;
	ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_remove_onChange_m4AE6619441A7345BB0F2478D3CC7BB3A2989ACDD_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_0 = __this->get_onChange_16();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_2 = V_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0_il2cpp_TypeInfo_var));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 ** L_5 = __this->get_address_of_onChange_16();
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_6 = V_2;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_7 = V_1;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *>((ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_9 = V_0;
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)L_9) == ((RuntimeObject*)(ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::add_onUpdate(Valve.VR.SteamVR_Action_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_0 = NULL;
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_1 = NULL;
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_add_onUpdate_mF15B2B618C21D657E51369504C1D1D69246E168C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_0 = __this->get_onUpdate_17();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_2 = V_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** L_5 = __this->get_address_of_onUpdate_17();
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_6 = V_2;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_7 = V_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *>((UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_9 = V_0;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_9) == ((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Boolean_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_0 = NULL;
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_1 = NULL;
	UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_remove_onUpdate_m4840B62E8474743295BA681B3BD382C8CC02D541_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_0 = __this->get_onUpdate_17();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_2 = V_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B_il2cpp_TypeInfo_var));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B ** L_5 = __this->get_address_of_onUpdate_17();
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_6 = V_2;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_7 = V_1;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *>((UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_9 = V_0;
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_9) == ((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_state()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4585));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4586));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4587));
		// public bool state { get { return active && actionData.bState; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4588));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4590));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4590));
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_1 = __this->get_address_of_actionData_19();
		bool L_2 = L_1->get_bState_2();
		G_B3_0 = ((int32_t)(L_2));
		goto IL_0017;
	}

IL_0016:
	{
		G_B3_0 = 0;
	}

IL_0017:
	{
		V_0 = (bool)G_B3_0;
		goto IL_001a;
	}

IL_001a:
	{
		// public bool state { get { return active && actionData.bState; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4589));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_stateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4591));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4592));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4593));
		// public bool stateDown { get { return active && actionData.bState && actionData.bChanged; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4594));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4596));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4596));
		if (!L_0)
		{
			goto IL_0023;
		}
	}
	{
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_1 = __this->get_address_of_actionData_19();
		bool L_2 = L_1->get_bState_2();
		if (!L_2)
		{
			goto IL_0023;
		}
	}
	{
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_3 = __this->get_address_of_actionData_19();
		bool L_4 = L_3->get_bChanged_3();
		G_B4_0 = ((int32_t)(L_4));
		goto IL_0024;
	}

IL_0023:
	{
		G_B4_0 = 0;
	}

IL_0024:
	{
		V_0 = (bool)G_B4_0;
		goto IL_0027;
	}

IL_0027:
	{
		// public bool stateDown { get { return active && actionData.bState && actionData.bChanged; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4595));
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_stateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4597));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4598));
	int32_t G_B4_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4599));
		// public bool stateUp { get { return active && actionData.bState == false && actionData.bChanged; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4600));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4602));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4602));
		if (!L_0)
		{
			goto IL_0023;
		}
	}
	{
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_1 = __this->get_address_of_actionData_19();
		bool L_2 = L_1->get_bState_2();
		if (L_2)
		{
			goto IL_0023;
		}
	}
	{
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_3 = __this->get_address_of_actionData_19();
		bool L_4 = L_3->get_bChanged_3();
		G_B4_0 = ((int32_t)(L_4));
		goto IL_0024;
	}

IL_0023:
	{
		G_B4_0 = 0;
	}

IL_0024:
	{
		V_0 = (bool)G_B4_0;
		goto IL_0027;
	}

IL_0027:
	{
		// public bool stateUp { get { return active && actionData.bState == false && actionData.bChanged; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4601));
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_changed_m54D495C9FD36559978602102646A286CFDD39AEB (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_changed_m54D495C9FD36559978602102646A286CFDD39AEB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_changed_m54D495C9FD36559978602102646A286CFDD39AEB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4603));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4604));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4605));
		// public override bool changed { get { return active && actionData.bChanged; } protected set { } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4606));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4608));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4608));
		if (!L_0)
		{
			goto IL_0016;
		}
	}
	{
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_1 = __this->get_address_of_actionData_19();
		bool L_2 = L_1->get_bChanged_3();
		G_B3_0 = ((int32_t)(L_2));
		goto IL_0017;
	}

IL_0016:
	{
		G_B3_0 = 0;
	}

IL_0017:
	{
		V_0 = (bool)G_B3_0;
		goto IL_001a;
	}

IL_001a:
	{
		// public override bool changed { get { return active && actionData.bChanged; } protected set { } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4607));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_set_changed_m1CB090872A0E6E8356D1DCD5507335D3A6D42B92 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_set_changed_m1CB090872A0E6E8356D1DCD5507335D3A6D42B92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_set_changed_m1CB090872A0E6E8356D1DCD5507335D3A6D42B92_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4609));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4610));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4611));
		// public override bool changed { get { return active && actionData.bChanged; } protected set { } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4612));
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastState_m3738D53D87B67856DCF3E6C32DB0A4DF72B828DD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_lastState_m3738D53D87B67856DCF3E6C32DB0A4DF72B828DD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_lastState_m3738D53D87B67856DCF3E6C32DB0A4DF72B828DD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4613));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4614));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4615));
		// public bool lastState { get { return lastActionData.bState; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4616));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bState_2();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public bool lastState { get { return lastActionData.bState; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4617));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastStateDown()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastStateDown_mC33753F4A4DB7BF33BF0727E0B441D556EF9FE96 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_lastStateDown_mC33753F4A4DB7BF33BF0727E0B441D556EF9FE96_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_lastStateDown_mC33753F4A4DB7BF33BF0727E0B441D556EF9FE96_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4618));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4619));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4620));
		// public bool lastStateDown { get { return lastActionData.bState && lastActionData.bChanged; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4621));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bState_2();
		if (!L_1)
		{
			goto IL_001b;
		}
	}
	{
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_2 = __this->get_address_of_lastActionData_20();
		bool L_3 = L_2->get_bChanged_3();
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		goto IL_001f;
	}

IL_001f:
	{
		// public bool lastStateDown { get { return lastActionData.bState && lastActionData.bChanged; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4622));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastStateUp()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastStateUp_mECCC96AB8645D1EA185DCCA78478B47850850276 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_lastStateUp_mECCC96AB8645D1EA185DCCA78478B47850850276_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_lastStateUp_mECCC96AB8645D1EA185DCCA78478B47850850276_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4623));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4624));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4625));
		// public bool lastStateUp { get { return lastActionData.bState == false && lastActionData.bChanged; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4626));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bState_2();
		if (L_1)
		{
			goto IL_001b;
		}
	}
	{
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_2 = __this->get_address_of_lastActionData_20();
		bool L_3 = L_2->get_bChanged_3();
		G_B3_0 = ((int32_t)(L_3));
		goto IL_001c;
	}

IL_001b:
	{
		G_B3_0 = 0;
	}

IL_001c:
	{
		V_0 = (bool)G_B3_0;
		goto IL_001f;
	}

IL_001f:
	{
		// public bool lastStateUp { get { return lastActionData.bState == false && lastActionData.bChanged; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4627));
		bool L_4 = V_0;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastChanged_mBF64A8A0A5779C3C2E10056F777459E86230C906 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_lastChanged_mBF64A8A0A5779C3C2E10056F777459E86230C906_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_lastChanged_mBF64A8A0A5779C3C2E10056F777459E86230C906_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4628));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4629));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4630));
		// public override bool lastChanged { get { return lastActionData.bChanged; } protected set { } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4631));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bChanged_3();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastChanged { get { return lastActionData.bChanged; } protected set { } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4632));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_set_lastChanged_mAE8A94856F9C04264EEEA2B6F1A6C03F683EFEEA (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_set_lastChanged_mAE8A94856F9C04264EEEA2B6F1A6C03F683EFEEA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_set_lastChanged_mAE8A94856F9C04264EEEA2B6F1A6C03F683EFEEA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4633));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4634));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4635));
		// public override bool lastChanged { get { return lastActionData.bChanged; } protected set { } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4636));
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Boolean_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Boolean_Source_get_activeOrigin_mAAA82EC4C6BC594A5C5B0BAB5AD8F35CCE4F3322 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_activeOrigin_mAAA82EC4C6BC594A5C5B0BAB5AD8F35CCE4F3322_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	uint64_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_activeOrigin_mAAA82EC4C6BC594A5C5B0BAB5AD8F35CCE4F3322_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4637));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4638));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4639));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4640));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4645));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4645));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4641));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// return actionData.activeOrigin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4642));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_2 = __this->get_address_of_actionData_19();
		uint64_t L_3 = L_2->get_activeOrigin_1();
		V_1 = L_3;
		goto IL_001e;
	}

IL_0019:
	{
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4643));
		V_1 = (((int64_t)((int64_t)0)));
		goto IL_001e;
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4644));
		uint64_t L_4 = V_1;
		return L_4;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Boolean_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Boolean_Source_get_lastActiveOrigin_m28B22A1100F371F273B4840367B2FA6865976799 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_lastActiveOrigin_m28B22A1100F371F273B4840367B2FA6865976799_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_lastActiveOrigin_m28B22A1100F371F273B4840367B2FA6865976799_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4646));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4647));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4648));
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4649));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_0 = __this->get_address_of_lastActionData_20();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4650));
		uint64_t L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_active_mC72D03F26731C6193A7CF3CC589A5975F59293E2 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_active_mC72D03F26731C6193A7CF3CC589A5975F59293E2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_active_mC72D03F26731C6193A7CF3CC589A5975F59293E2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4651));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4652));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4653));
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4654));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4656));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4656));
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4657));
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4657));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4658));
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4658));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4659));
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4659));
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0022;
	}

IL_0021:
	{
		G_B3_0 = 0;
	}

IL_0022:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0025;
	}

IL_0025:
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4655));
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_activeBinding_mCD6C653E26B9C2E6B6712A37D2CD6724EAF745CB (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_activeBinding_mCD6C653E26B9C2E6B6712A37D2CD6724EAF745CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_activeBinding_mCD6C653E26B9C2E6B6712A37D2CD6724EAF745CB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4660));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4661));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4662));
		// public override bool activeBinding { get { return actionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4663));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_0 = __this->get_address_of_actionData_19();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4664));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastActive_m6D694E7B47E3C0915A50F91098D251F430F150A6 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_lastActive_m6D694E7B47E3C0915A50F91098D251F430F150A6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_lastActive_m6D694E7B47E3C0915A50F91098D251F430F150A6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4665));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4666));
	{
		// public override bool lastActive { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4667));
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_set_lastActive_mF553E65B29771B7ED438601E55DF6FA7986A51EF (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_set_lastActive_mF553E65B29771B7ED438601E55DF6FA7986A51EF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_set_lastActive_mF553E65B29771B7ED438601E55DF6FA7986A51EF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4668));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4669));
	{
		// public override bool lastActive { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4670));
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_18(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Boolean_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Boolean_Source_get_lastActiveBinding_mB22A66B79AA1D726B31ECEDB7A6ED94CB9CA84B5 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_get_lastActiveBinding_mB22A66B79AA1D726B31ECEDB7A6ED94CB9CA84B5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_get_lastActiveBinding_mB22A66B79AA1D726B31ECEDB7A6ED94CB9CA84B5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4671));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4672));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4673));
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4674));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_0 = __this->get_address_of_lastActionData_20();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4675));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_Preinitialize_mE398BE018ADFDF3FD3BE8AEA0835F41D17C23AAD (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_Preinitialize_mE398BE018ADFDF3FD3BE8AEA0835F41D17C23AAD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___wrappingAction0), (&___forInputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_Preinitialize_mE398BE018ADFDF3FD3BE8AEA0835F41D17C23AAD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4676));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4677));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4678));
		// base.Preinitialize(wrappingAction, forInputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4679));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4682));
		SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4682));
		// booleanAction = (SteamVR_Action_Boolean)wrappingAction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4680));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_booleanAction_21(((SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20_il2cpp_TypeInfo_var)));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4681));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_Initialize_mD35F8622AC0834DB1852656DA9F8EF3F740A2E6C (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_Initialize_mD35F8622AC0834DB1852656DA9F8EF3F740A2E6C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_Initialize_mD35F8622AC0834DB1852656DA9F8EF3F740A2E6C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4683));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4684));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4685));
		// base.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4686));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4691));
		SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4691));
		// if (actionData_size == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4687));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var))->get_actionData_size_10();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4688));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputDigitalActionData_t));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4689));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4692));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4692));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4693));
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4693));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var);
		((SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var))->set_actionData_size_10(L_4);
	}

IL_0028:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4690));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_UpdateValue_m8B285B523C9A51B99909979E7AD647A1D36E8754 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_UpdateValue_m8B285B523C9A51B99909979E7AD647A1D36E8754_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	bool V_11 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_UpdateValue_m8B285B523C9A51B99909979E7AD647A1D36E8754_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4694));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4695));
	int32_t G_B8_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B18_0 = 0;
	int32_t G_B23_0 = 0;
	int32_t G_B31_0 = 0;
	int32_t G_B36_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4696));
		// lastActionData = actionData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4697));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1  L_0 = __this->get_actionData_19();
		__this->set_lastActionData_20(L_0);
		// lastActive = active;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4698));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4733));
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4733));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4734));
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4734));
		// EVRInputError err = OpenVR.Input.GetDigitalActionData(action.handle, ref actionData, actionData_size, inputSourceHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4699));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4735));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_2 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4735));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_3 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4736));
		NullCheck(L_3);
		uint64_t L_4 = VirtFuncInvoker0< uint64_t >::Invoke(18 /* System.UInt64 Valve.VR.SteamVR_Action::get_handle() */, L_3);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4736));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_5 = __this->get_address_of_actionData_19();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var);
		uint32_t L_6 = ((SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var))->get_actionData_size_10();
		uint64_t L_7 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4737));
		NullCheck(L_2);
		int32_t L_8 = CVRInput_GetDigitalActionData_m4A847DD95FD14F887E12A308E35CB33073F2B261(L_2, L_4, (InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 *)L_5, L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4737));
		V_0 = L_8;
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4700));
		int32_t L_9 = V_0;
		V_1 = (bool)((!(((uint32_t)L_9) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4701));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_00a6;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetDigitalActionData error (" + action.fullPath + "): " + err.ToString() + " handle: " + action.handle.ToString());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4702));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteral86E8370248F8FE7578E8A312953CA12AE864509D);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteral86E8370248F8FE7578E8A312953CA12AE864509D);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_14 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4738));
		NullCheck(L_14);
		String_t* L_15 = VirtFuncInvoker0< String_t* >::Invoke(17 /* System.String Valve.VR.SteamVR_Action::get_fullPath() */, L_14);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4738));
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_15);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_15);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_13;
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_17 = L_16;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4739));
		RuntimeObject * L_18 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_18);
		String_t* L_19 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_18);
		V_0 = *(int32_t*)UnBox(L_18);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4739));
		NullCheck(L_17);
		ArrayElementTypeCheck (L_17, L_19);
		(L_17)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_19);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_17;
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_21 = L_20;
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_22 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4740));
		NullCheck(L_22);
		uint64_t L_23 = VirtFuncInvoker0< uint64_t >::Invoke(18 /* System.UInt64 Valve.VR.SteamVR_Action::get_handle() */, L_22);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4740));
		V_2 = L_23;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4741));
		String_t* L_24 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4741));
		NullCheck(L_21);
		ArrayElementTypeCheck (L_21, L_24);
		(L_21)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_24);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4742));
		String_t* L_25 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_21, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4742));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4743));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_25, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4743));
	}

IL_00a6:
	{
		// if (changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4703));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4744));
		bool L_26 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4744));
		V_3 = L_26;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4704));
		bool L_27 = V_3;
		if (!L_27)
		{
			goto IL_00c8;
		}
	}
	{
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4705));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4745));
		float L_28 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4745));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_29 = __this->get_address_of_actionData_19();
		float L_30 = L_29->get_fUpdateTime_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4746));
		SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline(__this, ((float)il2cpp_codegen_add((float)L_28, (float)L_30)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4746));
	}

IL_00c8:
	{
		// updateTime = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4706));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4747));
		float L_31 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4747));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4748));
		SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline(__this, L_31, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4748));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4707));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4749));
		bool L_32 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4749));
		V_4 = L_32;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4708));
		bool L_33 = V_4;
		if (!L_33)
		{
			goto IL_01d4;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4709));
		// if (onStateDown != null && stateDown)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4710));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_34 = __this->get_onStateDown_11();
		if (!L_34)
		{
			goto IL_00f4;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4750));
		bool L_35 = SteamVR_Action_Boolean_Source_get_stateDown_mD93D2D18C3C28F2572DAC1D838EF4CCD42D195AD(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4750));
		G_B8_0 = ((int32_t)(L_35));
		goto IL_00f5;
	}

IL_00f4:
	{
		G_B8_0 = 0;
	}

IL_00f5:
	{
		V_5 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4711));
		bool L_36 = V_5;
		if (!L_36)
		{
			goto IL_0113;
		}
	}
	{
		// onStateDown.Invoke(booleanAction, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4712));
		StateDownHandler_t7D29100BA5CD0DFB8B7AE4388E1AB7AF114F4464 * L_37 = __this->get_onStateDown_11();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_38 = __this->get_booleanAction_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4751));
		int32_t L_39 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4751));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4752));
		NullCheck(L_37);
		StateDownHandler_Invoke_mBAD714BEB0B3CDDD1301544003C7C42C17743084(L_37, L_38, L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4752));
	}

IL_0113:
	{
		// if (onStateUp != null && stateUp)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4713));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_40 = __this->get_onStateUp_12();
		if (!L_40)
		{
			goto IL_0123;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4753));
		bool L_41 = SteamVR_Action_Boolean_Source_get_stateUp_mAA4C63A11FE1454774A8678D9D6BABE856B0C6CC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4753));
		G_B13_0 = ((int32_t)(L_41));
		goto IL_0124;
	}

IL_0123:
	{
		G_B13_0 = 0;
	}

IL_0124:
	{
		V_6 = (bool)G_B13_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4714));
		bool L_42 = V_6;
		if (!L_42)
		{
			goto IL_0142;
		}
	}
	{
		// onStateUp.Invoke(booleanAction, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4715));
		StateUpHandler_t74A1CE14E1749B62B14281BCFA09CB750D7A5ED8 * L_43 = __this->get_onStateUp_12();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_44 = __this->get_booleanAction_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4754));
		int32_t L_45 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4754));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4755));
		NullCheck(L_43);
		StateUpHandler_Invoke_m8243F855D40DEA046F71E82DB601D20DEFBED41A(L_43, L_44, L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4755));
	}

IL_0142:
	{
		// if (onState != null && state)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4716));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_46 = __this->get_onState_13();
		if (!L_46)
		{
			goto IL_0152;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4756));
		bool L_47 = SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4756));
		G_B18_0 = ((int32_t)(L_47));
		goto IL_0153;
	}

IL_0152:
	{
		G_B18_0 = 0;
	}

IL_0153:
	{
		V_7 = (bool)G_B18_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4717));
		bool L_48 = V_7;
		if (!L_48)
		{
			goto IL_0171;
		}
	}
	{
		// onState.Invoke(booleanAction, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4718));
		StateHandler_tBBEC523C11F1EC99BF356128B427327EF349EAFA * L_49 = __this->get_onState_13();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_50 = __this->get_booleanAction_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4757));
		int32_t L_51 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4757));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4758));
		NullCheck(L_49);
		StateHandler_Invoke_m1CDA16A03E31472750E45DECCE4B6136482C0F46(L_49, L_50, L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4758));
	}

IL_0171:
	{
		// if (onChange != null && changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4719));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_52 = __this->get_onChange_16();
		if (!L_52)
		{
			goto IL_0181;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4759));
		bool L_53 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4759));
		G_B23_0 = ((int32_t)(L_53));
		goto IL_0182;
	}

IL_0181:
	{
		G_B23_0 = 0;
	}

IL_0182:
	{
		V_8 = (bool)G_B23_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4720));
		bool L_54 = V_8;
		if (!L_54)
		{
			goto IL_01a6;
		}
	}
	{
		// onChange.Invoke(booleanAction, inputSource, state);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4721));
		ChangeHandler_tBE955A4C204CE64CDAD63911BA738EC2873DF7B0 * L_55 = __this->get_onChange_16();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_56 = __this->get_booleanAction_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4760));
		int32_t L_57 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4760));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4761));
		bool L_58 = SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4761));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4762));
		NullCheck(L_55);
		ChangeHandler_Invoke_m953BCC74C1105C1EA81FEBEC410157082FE98E81(L_55, L_56, L_57, L_58, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4762));
	}

IL_01a6:
	{
		// if (onUpdate != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4722));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_59 = __this->get_onUpdate_17();
		V_9 = (bool)((!(((RuntimeObject*)(UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B *)L_59) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4723));
		bool L_60 = V_9;
		if (!L_60)
		{
			goto IL_01d3;
		}
	}
	{
		// onUpdate.Invoke(booleanAction, inputSource, state);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4724));
		UpdateHandler_tC5DA62D5AA34319AAE9E044A4D98A942E9F7738B * L_61 = __this->get_onUpdate_17();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_62 = __this->get_booleanAction_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4763));
		int32_t L_63 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4763));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4764));
		bool L_64 = SteamVR_Action_Boolean_Source_get_state_mBB0E6E5F96F7C6AEF6BCBC227F8BEA1CA595E804(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4764));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4765));
		NullCheck(L_61);
		UpdateHandler_Invoke_m9C95A4E4CA301E2E6DADBCF2ABCDE00671ECBAF5(L_61, L_62, L_63, L_64, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4765));
	}

IL_01d3:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4725));
	}

IL_01d4:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4726));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_65 = __this->get_onActiveBindingChange_15();
		if (!L_65)
		{
			goto IL_01ef;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4766));
		bool L_66 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4766));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4767));
		bool L_67 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4767));
		G_B31_0 = ((((int32_t)((((int32_t)L_66) == ((int32_t)L_67))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_01f0;
	}

IL_01ef:
	{
		G_B31_0 = 0;
	}

IL_01f0:
	{
		V_10 = (bool)G_B31_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4727));
		bool L_68 = V_10;
		if (!L_68)
		{
			goto IL_0214;
		}
	}
	{
		// onActiveBindingChange.Invoke(booleanAction, inputSource, activeBinding);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4728));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_69 = __this->get_onActiveBindingChange_15();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_70 = __this->get_booleanAction_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4768));
		int32_t L_71 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4768));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4769));
		bool L_72 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4769));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4770));
		NullCheck(L_69);
		ActiveChangeHandler_Invoke_mFB2090F4429E50979967A677C25DA938F97B620D(L_69, L_70, L_71, L_72, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4770));
	}

IL_0214:
	{
		// if (onActiveChange != null && lastActive != active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4729));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_73 = __this->get_onActiveChange_14();
		if (!L_73)
		{
			goto IL_022f;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4771));
		bool L_74 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4771));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4772));
		bool L_75 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4772));
		G_B36_0 = ((((int32_t)((((int32_t)L_74) == ((int32_t)L_75))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0230;
	}

IL_022f:
	{
		G_B36_0 = 0;
	}

IL_0230:
	{
		V_11 = (bool)G_B36_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4730));
		bool L_76 = V_11;
		if (!L_76)
		{
			goto IL_0254;
		}
	}
	{
		// onActiveChange.Invoke(booleanAction, inputSource, activeBinding);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4731));
		ActiveChangeHandler_t584ACF2DBF380A045627C7F3830B6B7356BBD884 * L_77 = __this->get_onActiveChange_14();
		SteamVR_Action_Boolean_tE41AFE2395D4C8B9ED8BE1298F3545B4832E8C20 * L_78 = __this->get_booleanAction_21();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4773));
		int32_t L_79 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4773));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4774));
		bool L_80 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4774));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4775));
		NullCheck(L_77);
		ActiveChangeHandler_Invoke_mFB2090F4429E50979967A677C25DA938F97B620D(L_77, L_78, L_79, L_80, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4775));
	}

IL_0254:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4732));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source__ctor_mDBC93FE6A1BDB4E3FCF081D526DE205DBEEA4604 (SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source__ctor_mDBC93FE6A1BDB4E3FCF081D526DE205DBEEA4604_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source__ctor_mDBC93FE6A1BDB4E3FCF081D526DE205DBEEA4604_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4776));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4777));
	{
		// protected InputDigitalActionData_t actionData = new InputDigitalActionData_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4778));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_0 = __this->get_address_of_actionData_19();
		il2cpp_codegen_initobj(L_0, sizeof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 ));
		// protected InputDigitalActionData_t lastActionData = new InputDigitalActionData_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4779));
		InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 * L_1 = __this->get_address_of_lastActionData_20();
		il2cpp_codegen_initobj(L_1, sizeof(InputDigitalActionData_t_tD29EC7460AD65DE5432FCB47474BDDC4F19A7AB1 ));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4780));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4780));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Boolean_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source__cctor_m8822ACDFE8D4D06D68D64A938FEDDCCFCD8F9BA5 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source__cctor_m8822ACDFE8D4D06D68D64A938FEDDCCFCD8F9BA5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source__cctor_m8822ACDFE8D4D06D68D64A938FEDDCCFCD8F9BA5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4781));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 4782));
	{
		// protected static uint actionData_size = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 4783));
		((SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Boolean_Source_tE128EC6456E34F137E60C633AEE81FB3CB900EEB_il2cpp_TypeInfo_var))->set_actionData_size_10(0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Boolean_Source_Map::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Boolean_Source_Map__ctor_mAAF780ED996AD99DCFC4B1E148A4AA7E419EEEFC (SteamVR_Action_Boolean_Source_Map_tF5558AC3C11798E60DC5152DD2FB5E835D79AA3B * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Boolean_Source_Map__ctor_mAAF780ED996AD99DCFC4B1E148A4AA7E419EEEFC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Boolean_Source_Map__ctor_mAAF780ED996AD99DCFC4B1E148A4AA7E419EEEFC_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		SteamVR_Action_In_Source_Map_1__ctor_mE09AB88DCEFF91428F5A5C11BC337B2DEA0E492B(__this, /*hidden argument*/SteamVR_Action_In_Source_Map_1__ctor_mE09AB88DCEFF91428F5A5C11BC337B2DEA0E492B_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Boolean Valve.VR.SteamVR_Action_In_Source::get_isUpdating()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_In_Source_get_isUpdating_m85A55DF822095397B0032B8627D56ABA9F1F0A60 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_isUpdating_m85A55DF822095397B0032B8627D56ABA9F1F0A60_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_isUpdating_m85A55DF822095397B0032B8627D56ABA9F1F0A60_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5002));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5003));
	{
		// public bool isUpdating { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5004));
		bool L_0 = __this->get_U3CisUpdatingU3Ek__BackingField_4();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::set_isUpdating(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_isUpdating_m907328DCCD2733DA877A4914FCEEAA08BF4527EE (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_set_isUpdating_m907328DCCD2733DA877A4914FCEEAA08BF4527EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_set_isUpdating_m907328DCCD2733DA877A4914FCEEAA08BF4527EE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5005));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5006));
	{
		// public bool isUpdating { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5007));
		bool L_0 = ___value0;
		__this->set_U3CisUpdatingU3Ek__BackingField_4(L_0);
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_In_Source::get_updateTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5008));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5009));
	{
		// public float updateTime { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5010));
		float L_0 = __this->get_U3CupdateTimeU3Ek__BackingField_5();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::set_updateTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5011));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5012));
	{
		// public float updateTime { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5013));
		float L_0 = ___value0;
		__this->set_U3CupdateTimeU3Ek__BackingField_5(L_0);
		return;
	}
}
// Valve.VR.SteamVR_Input_Sources Valve.VR.SteamVR_Action_In_Source::get_activeDevice()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_In_Source_get_activeDevice_m889780B67CDEDA524D6D5B264228DF2598AC3ED7 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_activeDevice_m889780B67CDEDA524D6D5B264228DF2598AC3ED7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_activeDevice_m889780B67CDEDA524D6D5B264228DF2598AC3ED7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5014));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5015));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5016));
		// public SteamVR_Input_Sources activeDevice { get { UpdateOriginTrackedDeviceInfo();  return SteamVR_Input_Source.GetSource(inputOriginInfo.devicePath); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5017));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5020));
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5020));
		// public SteamVR_Input_Sources activeDevice { get { UpdateOriginTrackedDeviceInfo();  return SteamVR_Input_Source.GetSource(inputOriginInfo.devicePath); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5018));
		InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * L_0 = __this->get_address_of_inputOriginInfo_8();
		uint64_t L_1 = L_0->get_devicePath_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5021));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		int32_t L_2 = SteamVR_Input_Source_GetSource_mA164CF850044FA00ACCF139C47A575894CF8E04F(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5021));
		V_0 = L_2;
		goto IL_001b;
	}

IL_001b:
	{
		// public SteamVR_Input_Sources activeDevice { get { UpdateOriginTrackedDeviceInfo();  return SteamVR_Input_Source.GetSource(inputOriginInfo.devicePath); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5019));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.UInt32 Valve.VR.SteamVR_Action_In_Source::get_trackedDeviceIndex()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint32_t SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_trackedDeviceIndex_m59E74A19E16DBA17CB6C467C0DB2B2F78FBCB9EE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5022));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5023));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5024));
		// public uint trackedDeviceIndex { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.trackedDeviceIndex; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5025));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5028));
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5028));
		// public uint trackedDeviceIndex { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.trackedDeviceIndex; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5026));
		InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * L_0 = __this->get_address_of_inputOriginInfo_8();
		uint32_t L_1 = L_0->get_trackedDeviceIndex_1();
		V_0 = L_1;
		goto IL_0016;
	}

IL_0016:
	{
		// public uint trackedDeviceIndex { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.trackedDeviceIndex; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5027));
		uint32_t L_2 = V_0;
		return L_2;
	}
}
// System.String Valve.VR.SteamVR_Action_In_Source::get_renderModelComponentName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_get_renderModelComponentName_mC1CB2C1D9A4CC549A42F33229CA0A897918DC116 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_renderModelComponentName_mC1CB2C1D9A4CC549A42F33229CA0A897918DC116_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_renderModelComponentName_mC1CB2C1D9A4CC549A42F33229CA0A897918DC116_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5029));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5030));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5031));
		// public string renderModelComponentName { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.rchRenderModelComponentName; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5032));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5035));
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5035));
		// public string renderModelComponentName { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.rchRenderModelComponentName; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5033));
		InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * L_0 = __this->get_address_of_inputOriginInfo_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5036));
		String_t* L_1 = InputOriginInfo_t_get_rchRenderModelComponentName_m9B8B4E08EA4E7AA048D4DD0BFEF65EBFD7641883((InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A *)L_0, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5036));
		V_0 = L_1;
		goto IL_0016;
	}

IL_0016:
	{
		// public string renderModelComponentName { get { UpdateOriginTrackedDeviceInfo(); return inputOriginInfo.rchRenderModelComponentName; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5034));
		String_t* L_2 = V_0;
		return L_2;
	}
}
// System.String Valve.VR.SteamVR_Action_In_Source::get_localizedOriginName()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_get_localizedOriginName_mDC95A0FF89C4C7DC1DE3C14CB77709E74A0F5508 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_localizedOriginName_mDC95A0FF89C4C7DC1DE3C14CB77709E74A0F5508_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	String_t* V_0 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_localizedOriginName_mDC95A0FF89C4C7DC1DE3C14CB77709E74A0F5508_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5037));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5038));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5039));
		// public string localizedOriginName { get { UpdateOriginTrackedDeviceInfo(); return GetLocalizedOrigin(); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5040));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5043));
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5043));
		// public string localizedOriginName { get { UpdateOriginTrackedDeviceInfo(); return GetLocalizedOrigin(); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5041));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5044));
		String_t* L_0 = SteamVR_Action_In_Source_GetLocalizedOrigin_m3F7940786DFA6BAC3C618A67EA65C503E585D9CC(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5044));
		V_0 = L_0;
		goto IL_0011;
	}

IL_0011:
	{
		// public string localizedOriginName { get { UpdateOriginTrackedDeviceInfo(); return GetLocalizedOrigin(); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5042));
		String_t* L_1 = V_0;
		return L_1;
	}
}
// System.Single Valve.VR.SteamVR_Action_In_Source::get_changedTime()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_In_Source_get_changedTime_m55B868F934C945AF841AD79C7418EE75F54B9319 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_changedTime_m55B868F934C945AF841AD79C7418EE75F54B9319_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_changedTime_m55B868F934C945AF841AD79C7418EE75F54B9319_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5045));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5046));
	{
		// public float changedTime { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5047));
		float L_0 = __this->get_U3CchangedTimeU3Ek__BackingField_6();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::set_changedTime(System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5048));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5049));
	{
		// public float changedTime { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5050));
		float L_0 = ___value0;
		__this->set_U3CchangedTimeU3Ek__BackingField_6(L_0);
		return;
	}
}
// System.Int32 Valve.VR.SteamVR_Action_In_Source::get_lastOriginGetFrame()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5051));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5052));
	{
		// protected int lastOriginGetFrame { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5053));
		int32_t L_0 = __this->get_U3ClastOriginGetFrameU3Ek__BackingField_7();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::set_lastOriginGetFrame(System.Int32)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5054));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5055));
	{
		// protected int lastOriginGetFrame { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5056));
		int32_t L_0 = ___value0;
		__this->set_U3ClastOriginGetFrameU3Ek__BackingField_7(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5057));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5058));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5059));
		// base.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5060));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5065));
		SteamVR_Action_Source_Initialize_m712F1B6FEBD8059CBB80EC50CC0F16F528023E64(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5065));
		// if (inputOriginInfo_size == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5061));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var))->get_inputOriginInfo_size_3();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5062));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// inputOriginInfo_size = (uint)Marshal.SizeOf(typeof(InputOriginInfo_t));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5063));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5066));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5066));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5067));
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5067));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		((SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var))->set_inputOriginInfo_size_3(L_4);
	}

IL_0028:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5064));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::UpdateOriginTrackedDeviceInfo()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	int32_t V_1 = 0;
	bool V_2 = false;
	uint64_t V_3 = 0;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5068));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5069));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5070));
		// if (lastOriginGetFrame != Time.frameCount) //only get once per frame
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5071));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5082));
		int32_t L_0 = SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5082));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5083));
		int32_t L_1 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5083));
		V_0 = (bool)((((int32_t)((((int32_t)L_0) == ((int32_t)L_1))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5072));
		bool L_2 = V_0;
		if (!L_2)
		{
			goto IL_00e1;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5073));
		// EVRInputError err = OpenVR.Input.GetOriginTrackedDeviceInfo(activeOrigin, ref inputOriginInfo, inputOriginInfo_size);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5074));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5084));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_3 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5084));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5085));
		uint64_t L_4 = VirtFuncInvoker0< uint64_t >::Invoke(29 /* System.UInt64 Valve.VR.SteamVR_Action_In_Source::get_activeOrigin() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5085));
		InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * L_5 = __this->get_address_of_inputOriginInfo_8();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		uint32_t L_6 = ((SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var))->get_inputOriginInfo_size_3();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5086));
		NullCheck(L_3);
		int32_t L_7 = CVRInput_GetOriginTrackedDeviceInfo_m7827785EB25A3AB7F1255235E91C5EBD041FA2BB(L_3, L_4, (InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A *)L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5086));
		V_1 = L_7;
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5075));
		int32_t L_8 = V_1;
		V_2 = (bool)((!(((uint32_t)L_8) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5076));
		bool L_9 = V_2;
		if (!L_9)
		{
			goto IL_00c8;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetOriginTrackedDeviceInfo error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString() + " activeOrigin: " + activeOrigin.ToString() + " active: " + active);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5077));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)((int32_t)10));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralBF36B31510F1F60267BB121C5485B7F7FC7D7D59);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralBF36B31510F1F60267BB121C5485B7F7FC7D7D59);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5087));
		String_t* L_13 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5087));
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_12;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5088));
		RuntimeObject * L_16 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_1));
		NullCheck(L_16);
		String_t* L_17 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_16);
		V_1 = *(int32_t*)UnBox(L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5088));
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_17);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_17);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_15;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5089));
		uint64_t L_20 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5089));
		V_3 = L_20;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5090));
		String_t* L_21 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5090));
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_21);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_21);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_22 = L_19;
		NullCheck(L_22);
		ArrayElementTypeCheck (L_22, _stringLiteral89D0E943F4CBF79958E13F52A770E6F67C06F387);
		(L_22)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral89D0E943F4CBF79958E13F52A770E6F67C06F387);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_23 = L_22;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5091));
		uint64_t L_24 = VirtFuncInvoker0< uint64_t >::Invoke(29 /* System.UInt64 Valve.VR.SteamVR_Action_In_Source::get_activeOrigin() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5091));
		V_3 = L_24;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5092));
		String_t* L_25 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5092));
		NullCheck(L_23);
		ArrayElementTypeCheck (L_23, L_25);
		(L_23)->SetAt(static_cast<il2cpp_array_size_t>(7), (String_t*)L_25);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_26 = L_23;
		NullCheck(L_26);
		ArrayElementTypeCheck (L_26, _stringLiteral8F81A123645902E7859F319F49E4414C0F77D44E);
		(L_26)->SetAt(static_cast<il2cpp_array_size_t>(8), (String_t*)_stringLiteral8F81A123645902E7859F319F49E4414C0F77D44E);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_27 = L_26;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5093));
		bool L_28 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5093));
		V_4 = L_28;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5094));
		String_t* L_29 = Boolean_ToString_m62D1EFD5F6D5F6B6AF0D14A07BF5741C94413301((bool*)(&V_4), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5094));
		NullCheck(L_27);
		ArrayElementTypeCheck (L_27, L_29);
		(L_27)->SetAt(static_cast<il2cpp_array_size_t>(((int32_t)9)), (String_t*)L_29);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5095));
		String_t* L_30 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_27, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5095));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5096));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5096));
	}

IL_00c8:
	{
		// lastInputOriginInfo = inputOriginInfo;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5078));
		InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A  L_31 = __this->get_inputOriginInfo_8();
		__this->set_lastInputOriginInfo_9(L_31);
		// lastOriginGetFrame = Time.frameCount;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5079));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5097));
		int32_t L_32 = Time_get_frameCount_m97573E267B487B8FD4BF37615AFC19BED7B4E436(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5097));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5098));
		SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73_inline(__this, L_32, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5098));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5080));
	}

IL_00e1:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5081));
		return;
	}
}
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOriginPart(Valve.VR.EVRInputStringBits[])
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOriginPart_m8A1FC7BEF4660C4D7D7573EE13F399C76D325938 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* ___localizedParts0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_GetLocalizedOriginPart_m8A1FC7BEF4660C4D7D7573EE13F399C76D325938_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___localizedParts0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_GetLocalizedOriginPart_m8A1FC7BEF4660C4D7D7573EE13F399C76D325938_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5099));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5100));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5101));
		// UpdateOriginTrackedDeviceInfo();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5102));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5109));
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5109));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5103));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5110));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5110));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5104));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0022;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5105));
		// return SteamVR_Input.GetLocalizedName(activeOrigin, localizedParts);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5106));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5111));
		uint64_t L_2 = VirtFuncInvoker0< uint64_t >::Invoke(29 /* System.UInt64 Valve.VR.SteamVR_Action_In_Source::get_activeOrigin() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5111));
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_3 = ___localizedParts0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5112));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		String_t* L_4 = SteamVR_Input_GetLocalizedName_m0EC52235A6671CC04A8BB9273358737AA49C8FF8(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5112));
		V_1 = L_4;
		goto IL_0026;
	}

IL_0022:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5107));
		V_1 = (String_t*)NULL;
		goto IL_0026;
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5108));
		String_t* L_5 = V_1;
		return L_5;
	}
}
// System.String Valve.VR.SteamVR_Action_In_Source::GetLocalizedOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR String_t* SteamVR_Action_In_Source_GetLocalizedOrigin_m3F7940786DFA6BAC3C618A67EA65C503E585D9CC (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_GetLocalizedOrigin_m3F7940786DFA6BAC3C618A67EA65C503E585D9CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	String_t* V_1 = NULL;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_GetLocalizedOrigin_m3F7940786DFA6BAC3C618A67EA65C503E585D9CC_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5113));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5114));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5115));
		// UpdateOriginTrackedDeviceInfo();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5116));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5123));
		SteamVR_Action_In_Source_UpdateOriginTrackedDeviceInfo_m9EE0C9A2A88B0CB8AB41B534A89384A484D1AE3E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5123));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5117));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5124));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5124));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5118));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_002b;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5119));
		// return SteamVR_Input.GetLocalizedName(activeOrigin, EVRInputStringBits.VRInputString_All);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5120));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5125));
		uint64_t L_2 = VirtFuncInvoker0< uint64_t >::Invoke(29 /* System.UInt64 Valve.VR.SteamVR_Action_In_Source::get_activeOrigin() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5125));
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_3 = (EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*)(EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511*)SZArrayNew(EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511_il2cpp_TypeInfo_var, (uint32_t)1);
		EVRInputStringBitsU5BU5D_t9F9E9B47CD745CAAB4F8EDC305D84DDF9E5BE511* L_4 = L_3;
		NullCheck(L_4);
		(L_4)->SetAt(static_cast<il2cpp_array_size_t>(0), (int32_t)(-1));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5126));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_tCE4A1EC6C51592CB9DCD7B860984CB2C4DD937BF_il2cpp_TypeInfo_var);
		String_t* L_5 = SteamVR_Input_GetLocalizedName_m0EC52235A6671CC04A8BB9273358737AA49C8FF8(L_2, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5126));
		V_1 = L_5;
		goto IL_002f;
	}

IL_002b:
	{
		// return null;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5121));
		V_1 = (String_t*)NULL;
		goto IL_002f;
	}

IL_002f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5122));
		String_t* L_6 = V_1;
		return L_6;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816 (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5127));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5128));
	{
		// protected InputOriginInfo_t inputOriginInfo = new InputOriginInfo_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5129));
		InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * L_0 = __this->get_address_of_inputOriginInfo_8();
		il2cpp_codegen_initobj(L_0, sizeof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A ));
		// protected InputOriginInfo_t lastInputOriginInfo = new InputOriginInfo_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5130));
		InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A * L_1 = __this->get_address_of_lastInputOriginInfo_9();
		il2cpp_codegen_initobj(L_1, sizeof(InputOriginInfo_t_t3705CF3B58A0333E5B99988AEC0CF03B79777C3A ));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5131));
		SteamVR_Action_Source__ctor_m50ABEE6BD7F519AB9E0296103A69073EEA2D6576(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5131));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_In_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source__cctor_m36E304B105D4788BDC6EB9B808AE5147F2F1E91F (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source__cctor_m36E304B105D4788BDC6EB9B808AE5147F2F1E91F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source__cctor_m36E304B105D4788BDC6EB9B808AE5147F2F1E91F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5132));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5133));
	{
		// protected static uint inputOriginInfo_size = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5134));
		((SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var))->set_inputOriginInfo_size_3(0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Out_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218 (SteamVR_Action_Out_Source_t6BAB7CAA13DB2A871A892C09BFF55378A6D327D6 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Out_Source__ctor_m94E0A4CA13520D0D8AA70594089391D9F64E5218_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		SteamVR_Action_Source__ctor_m50ABEE6BD7F519AB9E0296103A69073EEA2D6576(__this, /*hidden argument*/NULL);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose::add_onActiveChange(Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onActiveChange_m2C9460C4B684E83B5E42E964A1248F7A1502E619 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onActiveChange_m2C9460C4B684E83B5E42E964A1248F7A1502E619_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_add_onActiveChange_m2C9460C4B684E83B5E42E964A1248F7A1502E619_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5135));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5136));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5137));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5138));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5140));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5140));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5141));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onActiveChange_m6C3297DBA3E2608BE985FA75EE8D46EAC5C792B2(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5141));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5139));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onActiveChange(Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onActiveChange_m4893657BF47B36BA49B49EF674AA405D56DBAD36 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onActiveChange_m4893657BF47B36BA49B49EF674AA405D56DBAD36_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_remove_onActiveChange_m4893657BF47B36BA49B49EF674AA405D56DBAD36_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5142));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5143));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5144));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5145));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5147));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5147));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5148));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onActiveChange_m0D6A09A4D2599E4EECF2460CF2A3B7466BC0B739(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5148));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5146));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onActiveBindingChange_m4E51D8BA780E1CD094EA1D5F9D268147ED655C3A (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onActiveBindingChange_m4E51D8BA780E1CD094EA1D5F9D268147ED655C3A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_add_onActiveBindingChange_m4E51D8BA780E1CD094EA1D5F9D268147ED655C3A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5149));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5150));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5151));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5152));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5154));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5154));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5155));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onActiveBindingChange_m2CCB91E08B318C4D6A45A8356BBAA73BC9831580(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5155));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5153));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onActiveBindingChange_m1251EBFEF53A76139F9DC74AD1C57B5279A0BFAB (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onActiveBindingChange_m1251EBFEF53A76139F9DC74AD1C57B5279A0BFAB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_remove_onActiveBindingChange_m1251EBFEF53A76139F9DC74AD1C57B5279A0BFAB_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5156));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5157));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5158));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5159));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5161));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5161));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5162));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m800A450B68164A69677E890066A3C6CE0B59BD15(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5162));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5160));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onChange(Valve.VR.SteamVR_Action_Pose_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onChange_mFB47B69DF9CCD9457EED2CDC3BA02ECD5319C8A4 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onChange_mFB47B69DF9CCD9457EED2CDC3BA02ECD5319C8A4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_add_onChange_mFB47B69DF9CCD9457EED2CDC3BA02ECD5319C8A4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5163));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5164));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5165));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5166));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5168));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5168));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5169));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5169));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5167));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onChange(Valve.VR.SteamVR_Action_Pose_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onChange_m572391872A10026D1F3A893109200E1D8CFBFF68 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onChange_m572391872A10026D1F3A893109200E1D8CFBFF68_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_remove_onChange_m572391872A10026D1F3A893109200E1D8CFBFF68_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5170));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5171));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5172));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5173));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5175));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5175));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5176));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5176));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5174));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onUpdate(Valve.VR.SteamVR_Action_Pose_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onUpdate_m9D1B219D37CA69D76CB0BC892B25EA535D74EE52 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onUpdate_m9D1B219D37CA69D76CB0BC892B25EA535D74EE52_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_add_onUpdate_m9D1B219D37CA69D76CB0BC892B25EA535D74EE52_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5177));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5178));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5179));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5180));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5182));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5182));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5183));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5183));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5181));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onUpdate(Valve.VR.SteamVR_Action_Pose_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onUpdate_m0611D358B7BAEC00E1F2FDF0D2307DCDB0E04071 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onUpdate_m0611D358B7BAEC00E1F2FDF0D2307DCDB0E04071_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_remove_onUpdate_m0611D358B7BAEC00E1F2FDF0D2307DCDB0E04071_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5184));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5185));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5186));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5187));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5189));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5189));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5190));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5190));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5188));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onTrackingChanged_m173F94A21080D3BFB441E77226685BDDB028E094 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onTrackingChanged_m173F94A21080D3BFB441E77226685BDDB028E094_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_add_onTrackingChanged_m173F94A21080D3BFB441E77226685BDDB028E094_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5191));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5192));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5193));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5194));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5196));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5196));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5197));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5197));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5195));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onTrackingChanged_m2E8165405E4A93E6A72DE9EE8DD1A11027A4A185 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onTrackingChanged_m2E8165405E4A93E6A72DE9EE8DD1A11027A4A185_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_remove_onTrackingChanged_m2E8165405E4A93E6A72DE9EE8DD1A11027A4A185_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5198));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5199));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5200));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5201));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5203));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5203));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5204));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5204));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onTrackingChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5202));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onValidPoseChanged_m6B627239BB39BE78A8FCD289EF78C285D437E959 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onValidPoseChanged_m6B627239BB39BE78A8FCD289EF78C285D437E959_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_add_onValidPoseChanged_m6B627239BB39BE78A8FCD289EF78C285D437E959_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5205));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5206));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5207));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5208));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5210));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5210));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5211));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onValidPoseChanged_m35C4DDEF19BCA4F9606F36E545FF6D39461DF637(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5211));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5209));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onValidPoseChanged_mFFD4D9D7B0C1E4F143E06F2245A509F4BC557D85 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onValidPoseChanged_mFFD4D9D7B0C1E4F143E06F2245A509F4BC557D85_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_remove_onValidPoseChanged_mFFD4D9D7B0C1E4F143E06F2245A509F4BC557D85_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5212));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5213));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5214));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5215));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5217));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5217));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5218));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onValidPoseChanged_m30DDDE1F913F495779B5369059C11D07D18A8749(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5218));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onValidPoseChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5216));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_add_onDeviceConnectedChanged_m52B59F6B261F37924D761281073948E423B6C935 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_add_onDeviceConnectedChanged_m52B59F6B261F37924D761281073948E423B6C935_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_add_onDeviceConnectedChanged_m52B59F6B261F37924D761281073948E423B6C935_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5219));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5220));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5221));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5222));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5224));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5224));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5225));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5225));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5223));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_remove_onDeviceConnectedChanged_m663D3DE49E146E4EE2A5D21E1ECAAB27883E257A (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_remove_onDeviceConnectedChanged_m663D3DE49E146E4EE2A5D21E1ECAAB27883E257A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_remove_onDeviceConnectedChanged_m663D3DE49E146E4EE2A5D21E1ECAAB27883E257A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5226));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5227));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5228));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5229));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5231));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_1 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5231));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5232));
		NullCheck(L_1);
		SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5232));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onDeviceConnectedChanged -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5230));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnDeviceConnectedChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnDeviceConnectedChanged_m80082F78AEA2CBCAB4DCB78A8CD9CBB274846209 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnDeviceConnectedChanged_m80082F78AEA2CBCAB4DCB78A8CD9CBB274846209_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToCall1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_AddOnDeviceConnectedChanged_m80082F78AEA2CBCAB4DCB78A8CD9CBB274846209_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5233));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5234));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5235));
		// sourceMap[inputSource].onDeviceConnectedChanged += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5236));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5238));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5238));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_3 = ___functionToCall1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5239));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5239));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5237));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnDeviceConnectedChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnDeviceConnectedChanged_m364AA5B2A2F44F0E1135422C18F886038F4134E9 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnDeviceConnectedChanged_m364AA5B2A2F44F0E1135422C18F886038F4134E9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToStopCalling1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_RemoveOnDeviceConnectedChanged_m364AA5B2A2F44F0E1135422C18F886038F4134E9_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5240));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5241));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5242));
		// sourceMap[inputSource].onDeviceConnectedChanged -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5243));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5245));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5245));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_3 = ___functionToStopCalling1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5246));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5246));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5244));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnTrackingChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnTrackingChanged_m05560B3FD5E3B66303CE4B8A9652A450C0A89D55 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnTrackingChanged_m05560B3FD5E3B66303CE4B8A9652A450C0A89D55_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToCall1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_AddOnTrackingChanged_m05560B3FD5E3B66303CE4B8A9652A450C0A89D55_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5247));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5248));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5249));
		// sourceMap[inputSource].onTrackingChanged += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5250));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5252));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5252));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_3 = ___functionToCall1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5253));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5253));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5251));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnTrackingChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnTrackingChanged_m275E06D55C0CEA46D0A8B8C1223D082C9EB739EE (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnTrackingChanged_m275E06D55C0CEA46D0A8B8C1223D082C9EB739EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToStopCalling1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_RemoveOnTrackingChanged_m275E06D55C0CEA46D0A8B8C1223D082C9EB739EE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5254));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5255));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5256));
		// sourceMap[inputSource].onTrackingChanged -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5257));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5259));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5259));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_3 = ___functionToStopCalling1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5260));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5260));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5258));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnValidPoseChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnValidPoseChanged_m6EDFA42DACF408A48A96BFB2E949BEE84119D9CA (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnValidPoseChanged_m6EDFA42DACF408A48A96BFB2E949BEE84119D9CA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToCall1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_AddOnValidPoseChanged_m6EDFA42DACF408A48A96BFB2E949BEE84119D9CA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5261));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5262));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5263));
		// sourceMap[inputSource].onValidPoseChanged += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5264));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5266));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5266));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_3 = ___functionToCall1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5267));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onValidPoseChanged_m35C4DDEF19BCA4F9606F36E545FF6D39461DF637(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5267));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5265));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnValidPoseChanged(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnValidPoseChanged_m6619193D1BA39DEB98C872B29CA28BA7FA64F98A (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnValidPoseChanged_m6619193D1BA39DEB98C872B29CA28BA7FA64F98A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToStopCalling1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_RemoveOnValidPoseChanged_m6619193D1BA39DEB98C872B29CA28BA7FA64F98A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5268));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5269));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5270));
		// sourceMap[inputSource].onValidPoseChanged -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5271));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5273));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5273));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_3 = ___functionToStopCalling1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5274));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onValidPoseChanged_m30DDDE1F913F495779B5369059C11D07D18A8749(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5274));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5272));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnActiveChangeListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnActiveChangeListener_mBBBEE095B66D0EF219F53B0FC4B6A229D1D8332D (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnActiveChangeListener_mBBBEE095B66D0EF219F53B0FC4B6A229D1D8332D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToCall1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_AddOnActiveChangeListener_mBBBEE095B66D0EF219F53B0FC4B6A229D1D8332D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5275));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5276));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5277));
		// sourceMap[inputSource].onActiveChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5278));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5280));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5280));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___functionToCall1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5281));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onActiveChange_m6C3297DBA3E2608BE985FA75EE8D46EAC5C792B2(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5281));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5279));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnActiveChangeListener_m69ECF77A80ADF89DD301AF65324001517F00DC3E (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnActiveChangeListener_m69ECF77A80ADF89DD301AF65324001517F00DC3E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToStopCalling1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_RemoveOnActiveChangeListener_m69ECF77A80ADF89DD301AF65324001517F00DC3E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5282));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5283));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5284));
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5285));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5287));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5287));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___functionToStopCalling1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5288));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onActiveChange_m0D6A09A4D2599E4EECF2460CF2A3B7466BC0B739(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5288));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5286));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnChangeListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnChangeListener_mE2A71EBE8C1F94A46CA2C4FC318926B5DF779678 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnChangeListener_mE2A71EBE8C1F94A46CA2C4FC318926B5DF779678_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToCall1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_AddOnChangeListener_mE2A71EBE8C1F94A46CA2C4FC318926B5DF779678_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5289));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5290));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5291));
		// sourceMap[inputSource].onChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5292));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5294));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5294));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_3 = ___functionToCall1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5295));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5295));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5293));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnChangeListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnChangeListener_m521DDEC9E3616B72746F67EAEC417D87268265F8 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnChangeListener_m521DDEC9E3616B72746F67EAEC417D87268265F8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToStopCalling1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_RemoveOnChangeListener_m521DDEC9E3616B72746F67EAEC417D87268265F8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5296));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5297));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5298));
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5299));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5301));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5301));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_3 = ___functionToStopCalling1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5302));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5302));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5300));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::AddOnUpdateListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_AddOnUpdateListener_m7AC52C7B2731C86A35B684D8061A40DCEEF1DF37 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___functionToCall1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_AddOnUpdateListener_m7AC52C7B2731C86A35B684D8061A40DCEEF1DF37_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToCall1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_AddOnUpdateListener_m7AC52C7B2731C86A35B684D8061A40DCEEF1DF37_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5303));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5304));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5305));
		// sourceMap[inputSource].onUpdate += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5306));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5308));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5308));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_3 = ___functionToCall1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5309));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5309));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5307));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::RemoveOnUpdateListener(Valve.VR.SteamVR_Input_Sources,Valve.VR.SteamVR_Action_Pose_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_RemoveOnUpdateListener_m3EAE0FCC4813C60A464C863BAD05906A8DAD4157 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, int32_t ___inputSource0, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___functionToStopCalling1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_RemoveOnUpdateListener_m3EAE0FCC4813C60A464C863BAD05906A8DAD4157_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0), (&___functionToStopCalling1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_RemoveOnUpdateListener_m3EAE0FCC4813C60A464C863BAD05906A8DAD4157_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5310));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5311));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5312));
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5313));
		SteamVR_Action_Pose_Source_Map_1_t191C12A385C6BE9645B171973AA0141ECCBA76A9 * L_0 = ((SteamVR_Action_2_tDED2DB9236CA9398BCDCB18DB8DDA3DB1D98FBAC *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5315));
		NullCheck(L_0);
		SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * L_2 = SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_mE9FAF259F6EB506E78790EDB4F2AF6FF68569986_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5315));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_3 = ___functionToStopCalling1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5316));
		NullCheck(L_2);
		SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5316));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5314));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m22BDD78F639B413C506505CD777EFEC3ED51FC15 (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m22BDD78F639B413C506505CD777EFEC3ED51FC15_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m22BDD78F639B413C506505CD777EFEC3ED51FC15_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5317));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5318));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5319));
		// void ISerializationCallbackReceiver.OnBeforeSerialize() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5320));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m12CF0CC15BB991562407D6C483B7570F5BE4AA1D (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m12CF0CC15BB991562407D6C483B7570F5BE4AA1D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m12CF0CC15BB991562407D6C483B7570F5BE4AA1D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5321));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5322));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5323));
		// InitAfterDeserialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5324));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5326));
		SteamVR_Action_2_InitAfterDeserialize_m2F768D4CC6A466FA8C4227575AAF7AE0B58FE8EA(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m2F768D4CC6A466FA8C4227575AAF7AE0B58FE8EA_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5326));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5325));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::SetTrackingUniverseOrigin(Valve.VR.ETrackingUniverseOrigin)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_SetTrackingUniverseOrigin_m4B3FEF00455AAC74A5D52CB5247CDB351BD85122 (int32_t ___newOrigin0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_SetTrackingUniverseOrigin_m4B3FEF00455AAC74A5D52CB5247CDB351BD85122_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___newOrigin0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_SetTrackingUniverseOrigin_m4B3FEF00455AAC74A5D52CB5247CDB351BD85122_RuntimeMethod_var, NULL, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5327));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5328));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5329));
		// SetUniverseOrigin(newOrigin);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5330));
		int32_t L_0 = ___newOrigin0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5333));
		SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m9C4D69476F261793A9C024F0B06DE9B549EE8C2C(L_0, /*hidden argument*/SteamVR_Action_Pose_Base_2_SetUniverseOrigin_m9C4D69476F261793A9C024F0B06DE9B549EE8C2C_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5333));
		// OpenVR.Compositor.SetTrackingSpace(newOrigin);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5331));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5334));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRCompositor_t7E9A7ACFAB7C4BC0CAFC520CB63213C2C5AA1F4A * L_1 = OpenVR_get_Compositor_m23FBC18F748E899365E93022FAEA24774FD7276E(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5334));
		int32_t L_2 = ___newOrigin0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5335));
		NullCheck(L_1);
		CVRCompositor_SetTrackingSpace_m6C8B6AD410AE8367BDD5249D304D569F90D98D31(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5335));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5332));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose__ctor_m6CC3B700F655C32E13184306C5A1A021AA3D7C5F (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose__ctor_m6CC3B700F655C32E13184306C5A1A021AA3D7C5F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose__ctor_m6CC3B700F655C32E13184306C5A1A021AA3D7C5F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		SteamVR_Action_Pose_Base_2__ctor_m04D9EF0A3BBF604D9C6F5846B1DC9A4A852AC7D8(__this, /*hidden argument*/SteamVR_Action_Pose_Base_2__ctor_m04D9EF0A3BBF604D9C6F5846B1DC9A4A852AC7D8_RuntimeMethod_var);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m3BDDE425D2D2CA66F415A1BBEE9AA4EFED58BFFE (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mCCA44BC573ECDBA8778D4910575267293389F622 (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mFC1B005A218DD86C7DB84D83358426B04B271CB7 (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mFC1B005A218DD86C7DB84D83358426B04B271CB7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_mA58A238DED998F62628E98601081AA7011B34608 (ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_mBA6347D8C94B1E1768590E151F2BDB6FE02148F7 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_mB5D41EA120DB15F9D1C3D31862A5B481CE22C0B8 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m28D5C9378486AB13DD81E132F3F4B64B3FE76BBE (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m28D5C9378486AB13DD81E132F3F4B64B3FE76BBE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Pose_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m7408246854832F22B7B61ED42EFF0D8921DF4A23 (ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler__ctor_mFC468AB8A126E335C06F73ABA9CFDEA5688098B7 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_Invoke_mEEAA2A7D5DB7888DAA31E9B414946CF495F26A7F (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___deviceConnected2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
					else
						VirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___deviceConnected2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___deviceConnected2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* DeviceConnectedChangeHandler_BeginInvoke_m573DE424C6A60F581F69ADBF44C63D647D2B8513 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___deviceConnected2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (DeviceConnectedChangeHandler_BeginInvoke_m573DE424C6A60F581F69ADBF44C63D647D2B8513_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___deviceConnected2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void DeviceConnectedChangeHandler_EndInvoke_m5B9B82B0F59D4244704CD4149E8535DCAB88B174 (DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler__ctor_m265F21C900027C0C60671E5DB6C4D8239D85E616 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_Invoke_mB75EEED68A19DD7FC8988E887F982788E99A1E02 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker2< int32_t, int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker2< int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___trackingState2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
					else
						VirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___trackingState2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___trackingState2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___trackingState2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,Valve.VR.ETrackingResult,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* TrackingChangeHandler_BeginInvoke_mA9B9D225C9CE967D4F1BE98FC861BACDCA083038 (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, int32_t ___trackingState2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (TrackingChangeHandler_BeginInvoke_mA9B9D225C9CE967D4F1BE98FC861BACDCA083038_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(ETrackingResult_t989C2212A7DBCBBF86EA2C1E776BC60223B3126E_il2cpp_TypeInfo_var, &___trackingState2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void TrackingChangeHandler_EndInvoke_m21B279EE5A5FB403D5FE5EA16CA1BD92D0520F3B (TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_mBD98A1E92C38030F3BFDCF1753EA9667131B5E08 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mE74BC4C57DFC977BC12469CC6062FB39140C92F8 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
					else
						GenericVirtActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1);
					else
						VirtActionInvoker2< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mD6B2EC8E0B4A8360088DFD875E33F74ECB890A40 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_mD6B2EC8E0B4A8360088DFD875E33F74ECB890A40_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.SteamVR_Action_Pose_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m9DBB364B02C761351824C7D5752C2EBC346BBBF2 (UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler__ctor_mC1D61A243E59E09F1F161BD550C7067AD55468CF (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler::Invoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_Invoke_m2DB8001CFAE1F578556A47959FA7FDEC22075702 (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___validPose2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
					else
						VirtActionInvoker3< SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___validPose2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___validPose2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___validPose2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Pose,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ValidPoseChangeHandler_BeginInvoke_mBC72D5D31D1AC1747015DB931A8E3A7A449B9A51 (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * ___fromAction0, int32_t ___fromSource1, bool ___validPose2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ValidPoseChangeHandler_BeginInvoke_mBC72D5D31D1AC1747015DB931A8E3A7A449B9A51_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___validPose2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ValidPoseChangeHandler_EndInvoke_m0F9580F1524B2859E13020F32A9ACBBC5AFF3688 (ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onActiveChange_m6C3297DBA3E2608BE985FA75EE8D46EAC5C792B2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onActiveChange_m6C3297DBA3E2608BE985FA75EE8D46EAC5C792B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_0 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_1 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_add_onActiveChange_m6C3297DBA3E2608BE985FA75EE8D46EAC5C792B2_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_6 = V_2;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_7 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *>((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_9 = V_0;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onActiveChange_m0D6A09A4D2599E4EECF2460CF2A3B7466BC0B739 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onActiveChange_m0D6A09A4D2599E4EECF2460CF2A3B7466BC0B739_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_0 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_1 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_remove_onActiveChange_m0D6A09A4D2599E4EECF2460CF2A3B7466BC0B739_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_6 = V_2;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_7 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *>((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_9 = V_0;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onActiveBindingChange_m2CCB91E08B318C4D6A45A8356BBAA73BC9831580 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onActiveBindingChange_m2CCB91E08B318C4D6A45A8356BBAA73BC9831580_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_0 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_1 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_add_onActiveBindingChange_m2CCB91E08B318C4D6A45A8356BBAA73BC9831580_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_6 = V_2;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_7 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *>((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_9 = V_0;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Pose_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m800A450B68164A69677E890066A3C6CE0B59BD15 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m800A450B68164A69677E890066A3C6CE0B59BD15_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_0 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_1 = NULL;
	ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_remove_onActiveBindingChange_m800A450B68164A69677E890066A3C6CE0B59BD15_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_2 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_6 = V_2;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_7 = V_1;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *>((ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_9 = V_0;
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onChange(Valve.VR.SteamVR_Action_Pose_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_0 = NULL;
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_1 = NULL;
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_add_onChange_m350CA9E264ACB24C9AAF2A2C8B0DBEC7A9665D22_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_2 = V_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_6 = V_2;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_7 = V_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *>((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_9 = V_0;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_9) == ((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onChange(Valve.VR.SteamVR_Action_Pose_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_0 = NULL;
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_1 = NULL;
	ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_remove_onChange_m5648F89F86FF49FF910AD08C79FB0A2B27618A29_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_2 = V_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE_il2cpp_TypeInfo_var));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_6 = V_2;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_7 = V_1;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *>((ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_9 = V_0;
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_9) == ((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onUpdate(Valve.VR.SteamVR_Action_Pose_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_0 = NULL;
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_1 = NULL;
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_add_onUpdate_m3490F1849AF58B9C1C64A455D119B6619BF1F9F4_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_2 = V_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_6 = V_2;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_7 = V_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *>((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_9 = V_0;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Pose_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_0 = NULL;
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_1 = NULL;
	UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_remove_onUpdate_mBAB407029136DCDDBF725ED16D604A3F4CA303A2_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_2 = V_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1_il2cpp_TypeInfo_var));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_6 = V_2;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_7 = V_1;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *>((UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_9 = V_0;
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_9) == ((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onTrackingChanged(Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_0 = NULL;
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_1 = NULL;
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_add_onTrackingChanged_m2ECFC24CAD4E5BEEF240099853A3E36B7F0DFBE5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_0 = __this->get_onTrackingChanged_17();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = V_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** L_5 = __this->get_address_of_onTrackingChanged_17();
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_6 = V_2;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_7 = V_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *>((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_9 = V_0;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onTrackingChanged(Valve.VR.SteamVR_Action_Pose_TrackingChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_0 = NULL;
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_1 = NULL;
	TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_remove_onTrackingChanged_mCF467E85C173ABE916896B29993C49829AB2149C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_0 = __this->get_onTrackingChanged_17();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_1 = V_0;
		V_1 = L_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = V_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)CastclassSealed((RuntimeObject*)L_4, TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914_il2cpp_TypeInfo_var));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 ** L_5 = __this->get_address_of_onTrackingChanged_17();
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_6 = V_2;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_7 = V_1;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_8 = InterlockedCompareExchangeImpl<TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *>((TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 **)L_5, L_6, L_7);
		V_0 = L_8;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_9 = V_0;
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_10 = V_1;
		if ((!(((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_9) == ((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onValidPoseChanged_m35C4DDEF19BCA4F9606F36E545FF6D39461DF637 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onValidPoseChanged_m35C4DDEF19BCA4F9606F36E545FF6D39461DF637_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_0 = NULL;
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_1 = NULL;
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_add_onValidPoseChanged_m35C4DDEF19BCA4F9606F36E545FF6D39461DF637_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_0 = __this->get_onValidPoseChanged_18();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_2 = V_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** L_5 = __this->get_address_of_onValidPoseChanged_18();
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_6 = V_2;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_7 = V_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *>((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_9 = V_0;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onValidPoseChanged(Valve.VR.SteamVR_Action_Pose_ValidPoseChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onValidPoseChanged_m30DDDE1F913F495779B5369059C11D07D18A8749 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onValidPoseChanged_m30DDDE1F913F495779B5369059C11D07D18A8749_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_0 = NULL;
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_1 = NULL;
	ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_remove_onValidPoseChanged_m30DDDE1F913F495779B5369059C11D07D18A8749_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_0 = __this->get_onValidPoseChanged_18();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_1 = V_0;
		V_1 = L_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_2 = V_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)CastclassSealed((RuntimeObject*)L_4, ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A_il2cpp_TypeInfo_var));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A ** L_5 = __this->get_address_of_onValidPoseChanged_18();
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_6 = V_2;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_7 = V_1;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_8 = InterlockedCompareExchangeImpl<ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *>((ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A **)L_5, L_6, L_7);
		V_0 = L_8;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_9 = V_0;
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_10 = V_1;
		if ((!(((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_9) == ((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::add_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_0 = NULL;
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_1 = NULL;
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_add_onDeviceConnectedChanged_m2844E90BAA3AA5AEF71BEDE218CAB7EFBDF01828_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_0 = __this->get_onDeviceConnectedChanged_19();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_2 = V_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_19();
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_6 = V_2;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_7 = V_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *>((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_9 = V_0;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::remove_onDeviceConnectedChanged(Valve.VR.SteamVR_Action_Pose_DeviceConnectedChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_0 = NULL;
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_1 = NULL;
	DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_remove_onDeviceConnectedChanged_mCFD88686CD8FF8163D1A900691A7742AA2E8BB52_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_0 = __this->get_onDeviceConnectedChanged_19();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_1 = V_0;
		V_1 = L_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_2 = V_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)CastclassSealed((RuntimeObject*)L_4, DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9_il2cpp_TypeInfo_var));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 ** L_5 = __this->get_address_of_onDeviceConnectedChanged_19();
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_6 = V_2;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_7 = V_1;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_8 = InterlockedCompareExchangeImpl<DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *>((DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 **)L_5, L_6, L_7);
		V_0 = L_8;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_9 = V_0;
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_10 = V_1;
		if ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_9) == ((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_changed_m8E77CE07064415FB25C71536050FA78CC9A712D7 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_changed_m8E77CE07064415FB25C71536050FA78CC9A712D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_changed_m8E77CE07064415FB25C71536050FA78CC9A712D7_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5616));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5617));
	{
		// public override bool changed { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5618));
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_20();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_changed_m60BCF947C4C21E9B0EEECB47939451CE961CB88D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_changed_m60BCF947C4C21E9B0EEECB47939451CE961CB88D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_changed_m60BCF947C4C21E9B0EEECB47939451CE961CB88D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5619));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5620));
	{
		// public override bool changed { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5621));
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_20(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastChanged_m5F4A93F1CE0B35353814569A5D3E678B2EB33A57 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastChanged_m5F4A93F1CE0B35353814569A5D3E678B2EB33A57_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastChanged_m5F4A93F1CE0B35353814569A5D3E678B2EB33A57_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5622));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5623));
	{
		// public override bool lastChanged { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5624));
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_21();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastChanged_m03E860AEEB41776E285FCBAA8ACA87982C4C525B (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastChanged_m03E860AEEB41776E285FCBAA8ACA87982C4C525B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastChanged_m03E860AEEB41776E285FCBAA8ACA87982C4C525B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5625));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5626));
	{
		// public override bool lastChanged { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5627));
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_21(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Pose_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Pose_Source_get_activeOrigin_mD4B10DF73C4B47C672FF81DEE758BA87AD48E384 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_activeOrigin_mD4B10DF73C4B47C672FF81DEE758BA87AD48E384_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	uint64_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_activeOrigin_mD4B10DF73C4B47C672FF81DEE758BA87AD48E384_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5628));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5629));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5630));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5631));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5636));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5636));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5632));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// return poseActionData.activeOrigin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5633));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_2 = __this->get_address_of_poseActionData_31();
		uint64_t L_3 = L_2->get_activeOrigin_1();
		V_1 = L_3;
		goto IL_001e;
	}

IL_0019:
	{
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5634));
		V_1 = (((int64_t)((int64_t)0)));
		goto IL_001e;
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5635));
		uint64_t L_4 = V_1;
		return L_4;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Pose_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Pose_Source_get_lastActiveOrigin_m7C47B89C0F4A75F118BC894A63D1722BA5E15802 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastActiveOrigin_m7C47B89C0F4A75F118BC894A63D1722BA5E15802_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastActiveOrigin_m7C47B89C0F4A75F118BC894A63D1722BA5E15802_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5637));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5638));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5639));
		// public override ulong lastActiveOrigin { get { return lastPoseActionData.activeOrigin; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5640));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_lastPoseActionData_32();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override ulong lastActiveOrigin { get { return lastPoseActionData.activeOrigin; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5641));
		uint64_t L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_active_m4D9B8F64C7DCCC89A18264EA3CCAB388FE46A7B2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_active_m4D9B8F64C7DCCC89A18264EA3CCAB388FE46A7B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_active_m4D9B8F64C7DCCC89A18264EA3CCAB388FE46A7B2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5642));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5643));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5644));
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5645));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5647));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5647));
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5648));
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5648));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5649));
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5649));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5650));
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5650));
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0022;
	}

IL_0021:
	{
		G_B3_0 = 0;
	}

IL_0022:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0025;
	}

IL_0025:
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5646));
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_activeBinding_mC4796E57EDF00116563A0D70474F55E457E2C223 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_activeBinding_mC4796E57EDF00116563A0D70474F55E457E2C223_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_activeBinding_mC4796E57EDF00116563A0D70474F55E457E2C223_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5651));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5652));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5653));
		// public override bool activeBinding { get { return poseActionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5654));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_poseActionData_31();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool activeBinding { get { return poseActionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5655));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastActive_m0B8F257126F8B3654DF9C06DA32FC81D60619D5C (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastActive_m0B8F257126F8B3654DF9C06DA32FC81D60619D5C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastActive_m0B8F257126F8B3654DF9C06DA32FC81D60619D5C_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5656));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5657));
	{
		// public override bool lastActive { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5658));
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_22();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastActive_m1C75FF7AD28E6E3E7688BBC0090225405738B2C4 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastActive_m1C75FF7AD28E6E3E7688BBC0090225405738B2C4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastActive_m1C75FF7AD28E6E3E7688BBC0090225405738B2C4_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5659));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5660));
	{
		// public override bool lastActive { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5661));
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_22(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastActiveBinding_m318C41747487845418710A9C551548A08F51F5C6 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastActiveBinding_m318C41747487845418710A9C551548A08F51F5C6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastActiveBinding_m318C41747487845418710A9C551548A08F51F5C6_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5662));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5663));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5664));
		// public override bool lastActiveBinding { get { return lastPoseActionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5665));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_lastPoseActionData_32();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastActiveBinding { get { return lastPoseActionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5666));
		bool L_2 = V_0;
		return L_2;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_trackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5667));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5668));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5669));
		// public ETrackingResult trackingState { get { return poseActionData.pose.eTrackingResult; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5670));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_1 = L_0->get_address_of_pose_2();
		int32_t L_2 = L_1->get_eTrackingResult_3();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public ETrackingResult trackingState { get { return poseActionData.pose.eTrackingResult; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5671));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// Valve.VR.ETrackingResult Valve.VR.SteamVR_Action_Pose_Source::get_lastTrackingState()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5672));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5673));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5674));
		// public ETrackingResult lastTrackingState { get { return lastPoseActionData.pose.eTrackingResult; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5675));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_lastPoseActionData_32();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_1 = L_0->get_address_of_pose_2();
		int32_t L_2 = L_1->get_eTrackingResult_3();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public ETrackingResult lastTrackingState { get { return lastPoseActionData.pose.eTrackingResult; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5676));
		int32_t L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_poseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5677));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5678));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5679));
		// public bool poseIsValid { get { return poseActionData.pose.bPoseIsValid; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5680));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_1 = L_0->get_address_of_pose_2();
		bool L_2 = L_1->get_bPoseIsValid_4();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public bool poseIsValid { get { return poseActionData.pose.bPoseIsValid; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5681));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastPoseIsValid()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5682));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5683));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5684));
		// public bool lastPoseIsValid { get { return lastPoseActionData.pose.bPoseIsValid; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5685));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_lastPoseActionData_32();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_1 = L_0->get_address_of_pose_2();
		bool L_2 = L_1->get_bPoseIsValid_4();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public bool lastPoseIsValid { get { return lastPoseActionData.pose.bPoseIsValid; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5686));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_deviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5687));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5688));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5689));
		// public bool deviceIsConnected { get { return poseActionData.pose.bDeviceIsConnected; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5690));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_1 = L_0->get_address_of_pose_2();
		bool L_2 = L_1->get_bDeviceIsConnected_5();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public bool deviceIsConnected { get { return poseActionData.pose.bDeviceIsConnected; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5691));
		bool L_3 = V_0;
		return L_3;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::get_lastDeviceIsConnected()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5692));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5693));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5694));
		// public bool lastDeviceIsConnected { get { return lastPoseActionData.pose.bDeviceIsConnected; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5695));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_lastPoseActionData_32();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_1 = L_0->get_address_of_pose_2();
		bool L_2 = L_1->get_bDeviceIsConnected_5();
		V_0 = L_2;
		goto IL_0014;
	}

IL_0014:
	{
		// public bool lastDeviceIsConnected { get { return lastPoseActionData.pose.bDeviceIsConnected; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5696));
		bool L_3 = V_0;
		return L_3;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_localPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5697));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5698));
	{
		// public Vector3 localPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5699));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClocalPositionU3Ek__BackingField_23();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_localPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5700));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5701));
	{
		// public Vector3 localPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5702));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClocalPositionU3Ek__BackingField_23(L_0);
		return;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_localRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5703));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5704));
	{
		// public Quaternion localRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5705));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClocalRotationU3Ek__BackingField_24();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_localRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5706));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5707));
	{
		// public Quaternion localRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5708));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3ClocalRotationU3Ek__BackingField_24(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalPosition()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5709));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5710));
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5711));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastLocalPositionU3Ek__BackingField_25();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastLocalPosition(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5712));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5713));
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5714));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastLocalPositionU3Ek__BackingField_25(L_0);
		return;
	}
}
// UnityEngine.Quaternion Valve.VR.SteamVR_Action_Pose_Source::get_lastLocalRotation()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5715));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5716));
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5717));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClastLocalRotationU3Ek__BackingField_26();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastLocalRotation(UnityEngine.Quaternion)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5718));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5719));
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5720));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3ClastLocalRotationU3Ek__BackingField_26(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_velocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5721));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5722));
	{
		// public Vector3 velocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5723));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CvelocityU3Ek__BackingField_27();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_velocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5724));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5725));
	{
		// public Vector3 velocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5726));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CvelocityU3Ek__BackingField_27(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5727));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5728));
	{
		// public Vector3 lastVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5729));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastVelocityU3Ek__BackingField_28();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5730));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5731));
	{
		// public Vector3 lastVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5732));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastVelocityU3Ek__BackingField_28(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_angularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5734));
	{
		// public Vector3 angularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5735));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CangularVelocityU3Ek__BackingField_29();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_angularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5736));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5737));
	{
		// public Vector3 angularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5738));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CangularVelocityU3Ek__BackingField_29(L_0);
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::get_lastAngularVelocity()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5739));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5740));
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5741));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAngularVelocityU3Ek__BackingField_30();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::set_lastAngularVelocity(UnityEngine.Vector3)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5742));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5743));
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5744));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastAngularVelocityU3Ek__BackingField_30(L_0);
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Preinitialize_m9D4858F6CD07854B44FEABF972A396AD52BF2979 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_Preinitialize_m9D4858F6CD07854B44FEABF972A396AD52BF2979_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___wrappingAction0), (&___forInputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_Preinitialize_m9D4858F6CD07854B44FEABF972A396AD52BF2979_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5745));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5746));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5747));
		// base.Preinitialize(wrappingAction, forInputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5748));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5751));
		SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5751));
		// poseAction = wrappingAction as SteamVR_Action_Pose;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5749));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_poseAction_34(((SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C *)IsInstClass((RuntimeObject*)L_2, SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C_il2cpp_TypeInfo_var)));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5750));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_Initialize_mE07A70E1AF9A3257AFD2BB0C4FA228D748F88B43 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_Initialize_mE07A70E1AF9A3257AFD2BB0C4FA228D748F88B43_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_Initialize_mE07A70E1AF9A3257AFD2BB0C4FA228D748F88B43_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5752));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5753));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5754));
		// base.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5755));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5760));
		SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5760));
		// if (poseActionData_size == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5756));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5757));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// poseActionData_size = (uint)Marshal.SizeOf(typeof(InputPoseActionData_t));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5758));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5761));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5761));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5762));
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5762));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->set_poseActionData_size_11(L_4);
	}

IL_0028:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5759));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateValue_m391570D77BB5CE3B0082C689A0D7AEE5AC0CC5CE (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_UpdateValue_m391570D77BB5CE3B0082C689A0D7AEE5AC0CC5CE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_UpdateValue_m391570D77BB5CE3B0082C689A0D7AEE5AC0CC5CE_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5763));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5764));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5765));
		// UpdateValue(false);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5766));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5768));
		VirtActionInvoker1< bool >::Invoke(50 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean) */, __this, (bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5768));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5767));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateValue(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateValue_mD4FCEA491C3040D805773739C9A00420DB876447 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, bool ___skipStateAndEventUpdates0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_UpdateValue_mD4FCEA491C3040D805773739C9A00420DB876447_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	bool V_2 = false;
	uint64_t V_3 = 0;
	int32_t V_4 = 0;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___skipStateAndEventUpdates0));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_UpdateValue_mD4FCEA491C3040D805773739C9A00420DB876447_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5769));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5770));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5771));
		// lastChanged = changed;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5772));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5800));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5800));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5801));
		VirtActionInvoker1< bool >::Invoke(34 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_lastChanged(System.Boolean) */, __this, L_0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5801));
		// lastPoseActionData = poseActionData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5773));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607  L_1 = __this->get_poseActionData_31();
		__this->set_lastPoseActionData_32(L_1);
		// lastLocalPosition = localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5774));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5802));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_2 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5802));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5803));
		SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD_inline(__this, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5803));
		// lastLocalRotation = localRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5775));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5804));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5804));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5805));
		SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5805));
		// lastVelocity = velocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5776));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5806));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5806));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5807));
		SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D_inline(__this, L_4, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5807));
		// lastAngularVelocity = angularVelocity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5777));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5808));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_5 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5808));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5809));
		SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2_inline(__this, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5809));
		// if (framesAhead == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5778));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		float L_6 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_framesAhead_35();
		V_1 = (bool)((((float)L_6) == ((float)(0.0f)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5779));
		bool L_7 = V_1;
		if (!L_7)
		{
			goto IL_0088;
		}
	}
	{
		// err = OpenVR.Input.GetPoseActionDataForNextFrame(handle, universeOrigin, ref poseActionData, poseActionData_size, inputSourceHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5780));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5810));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_8 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5810));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5811));
		uint64_t L_9 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5811));
		int32_t L_10 = __this->get_universeOrigin_10();
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_11 = __this->get_address_of_poseActionData_31();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		uint32_t L_12 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		uint64_t L_13 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5812));
		NullCheck(L_8);
		int32_t L_14 = CVRInput_GetPoseActionDataForNextFrame_m5D5DF76029C3F3044DED92C6D4BE66CD1A6D8623(L_8, L_9, L_10, (InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 *)L_11, L_12, L_13, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5812));
		V_0 = L_14;
		goto IL_00c6;
	}

IL_0088:
	{
		// err = OpenVR.Input.GetPoseActionDataRelativeToNow(handle, universeOrigin, framesAhead * (Time.timeScale / SteamVR.instance.hmd_DisplayFrequency), ref poseActionData, poseActionData_size, inputSourceHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5781));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5813));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_15 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5813));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5814));
		uint64_t L_16 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5814));
		int32_t L_17 = __this->get_universeOrigin_10();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		float L_18 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_framesAhead_35();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5815));
		float L_19 = Time_get_timeScale_m7E198A5814859A08FD0FFE6DD5F7ED5C907719F8(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5815));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5816));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F_il2cpp_TypeInfo_var);
		SteamVR_tE14648C0E73A16927B96F72915B425561B0D057F * L_20 = SteamVR_get_instance_m051B21845BD2F1EACC9DAF67416E7B898EB8E248(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5816));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5817));
		NullCheck(L_20);
		float L_21 = SteamVR_get_hmd_DisplayFrequency_m375C2CC22516CB3468CD91E4BE6F9CC82F963132(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5817));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_22 = __this->get_address_of_poseActionData_31();
		uint32_t L_23 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		uint64_t L_24 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5818));
		NullCheck(L_15);
		int32_t L_25 = CVRInput_GetPoseActionDataRelativeToNow_mC2AB35B1C17F485F9BE0474BBD66CDD7CC7B399F(L_15, L_16, L_17, ((float)il2cpp_codegen_multiply((float)L_18, (float)((float)((float)L_19/(float)L_21)))), (InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 *)L_22, L_23, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5818));
		V_0 = L_25;
	}

IL_00c6:
	{
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5782));
		int32_t L_26 = V_0;
		V_2 = (bool)((!(((uint32_t)L_26) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5783));
		bool L_27 = V_2;
		if (!L_27)
		{
			goto IL_0143;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5784));
		// Debug.LogError("<b>[SteamVR]</b> GetPoseActionData error (" + fullPath + "): " + err.ToString() + " Handle: " + handle.ToString() + ". Input source: " + inputSource.ToString());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5785));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_28 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)8);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_29 = L_28;
		NullCheck(L_29);
		ArrayElementTypeCheck (L_29, _stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		(L_29)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_30 = L_29;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5819));
		String_t* L_31 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5819));
		NullCheck(L_30);
		ArrayElementTypeCheck (L_30, L_31);
		(L_30)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_31);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_32 = L_30;
		NullCheck(L_32);
		ArrayElementTypeCheck (L_32, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_32)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_33 = L_32;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5820));
		RuntimeObject * L_34 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_34);
		String_t* L_35 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_34);
		V_0 = *(int32_t*)UnBox(L_34);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5820));
		NullCheck(L_33);
		ArrayElementTypeCheck (L_33, L_35);
		(L_33)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_35);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_36 = L_33;
		NullCheck(L_36);
		ArrayElementTypeCheck (L_36, _stringLiteral3C1DAA6957F3D30C74E902B0E1239020BD2032EB);
		(L_36)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral3C1DAA6957F3D30C74E902B0E1239020BD2032EB);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_37 = L_36;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5821));
		uint64_t L_38 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5821));
		V_3 = L_38;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5822));
		String_t* L_39 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_3), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5822));
		NullCheck(L_37);
		ArrayElementTypeCheck (L_37, L_39);
		(L_37)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_39);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_40 = L_37;
		NullCheck(L_40);
		ArrayElementTypeCheck (L_40, _stringLiteral3A7CDEF52D3DE29B65F025A01642173D5069CE13);
		(L_40)->SetAt(static_cast<il2cpp_array_size_t>(6), (String_t*)_stringLiteral3A7CDEF52D3DE29B65F025A01642173D5069CE13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_41 = L_40;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5823));
		int32_t L_42 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5823));
		V_4 = L_42;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5824));
		RuntimeObject * L_43 = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, (&V_4));
		NullCheck(L_43);
		String_t* L_44 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_43);
		V_4 = *(int32_t*)UnBox(L_43);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5824));
		NullCheck(L_41);
		ArrayElementTypeCheck (L_41, L_44);
		(L_41)->SetAt(static_cast<il2cpp_array_size_t>(7), (String_t*)L_44);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5825));
		String_t* L_45 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5825));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5826));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5826));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5786));
	}

IL_0143:
	{
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5787));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5827));
		bool L_46 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5827));
		V_5 = L_46;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5788));
		bool L_47 = V_5;
		if (!L_47)
		{
			goto IL_0165;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5789));
		// SetCacheVariables();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5790));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5828));
		SteamVR_Action_Pose_Source_SetCacheVariables_m0BC40967351405886DCA503AC1DB8D0FEE51E51E(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5828));
		// changed = GetChanged();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5791));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5829));
		bool L_48 = SteamVR_Action_Pose_Source_GetChanged_mDCF9B89311A87C0C4E58E86E4D87002F8DEFF8E5(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5829));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5830));
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, L_48);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5830));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5792));
	}

IL_0165:
	{
		// if (changed)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5793));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5831));
		bool L_49 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5831));
		V_6 = L_49;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5794));
		bool L_50 = V_6;
		if (!L_50)
		{
			goto IL_017e;
		}
	}
	{
		// changedTime = updateTime;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5795));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5832));
		float L_51 = SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5832));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5833));
		SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline(__this, L_51, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5833));
	}

IL_017e:
	{
		// if (skipStateAndEventUpdates == false)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5796));
		bool L_52 = ___skipStateAndEventUpdates0;
		V_7 = (bool)((((int32_t)L_52) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5797));
		bool L_53 = V_7;
		if (!L_53)
		{
			goto IL_018f;
		}
	}
	{
		// CheckAndSendEvents();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5798));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5834));
		VirtActionInvoker0::Invoke(51 /* System.Void Valve.VR.SteamVR_Action_Pose_Source::CheckAndSendEvents() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5834));
	}

IL_018f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5799));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::SetCacheVariables()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_SetCacheVariables_m0BC40967351405886DCA503AC1DB8D0FEE51E51E (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_SetCacheVariables_m0BC40967351405886DCA503AC1DB8D0FEE51E51E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_SetCacheVariables_m0BC40967351405886DCA503AC1DB8D0FEE51E51E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5835));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5836));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5837));
		// localPosition = poseActionData.pose.mDeviceToAbsoluteTracking.GetPosition();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5838));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_0 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_1 = L_0->get_address_of_pose_2();
		HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * L_2 = L_1->get_address_of_mDeviceToAbsoluteTracking_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5844));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = HmdMatrix34_t_GetPosition_m19C067FAAAF182DE25CF89BB718F69EE6A3B38D2((HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *)L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5844));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5845));
		SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018_inline(__this, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5845));
		// localRotation = poseActionData.pose.mDeviceToAbsoluteTracking.GetRotation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5839));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_4 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_5 = L_4->get_address_of_pose_2();
		HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * L_6 = L_5->get_address_of_mDeviceToAbsoluteTracking_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5846));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_7 = HmdMatrix34_t_GetRotation_m577C2567481CCDC641DD1861EC627F2663CFB381((HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *)L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5846));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5847));
		SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181_inline(__this, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5847));
		// velocity = GetUnityCoordinateVelocity(poseActionData.pose.vVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5840));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_8 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_9 = L_8->get_address_of_pose_2();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_10 = L_9->get_vVelocity_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5848));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991(__this, L_10, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5848));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5849));
		SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918_inline(__this, L_11, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5849));
		// angularVelocity = GetUnityCoordinateAngularVelocity(poseActionData.pose.vAngularVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5841));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_12 = __this->get_address_of_poseActionData_31();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_13 = L_12->get_address_of_pose_2();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_14 = L_13->get_vAngularVelocity_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5850));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_15 = SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B(__this, L_14, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5850));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5851));
		SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E_inline(__this, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5851));
		// updateTime = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5842));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5852));
		float L_16 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5852));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5853));
		SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline(__this, L_16, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5853));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5843));
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetChanged_mDCF9B89311A87C0C4E58E86E4D87002F8DEFF8E5 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetChanged_mDCF9B89311A87C0C4E58E86E4D87002F8DEFF8E5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_GetChanged_mDCF9B89311A87C0C4E58E86E4D87002F8DEFF8E5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5854));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5855));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5856));
		// if (Vector3.Distance(localPosition, lastLocalPosition) > changeTolerance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5857));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5871));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5871));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5872));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5872));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5873));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_2 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5873));
		float L_3 = __this->get_changeTolerance_12();
		V_0 = (bool)((((float)L_2) > ((float)L_3))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5858));
		bool L_4 = V_0;
		if (!L_4)
		{
			goto IL_0022;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5859));
		V_1 = (bool)1;
		goto IL_0090;
	}

IL_0022:
	{
		// else if (Mathf.Abs(Quaternion.Angle(localRotation, lastLocalRotation)) > changeTolerance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5860));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5874));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_5 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5874));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5875));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_6 = SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5875));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5876));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		float L_7 = Quaternion_Angle_m09599D660B724D330E5C7FE2FB1C8716161B3DD1(L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5876));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5877));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_8 = fabsf(L_7);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5877));
		float L_9 = __this->get_changeTolerance_12();
		V_2 = (bool)((((float)L_8) > ((float)L_9))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5861));
		bool L_10 = V_2;
		if (!L_10)
		{
			goto IL_0048;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5862));
		V_1 = (bool)1;
		goto IL_0090;
	}

IL_0048:
	{
		// else if (Vector3.Distance(velocity, lastVelocity) > changeTolerance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5863));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5878));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_11 = SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5878));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5879));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_12 = SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5879));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5880));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_13 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_11, L_12, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5880));
		float L_14 = __this->get_changeTolerance_12();
		V_3 = (bool)((((float)L_13) > ((float)L_14))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5864));
		bool L_15 = V_3;
		if (!L_15)
		{
			goto IL_0069;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5865));
		V_1 = (bool)1;
		goto IL_0090;
	}

IL_0069:
	{
		// else if (Vector3.Distance(angularVelocity, lastAngularVelocity) > changeTolerance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5866));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5881));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_16 = SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5881));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5882));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_17 = SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5882));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5883));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		float L_18 = Vector3_Distance_mE316E10B9B319A5C2A29F86E028740FD528149E7(L_16, L_17, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5883));
		float L_19 = __this->get_changeTolerance_12();
		V_4 = (bool)((((float)L_18) > ((float)L_19))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5867));
		bool L_20 = V_4;
		if (!L_20)
		{
			goto IL_008c;
		}
	}
	{
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5868));
		V_1 = (bool)1;
		goto IL_0090;
	}

IL_008c:
	{
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5869));
		V_1 = (bool)0;
		goto IL_0090;
	}

IL_0090:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5870));
		bool L_21 = V_1;
		return L_21;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetVelocitiesAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime1, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___secondsFromNow0), (&___velocityAtTime1), (&___angularVelocityAtTime2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_GetVelocitiesAtTimeOffset_m68F72C5D84CF5620C5FF8978BCCC52B3F79C7935_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5884));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5885));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5886));
		// EVRInputError err = OpenVR.Input.GetPoseActionDataRelativeToNow(handle, universeOrigin, secondsFromNow, ref tempPoseActionData, poseActionData_size, inputSourceHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5887));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5899));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5899));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5900));
		uint64_t L_1 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5900));
		int32_t L_2 = __this->get_universeOrigin_10();
		float L_3 = ___secondsFromNow0;
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_4 = __this->get_address_of_tempPoseActionData_33();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		uint32_t L_5 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		uint64_t L_6 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5901));
		NullCheck(L_0);
		int32_t L_7 = CVRInput_GetPoseActionDataRelativeToNow_mC2AB35B1C17F485F9BE0474BBD66CDD7CC7B399F(L_0, L_1, L_2, L_3, (InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 *)L_4, L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5901));
		V_0 = L_7;
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5888));
		int32_t L_8 = V_0;
		V_1 = (bool)((!(((uint32_t)L_8) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5889));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_00a0;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5890));
		// Debug.LogError("<b>[SteamVR]</b> GetPoseActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString()); //todo: this should be an error
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5891));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5902));
		String_t* L_13 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5902));
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_12;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5903));
		RuntimeObject * L_16 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_16);
		String_t* L_17 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_16);
		V_0 = *(int32_t*)UnBox(L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5903));
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_17);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_17);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_15;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5904));
		uint64_t L_20 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5904));
		V_2 = L_20;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5905));
		String_t* L_21 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5905));
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_21);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_21);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5906));
		String_t* L_22 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5906));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5907));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5907));
		// velocityAtTime = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5892));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_23 = ___velocityAtTime1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5908));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5908));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_23 = L_24;
		// angularVelocityAtTime = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5893));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_25 = ___angularVelocityAtTime2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5909));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5909));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_25 = L_26;
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5894));
		V_3 = (bool)0;
		goto IL_00dc;
	}

IL_00a0:
	{
		// velocityAtTime = GetUnityCoordinateVelocity(tempPoseActionData.pose.vVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5895));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_27 = ___velocityAtTime1;
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_28 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_29 = L_28->get_address_of_pose_2();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_30 = L_29->get_vVelocity_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5910));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_31 = SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991(__this, L_30, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5910));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_27 = L_31;
		// angularVelocityAtTime = GetUnityCoordinateAngularVelocity(tempPoseActionData.pose.vAngularVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5896));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_32 = ___angularVelocityAtTime2;
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_33 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_34 = L_33->get_address_of_pose_2();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_35 = L_34->get_vAngularVelocity_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5911));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_36 = SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B(__this, L_35, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5911));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_32 = L_36;
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5897));
		V_3 = (bool)1;
		goto IL_00dc;
	}

IL_00dc:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5898));
		bool L_37 = V_3;
		return L_37;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Pose_Source::GetPoseAtTimeOffset(System.Single,UnityEngine.Vector3&,UnityEngine.Quaternion&,UnityEngine.Vector3&,UnityEngine.Vector3&)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_m139061D3915BC3462FBEA4CBFCB3BD8DDB7FF4C7 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___secondsFromNow0, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___positionAtTime1, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * ___rotationAtTime2, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___velocityAtTime3, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * ___angularVelocityAtTime4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_m139061D3915BC3462FBEA4CBFCB3BD8DDB7FF4C7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___secondsFromNow0), (&___positionAtTime1), (&___rotationAtTime2), (&___velocityAtTime3), (&___angularVelocityAtTime4));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_GetPoseAtTimeOffset_m139061D3915BC3462FBEA4CBFCB3BD8DDB7FF4C7_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5912));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5913));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5914));
		// EVRInputError err = OpenVR.Input.GetPoseActionDataRelativeToNow(handle, universeOrigin, secondsFromNow, ref tempPoseActionData, poseActionData_size, inputSourceHandle);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5915));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5931));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_0 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5931));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5932));
		uint64_t L_1 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5932));
		int32_t L_2 = __this->get_universeOrigin_10();
		float L_3 = ___secondsFromNow0;
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_4 = __this->get_address_of_tempPoseActionData_33();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var);
		uint32_t L_5 = ((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->get_poseActionData_size_11();
		uint64_t L_6 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_inputSourceHandle_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5933));
		NullCheck(L_0);
		int32_t L_7 = CVRInput_GetPoseActionDataRelativeToNow_mC2AB35B1C17F485F9BE0474BBD66CDD7CC7B399F(L_0, L_1, L_2, L_3, (InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 *)L_4, L_5, L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5933));
		V_0 = L_7;
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5916));
		int32_t L_8 = V_0;
		V_1 = (bool)((!(((uint32_t)L_8) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5917));
		bool L_9 = V_1;
		if (!L_9)
		{
			goto IL_00bb;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5918));
		// Debug.LogError("<b>[SteamVR]</b> GetPoseActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString()); //todo: this should be an error
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5919));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_10 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = L_10;
		NullCheck(L_11);
		ArrayElementTypeCheck (L_11, _stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		(L_11)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralA581B1C5D87FE35AA6548BD80922C973CF753D73);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5934));
		String_t* L_13 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5934));
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, L_13);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_13);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_14 = L_12;
		NullCheck(L_14);
		ArrayElementTypeCheck (L_14, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_14)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_14;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5935));
		RuntimeObject * L_16 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_16);
		String_t* L_17 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_16);
		V_0 = *(int32_t*)UnBox(L_16);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5935));
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, L_17);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_17);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_18 = L_15;
		NullCheck(L_18);
		ArrayElementTypeCheck (L_18, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_18)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_18;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5936));
		uint64_t L_20 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5936));
		V_2 = L_20;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5937));
		String_t* L_21 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5937));
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, L_21);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_21);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5938));
		String_t* L_22 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_19, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5938));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5939));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_22, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5939));
		// velocityAtTime = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5920));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_23 = ___velocityAtTime3;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5940));
		IL2CPP_RUNTIME_CLASS_INIT(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720_il2cpp_TypeInfo_var);
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_24 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5940));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_23 = L_24;
		// angularVelocityAtTime = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5921));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_25 = ___angularVelocityAtTime4;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5941));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_26 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5941));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_25 = L_26;
		// positionAtTime = Vector3.zero;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5922));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_27 = ___positionAtTime1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5942));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_28 = Vector3_get_zero_m3CDDCAE94581DF3BB16C4B40A100E28E9C6649C2(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5942));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_27 = L_28;
		// rotationAtTime = Quaternion.identity;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5923));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_29 = ___rotationAtTime2;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5943));
		IL2CPP_RUNTIME_CLASS_INIT(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357_il2cpp_TypeInfo_var);
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_30 = Quaternion_get_identity_m548B37D80F2DEE60E41D1F09BF6889B557BE1A64(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5943));
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_29 = L_30;
		// return false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5924));
		V_3 = (bool)0;
		goto IL_012f;
	}

IL_00bb:
	{
		// velocityAtTime = GetUnityCoordinateVelocity(tempPoseActionData.pose.vVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5925));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_31 = ___velocityAtTime3;
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_32 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_33 = L_32->get_address_of_pose_2();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_34 = L_33->get_vVelocity_1();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5944));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_35 = SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991(__this, L_34, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5944));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_31 = L_35;
		// angularVelocityAtTime = GetUnityCoordinateAngularVelocity(tempPoseActionData.pose.vAngularVelocity);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5926));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_36 = ___angularVelocityAtTime4;
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_37 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_38 = L_37->get_address_of_pose_2();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_39 = L_38->get_vAngularVelocity_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5945));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_40 = SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B(__this, L_39, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5945));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_36 = L_40;
		// positionAtTime = tempPoseActionData.pose.mDeviceToAbsoluteTracking.GetPosition();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5927));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 * L_41 = ___positionAtTime1;
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_42 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_43 = L_42->get_address_of_pose_2();
		HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * L_44 = L_43->get_address_of_mDeviceToAbsoluteTracking_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5946));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_45 = HmdMatrix34_t_GetPosition_m19C067FAAAF182DE25CF89BB718F69EE6A3B38D2((HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *)L_44, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5946));
		*(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 *)L_41 = L_45;
		// rotationAtTime = tempPoseActionData.pose.mDeviceToAbsoluteTracking.GetRotation();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5928));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 * L_46 = ___rotationAtTime2;
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_47 = __this->get_address_of_tempPoseActionData_33();
		TrackedDevicePose_t_t0028622C5DF863D4DC12877439D4A679A0D46365 * L_48 = L_47->get_address_of_pose_2();
		HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 * L_49 = L_48->get_address_of_mDeviceToAbsoluteTracking_0();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5947));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_50 = HmdMatrix34_t_GetRotation_m577C2567481CCDC641DD1861EC627F2663CFB381((HmdMatrix34_t_t69CC0A858D1EBF95773929B6228EE953DE612669 *)L_49, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5947));
		*(Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357 *)L_46 = L_50;
		// return true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5929));
		V_3 = (bool)1;
		goto IL_012f;
	}

IL_012f:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5930));
		bool L_51 = V_3;
		return L_51;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::UpdateTransform(UnityEngine.Transform)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_UpdateTransform_m83614007AB0B80DB53701A76344CCDFCF92CC730 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * ___transformToUpdate0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_UpdateTransform_m83614007AB0B80DB53701A76344CCDFCF92CC730_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___transformToUpdate0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_UpdateTransform_m83614007AB0B80DB53701A76344CCDFCF92CC730_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5948));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5949));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5950));
		// transformToUpdate.localPosition = localPosition;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5951));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_0 = ___transformToUpdate0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5954));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_1 = SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5954));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5955));
		NullCheck(L_0);
		Transform_set_localPosition_m275F5550DD939F83AFEB5E8D681131172E2E1728(L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5955));
		// transformToUpdate.localRotation = localRotation;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5952));
		Transform_tBB9E78A2766C3C83599A8F66EDE7D1FCAFC66EDA * L_2 = ___transformToUpdate0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5956));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_3 = SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5956));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5957));
		NullCheck(L_2);
		Transform_set_localRotation_mE2BECB0954FFC1D93FB631600D9A9BEFF41D9C8A(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5957));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5953));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::CheckAndSendEvents()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_CheckAndSendEvents_m3A6C265E2B9EAB93C11B8AD1A8A23006A77920A8 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_CheckAndSendEvents_m3A6C265E2B9EAB93C11B8AD1A8A23006A77920A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	bool V_1 = false;
	bool V_2 = false;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_CheckAndSendEvents_m3A6C265E2B9EAB93C11B8AD1A8A23006A77920A8_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5958));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5959));
	int32_t G_B3_0 = 0;
	int32_t G_B8_0 = 0;
	int32_t G_B13_0 = 0;
	int32_t G_B18_0 = 0;
	int32_t G_B23_0 = 0;
	int32_t G_B28_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5960));
		// if (trackingState != lastTrackingState && onTrackingChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5961));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5983));
		int32_t L_0 = SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5983));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5984));
		int32_t L_1 = SteamVR_Action_Pose_Source_get_lastTrackingState_mC3978EC30F22D70155C39DDF5F263447D9273500(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5984));
		if ((((int32_t)L_0) == ((int32_t)L_1)))
		{
			goto IL_001a;
		}
	}
	{
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_2 = __this->get_onTrackingChanged_17();
		G_B3_0 = ((!(((RuntimeObject*)(TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 *)L_2) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_001b;
	}

IL_001a:
	{
		G_B3_0 = 0;
	}

IL_001b:
	{
		V_0 = (bool)G_B3_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5962));
		bool L_3 = V_0;
		if (!L_3)
		{
			goto IL_003d;
		}
	}
	{
		// onTrackingChanged.Invoke(poseAction, inputSource, trackingState);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5963));
		TrackingChangeHandler_t1CC1FD6A7111B86684B749C4E751B1F5237D2914 * L_4 = __this->get_onTrackingChanged_17();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_5 = __this->get_poseAction_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5985));
		int32_t L_6 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5985));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5986));
		int32_t L_7 = SteamVR_Action_Pose_Source_get_trackingState_mAA7FE0C2B01A8508823AA7E0D8EED81D5DADCABD(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5986));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5987));
		NullCheck(L_4);
		TrackingChangeHandler_Invoke_mB75EEED68A19DD7FC8988E887F982788E99A1E02(L_4, L_5, L_6, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5987));
	}

IL_003d:
	{
		// if (poseIsValid != lastPoseIsValid && onValidPoseChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5964));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5988));
		bool L_8 = SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5988));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5989));
		bool L_9 = SteamVR_Action_Pose_Source_get_lastPoseIsValid_mED2AB07587C45C6503F49F9B165A0E4861C35202(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5989));
		if ((((int32_t)L_8) == ((int32_t)L_9)))
		{
			goto IL_0056;
		}
	}
	{
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_10 = __this->get_onValidPoseChanged_18();
		G_B8_0 = ((!(((RuntimeObject*)(ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A *)L_10) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0057;
	}

IL_0056:
	{
		G_B8_0 = 0;
	}

IL_0057:
	{
		V_1 = (bool)G_B8_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5965));
		bool L_11 = V_1;
		if (!L_11)
		{
			goto IL_0079;
		}
	}
	{
		// onValidPoseChanged.Invoke(poseAction, inputSource, poseIsValid);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5966));
		ValidPoseChangeHandler_t1D487A0B0E2FB0D02C72EF5365E81BCD3E33B41A * L_12 = __this->get_onValidPoseChanged_18();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_13 = __this->get_poseAction_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5990));
		int32_t L_14 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5990));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5991));
		bool L_15 = SteamVR_Action_Pose_Source_get_poseIsValid_m45C4445DBD635BF4EDAA590D30874EA233DED74D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5991));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5992));
		NullCheck(L_12);
		ValidPoseChangeHandler_Invoke_m2DB8001CFAE1F578556A47959FA7FDEC22075702(L_12, L_13, L_14, L_15, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5992));
	}

IL_0079:
	{
		// if (deviceIsConnected != lastDeviceIsConnected && onDeviceConnectedChanged != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5967));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5993));
		bool L_16 = SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5993));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5994));
		bool L_17 = SteamVR_Action_Pose_Source_get_lastDeviceIsConnected_m13EFE0AE18A9B2F59BA86780A1A61B9BB367604D(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5994));
		if ((((int32_t)L_16) == ((int32_t)L_17)))
		{
			goto IL_0092;
		}
	}
	{
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_18 = __this->get_onDeviceConnectedChanged_19();
		G_B13_0 = ((!(((RuntimeObject*)(DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 *)L_18) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_0093;
	}

IL_0092:
	{
		G_B13_0 = 0;
	}

IL_0093:
	{
		V_2 = (bool)G_B13_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5968));
		bool L_19 = V_2;
		if (!L_19)
		{
			goto IL_00b5;
		}
	}
	{
		// onDeviceConnectedChanged.Invoke(poseAction, inputSource, deviceIsConnected);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5969));
		DeviceConnectedChangeHandler_t4AC124A9A94D668A0FB45EA8FC718729CEA3D0D9 * L_20 = __this->get_onDeviceConnectedChanged_19();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_21 = __this->get_poseAction_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5995));
		int32_t L_22 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5995));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5996));
		bool L_23 = SteamVR_Action_Pose_Source_get_deviceIsConnected_mF1AE6114E98F19B5783F49FDB71381DF6D7CC963(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5996));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5997));
		NullCheck(L_20);
		DeviceConnectedChangeHandler_Invoke_mEEAA2A7D5DB7888DAA31E9B414946CF495F26A7F(L_20, L_21, L_22, L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5997));
	}

IL_00b5:
	{
		// if (changed && onChange != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5970));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5998));
		bool L_24 = VirtFuncInvoker0< bool >::Invoke(31 /* System.Boolean Valve.VR.SteamVR_Action_In_Source::get_changed() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5998));
		if (!L_24)
		{
			goto IL_00c8;
		}
	}
	{
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_25 = __this->get_onChange_15();
		G_B18_0 = ((!(((RuntimeObject*)(ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE *)L_25) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_00c9;
	}

IL_00c8:
	{
		G_B18_0 = 0;
	}

IL_00c9:
	{
		V_3 = (bool)G_B18_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5971));
		bool L_26 = V_3;
		if (!L_26)
		{
			goto IL_00e5;
		}
	}
	{
		// onChange.Invoke(poseAction, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5972));
		ChangeHandler_tBB749BC376815901B6E13DF03202383F3302BFBE * L_27 = __this->get_onChange_15();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_28 = __this->get_poseAction_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5999));
		int32_t L_29 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5999));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6000));
		NullCheck(L_27);
		ChangeHandler_Invoke_mB5D41EA120DB15F9D1C3D31862A5B481CE22C0B8(L_27, L_28, L_29, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6000));
	}

IL_00e5:
	{
		// if (active != lastActive && onActiveChange != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5973));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6001));
		bool L_30 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6001));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6002));
		bool L_31 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6002));
		if ((((int32_t)L_30) == ((int32_t)L_31)))
		{
			goto IL_00fe;
		}
	}
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_32 = __this->get_onActiveChange_13();
		G_B23_0 = ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_32) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_00ff;
	}

IL_00fe:
	{
		G_B23_0 = 0;
	}

IL_00ff:
	{
		V_4 = (bool)G_B23_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5974));
		bool L_33 = V_4;
		if (!L_33)
		{
			goto IL_0123;
		}
	}
	{
		// onActiveChange.Invoke(poseAction, inputSource, active);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5975));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_34 = __this->get_onActiveChange_13();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_35 = __this->get_poseAction_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6003));
		int32_t L_36 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6003));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6004));
		bool L_37 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6004));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6005));
		NullCheck(L_34);
		ActiveChangeHandler_Invoke_mCCA44BC573ECDBA8778D4910575267293389F622(L_34, L_35, L_36, L_37, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6005));
	}

IL_0123:
	{
		// if (activeBinding != lastActiveBinding && onActiveBindingChange != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5976));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6006));
		bool L_38 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6006));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6007));
		bool L_39 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6007));
		if ((((int32_t)L_38) == ((int32_t)L_39)))
		{
			goto IL_013c;
		}
	}
	{
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_40 = __this->get_onActiveBindingChange_14();
		G_B28_0 = ((!(((RuntimeObject*)(ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E *)L_40) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		goto IL_013d;
	}

IL_013c:
	{
		G_B28_0 = 0;
	}

IL_013d:
	{
		V_5 = (bool)G_B28_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5977));
		bool L_41 = V_5;
		if (!L_41)
		{
			goto IL_0161;
		}
	}
	{
		// onActiveBindingChange.Invoke(poseAction, inputSource, activeBinding);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5978));
		ActiveChangeHandler_t2BD02546A8103AFCEA506FDB4C84A21F0218D36E * L_42 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_43 = __this->get_poseAction_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6008));
		int32_t L_44 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6008));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6009));
		bool L_45 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6009));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6010));
		NullCheck(L_42);
		ActiveChangeHandler_Invoke_mCCA44BC573ECDBA8778D4910575267293389F622(L_42, L_43, L_44, L_45, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6010));
	}

IL_0161:
	{
		// if (onUpdate != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5979));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_46 = __this->get_onUpdate_16();
		V_6 = (bool)((!(((RuntimeObject*)(UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 *)L_46) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5980));
		bool L_47 = V_6;
		if (!L_47)
		{
			goto IL_0188;
		}
	}
	{
		// onUpdate.Invoke(poseAction, inputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5981));
		UpdateHandler_t4F6AB1825F5E5CE6A7BBCD6C84541B3DF13C2AA1 * L_48 = __this->get_onUpdate_16();
		SteamVR_Action_Pose_tC80CDCF5892F57737ABFCFF1E7BD7DC52951846C * L_49 = __this->get_poseAction_34();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6011));
		int32_t L_50 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6011));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6012));
		NullCheck(L_48);
		UpdateHandler_Invoke_mE74BC4C57DFC977BC12469CC6062FB39140C92F8(L_48, L_49, L_50, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6012));
	}

IL_0188:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5982));
		return;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateVelocity(Valve.VR.HmdVector3_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vector0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___vector0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m0EFB0199BB41C17641591850E4EE721C5C9F6991_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6013));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6014));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6015));
		// return GetUnityCoordinateVelocity(vector.v0, vector.v1, vector.v2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6016));
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_0 = ___vector0;
		float L_1 = L_0.get_v0_0();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_2 = ___vector0;
		float L_3 = L_2.get_v1_1();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_4 = ___vector0;
		float L_5 = L_4.get_v2_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6018));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m170A3FFF941B012949E57D5DA611B896170AD4BD(__this, L_1, L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6018));
		V_0 = L_6;
		goto IL_001c;
	}

IL_001c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6017));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_0;
		return L_7;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateAngularVelocity(Valve.VR.HmdVector3_t)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  ___vector0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___vector0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m5E6CB1D6CB2B4C85D9E36419C363A372BE33770B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6019));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6020));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6021));
		// return GetUnityCoordinateAngularVelocity(vector.v0, vector.v1, vector.v2);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6022));
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_0 = ___vector0;
		float L_1 = L_0.get_v0_0();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_2 = ___vector0;
		float L_3 = L_2.get_v1_1();
		HmdVector3_t_t62AE508B69C04959DCD5633927536E28C2E6113A  L_4 = ___vector0;
		float L_5 = L_4.get_v2_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6024));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_6 = SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m64A302D834078EB5F852E2454736416EFAA6094D(__this, L_1, L_3, L_5, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6024));
		V_0 = L_6;
		goto IL_001c;
	}

IL_001c:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6023));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_7 = V_0;
		return L_7;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateVelocity(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m170A3FFF941B012949E57D5DA611B896170AD4BD (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m170A3FFF941B012949E57D5DA611B896170AD4BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___x0), (&___y1), (&___z2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_GetUnityCoordinateVelocity_m170A3FFF941B012949E57D5DA611B896170AD4BD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6025));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6026));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6027));
		// Vector3 vector = new Vector3();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6028));
		il2cpp_codegen_initobj((&V_0), sizeof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 ));
		// vector.x = x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6029));
		float L_0 = ___x0;
		(&V_0)->set_x_2(L_0);
		// vector.y = y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6030));
		float L_1 = ___y1;
		(&V_0)->set_y_3(L_1);
		// vector.z = -z;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6031));
		float L_2 = ___z2;
		(&V_0)->set_z_4(((-L_2)));
		// return vector;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6032));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		V_1 = L_3;
		goto IL_0026;
	}

IL_0026:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6033));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = V_1;
		return L_4;
	}
}
// UnityEngine.Vector3 Valve.VR.SteamVR_Action_Pose_Source::GetUnityCoordinateAngularVelocity(System.Single,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m64A302D834078EB5F852E2454736416EFAA6094D (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, float ___x0, float ___y1, float ___z2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m64A302D834078EB5F852E2454736416EFAA6094D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_0;
	memset((&V_0), 0, sizeof(V_0));
	Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  V_1;
	memset((&V_1), 0, sizeof(V_1));
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___x0), (&___y1), (&___z2));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_GetUnityCoordinateAngularVelocity_m64A302D834078EB5F852E2454736416EFAA6094D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6034));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6035));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6036));
		// Vector3 vector = new Vector3();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6037));
		il2cpp_codegen_initobj((&V_0), sizeof(Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720 ));
		// vector.x = -x;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6038));
		float L_0 = ___x0;
		(&V_0)->set_x_2(((-L_0)));
		// vector.y = -y;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6039));
		float L_1 = ___y1;
		(&V_0)->set_y_3(((-L_1)));
		// vector.z = z;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6040));
		float L_2 = ___z2;
		(&V_0)->set_z_4(L_2);
		// return vector;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6041));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_3 = V_0;
		V_1 = L_3;
		goto IL_0027;
	}

IL_0027:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6042));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_4 = V_1;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source__ctor_mADDAC326C7500D82492B45F896F5F57C4B60D880 (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source__ctor_mADDAC326C7500D82492B45F896F5F57C4B60D880_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source__ctor_mADDAC326C7500D82492B45F896F5F57C4B60D880_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6043));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6044));
	{
		// public ETrackingUniverseOrigin universeOrigin = ETrackingUniverseOrigin.TrackingUniverseRawAndUncalibrated;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6045));
		__this->set_universeOrigin_10(2);
		// public float changeTolerance = Mathf.Epsilon;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6046));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_12(L_0);
		// protected InputPoseActionData_t poseActionData = new InputPoseActionData_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6047));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_1 = __this->get_address_of_poseActionData_31();
		il2cpp_codegen_initobj(L_1, sizeof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 ));
		// protected InputPoseActionData_t lastPoseActionData = new InputPoseActionData_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6048));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_2 = __this->get_address_of_lastPoseActionData_32();
		il2cpp_codegen_initobj(L_2, sizeof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 ));
		// protected InputPoseActionData_t tempPoseActionData = new InputPoseActionData_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6049));
		InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 * L_3 = __this->get_address_of_tempPoseActionData_33();
		il2cpp_codegen_initobj(L_3, sizeof(InputPoseActionData_t_t6F2C776E0AA5528E702E6079C156B7747182C607 ));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6050));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6050));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Pose_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source__cctor_mB91677EC6687DBEACF312A80A30E464B6A53DAFB (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source__cctor_mB91677EC6687DBEACF312A80A30E464B6A53DAFB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source__cctor_mB91677EC6687DBEACF312A80A30E464B6A53DAFB_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6051));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6052));
	{
		// protected static uint poseActionData_size = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6053));
		((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->set_poseActionData_size_11(0);
		// public static float framesAhead = 2;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6054));
		((SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27_il2cpp_TypeInfo_var))->set_framesAhead_35((2.0f));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single::add_onChange(Valve.VR.SteamVR_Action_Single_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onChange_m0E181DD6C8A9E26A110E3B30EA0047B3F5731C9C (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onChange_m0E181DD6C8A9E26A110E3B30EA0047B3F5731C9C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_add_onChange_m0E181DD6C8A9E26A110E3B30EA0047B3F5731C9C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6055));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6056));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6057));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6058));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6060));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6060));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6061));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6061));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6059));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onChange(Valve.VR.SteamVR_Action_Single_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onChange_mB860B6CBC6D9A38CE3709BA007FFC24DE6C0DE86 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onChange_mB860B6CBC6D9A38CE3709BA007FFC24DE6C0DE86_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_remove_onChange_mB860B6CBC6D9A38CE3709BA007FFC24DE6C0DE86_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6062));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6063));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6064));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6065));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6067));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6067));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6068));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6068));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6066));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::add_onUpdate(Valve.VR.SteamVR_Action_Single_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onUpdate_mC78D02D73CDE8B2C89CDC5A61F48489674435205 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onUpdate_mC78D02D73CDE8B2C89CDC5A61F48489674435205_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_add_onUpdate_mC78D02D73CDE8B2C89CDC5A61F48489674435205_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6069));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6070));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6071));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6072));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6074));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6074));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6075));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6075));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6073));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onUpdate(Valve.VR.SteamVR_Action_Single_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onUpdate_mB6CFF884E7A23B01E90F1B25276A64FC0F688A04 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onUpdate_mB6CFF884E7A23B01E90F1B25276A64FC0F688A04_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_remove_onUpdate_mB6CFF884E7A23B01E90F1B25276A64FC0F688A04_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6076));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6077));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6078));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6079));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6081));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6081));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6082));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6082));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onUpdate += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onUpdate -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6080));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::add_onAxis(Valve.VR.SteamVR_Action_Single_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onAxis_mA63E548682E754C613E2D7A015217E81D0F90A0E (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onAxis_mA63E548682E754C613E2D7A015217E81D0F90A0E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_add_onAxis_mA63E548682E754C613E2D7A015217E81D0F90A0E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6083));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6084));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6085));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6086));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6088));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6088));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6089));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6089));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6087));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onAxis(Valve.VR.SteamVR_Action_Single_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onAxis_m2DF4D424C0FF71247620FC539C1DF2D72986F4A8 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onAxis_m2DF4D424C0FF71247620FC539C1DF2D72986F4A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_remove_onAxis_m2DF4D424C0FF71247620FC539C1DF2D72986F4A8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6090));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6091));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6092));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6093));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6095));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6095));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6096));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6096));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onAxis += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onAxis -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6094));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::add_onActiveChange(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onActiveChange_m95961D3E9AB48A49EC3540D85FB6953C55208C4C (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onActiveChange_m95961D3E9AB48A49EC3540D85FB6953C55208C4C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_add_onActiveChange_m95961D3E9AB48A49EC3540D85FB6953C55208C4C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6097));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6098));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6099));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6100));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6102));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6102));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6103));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onActiveChange_m1F6680C2292E111DB5C646ACF18B915E97FCAD65(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6103));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6101));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onActiveChange(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onActiveChange_m22CEF366F030B5DB12818FEE553B97611CF9D1DA (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onActiveChange_m22CEF366F030B5DB12818FEE553B97611CF9D1DA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_remove_onActiveChange_m22CEF366F030B5DB12818FEE553B97611CF9D1DA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6104));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6105));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6106));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6107));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6109));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6109));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6110));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onActiveChange_m57429A6EDBB434A11FAD387C6A4FE3C1A87D45EF(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6110));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6108));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_add_onActiveBindingChange_mA48443D7D4920B450EF8DEFE5F0C732290336F29 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_add_onActiveBindingChange_mA48443D7D4920B450EF8DEFE5F0C732290336F29_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_add_onActiveBindingChange_mA48443D7D4920B450EF8DEFE5F0C732290336F29_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6111));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6112));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6113));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6114));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6116));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6116));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6117));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_add_onActiveBindingChange_m6187F6A9C25E278771AB9620CC3A622C2DA6B91C(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6117));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6115));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_remove_onActiveBindingChange_m9F6ACF548E2519654A83D71278031442FB05EE34 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_remove_onActiveBindingChange_m9F6ACF548E2519654A83D71278031442FB05EE34_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_remove_onActiveBindingChange_m9F6ACF548E2519654A83D71278031442FB05EE34_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6118));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6119));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6120));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6121));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6123));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6123));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = ___value0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6124));
		NullCheck(L_1);
		SteamVR_Action_Single_Source_remove_onActiveBindingChange_mBCD97A3A9E5EF5A9D861D8540468DDA5347D386D(L_1, L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6124));
		// { add { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange += value; } remove { sourceMap[SteamVR_Input_Sources.Any].onActiveBindingChange -= value; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6122));
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_get_axis_m44519104AA50E7E5F50435818CD46866C7BF612D (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_get_axis_m44519104AA50E7E5F50435818CD46866C7BF612D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_get_axis_m44519104AA50E7E5F50435818CD46866C7BF612D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6125));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6126));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6127));
		// public float axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6128));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6130));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6130));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6131));
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6131));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float axis { get { return sourceMap[SteamVR_Input_Sources.Any].axis; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6129));
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_get_lastAxis_m1DCFA8843AE035E2889036BD29186D1561B42E2A (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_get_lastAxis_m1DCFA8843AE035E2889036BD29186D1561B42E2A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_get_lastAxis_m1DCFA8843AE035E2889036BD29186D1561B42E2A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6132));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6133));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6134));
		// public float lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6135));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6137));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6137));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6138));
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Single_Source_get_lastAxis_m3BB3B19BEE34D02E4B2482059D7E7B5F3F752DAF(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6138));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastAxis { get { return sourceMap[SteamVR_Input_Sources.Any].lastAxis; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6136));
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_get_delta_mF29B6CCFC6BAFE59C2A91CCEB61CB13134ACDADF (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_get_delta_mF29B6CCFC6BAFE59C2A91CCEB61CB13134ACDADF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_get_delta_mF29B6CCFC6BAFE59C2A91CCEB61CB13134ACDADF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6139));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6140));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6141));
		// public float delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6142));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6144));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6144));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6145));
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6145));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float delta { get { return sourceMap[SteamVR_Input_Sources.Any].delta; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6143));
		float L_3 = V_0;
		return L_3;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_get_lastDelta_m9FC36C5747FA41CC68CE99E29A60D85FA7E17C33 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_get_lastDelta_m9FC36C5747FA41CC68CE99E29A60D85FA7E17C33_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_get_lastDelta_m9FC36C5747FA41CC68CE99E29A60D85FA7E17C33_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6146));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6147));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6148));
		// public float lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6149));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6151));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_1 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, 0, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6151));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6152));
		NullCheck(L_1);
		float L_2 = SteamVR_Action_Single_Source_get_lastDelta_m4D35501771FFC7984A62619FEF732F456B8F4CFD(L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6152));
		V_0 = L_2;
		goto IL_0015;
	}

IL_0015:
	{
		// public float lastDelta { get { return sourceMap[SteamVR_Input_Sources.Any].lastDelta; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6150));
		float L_3 = V_0;
		return L_3;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single__ctor_m27F8A10B2EE4474D28D1C208D06E13D74411C571 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single__ctor_m27F8A10B2EE4474D28D1C208D06E13D74411C571_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single__ctor_m27F8A10B2EE4474D28D1C208D06E13D74411C571_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6153));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6154));
	{
		// public SteamVR_Action_Single() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6155));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6158));
		SteamVR_Action_In_2__ctor_m3D48B8CB47E690C4518B62F2A6AEEAA715C58756(__this, /*hidden argument*/SteamVR_Action_In_2__ctor_m3D48B8CB47E690C4518B62F2A6AEEAA715C58756_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6158));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6156));
		// public SteamVR_Action_Single() { }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6157));
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::GetAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_GetAxis_m3847D567B96AA8D8186F641ED603D3C28C77F04B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6159));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6160));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6161));
		// return sourceMap[inputSource].axis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6162));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6164));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6164));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6165));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6165));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6163));
		float L_4 = V_0;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::GetAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetAxisDelta_mE450C143DCA1DA3593748C49F13A55DC5EDD55DE (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_GetAxisDelta_mE450C143DCA1DA3593748C49F13A55DC5EDD55DE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_GetAxisDelta_mE450C143DCA1DA3593748C49F13A55DC5EDD55DE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6166));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6167));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6168));
		// return sourceMap[inputSource].delta;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6169));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6171));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6171));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6172));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6172));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6170));
		float L_4 = V_0;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::GetLastAxis(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetLastAxis_mBDFD323C7FDCE109EDE4A3A8F7713FAF08A68466 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_GetLastAxis_mBDFD323C7FDCE109EDE4A3A8F7713FAF08A68466_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_GetLastAxis_mBDFD323C7FDCE109EDE4A3A8F7713FAF08A68466_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6173));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6174));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6175));
		// return sourceMap[inputSource].lastAxis;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6176));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6178));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6178));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6179));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Single_Source_get_lastAxis_m3BB3B19BEE34D02E4B2482059D7E7B5F3F752DAF(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6179));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6177));
		float L_4 = V_0;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single::GetLastAxisDelta(Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_GetLastAxisDelta_m832E2D6B334522EB20BC2571B5C287B6888BE65B (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, int32_t ___inputSource0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_GetLastAxisDelta_m832E2D6B334522EB20BC2571B5C287B6888BE65B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	float V_0 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___inputSource0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_GetLastAxisDelta_m832E2D6B334522EB20BC2571B5C287B6888BE65B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6180));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6181));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6182));
		// return sourceMap[inputSource].lastDelta;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6183));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6185));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6185));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6186));
		NullCheck(L_2);
		float L_3 = SteamVR_Action_Single_Source_get_lastDelta_m4D35501771FFC7984A62619FEF732F456B8F4CFD(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6186));
		V_0 = L_3;
		goto IL_0015;
	}

IL_0015:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6184));
		float L_4 = V_0;
		return L_4;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnActiveChangeListener(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnActiveChangeListener_m3423FDCE1372AFA80166AFEC40D98C6039ADD56F (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnActiveChangeListener_m3423FDCE1372AFA80166AFEC40D98C6039ADD56F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_AddOnActiveChangeListener_m3423FDCE1372AFA80166AFEC40D98C6039ADD56F_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6187));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6188));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6189));
		// sourceMap[inputSource].onActiveChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6190));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6192));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6192));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6193));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onActiveChange_m1F6680C2292E111DB5C646ACF18B915E97FCAD65(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6193));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6191));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnActiveChangeListener(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnActiveChangeListener_mE6A81267A982AF4F2ABF5959B44E4516DDE0568C (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnActiveChangeListener_mE6A81267A982AF4F2ABF5959B44E4516DDE0568C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_RemoveOnActiveChangeListener_mE6A81267A982AF4F2ABF5959B44E4516DDE0568C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6194));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6195));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6196));
		// sourceMap[inputSource].onActiveChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6197));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6199));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6199));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6200));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onActiveChange_m57429A6EDBB434A11FAD387C6A4FE3C1A87D45EF(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6200));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6198));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnActiveBindingChangeListener_mC470F870182CEDDF291595E2B0ACDBEB0A34D47C (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnActiveBindingChangeListener_mC470F870182CEDDF291595E2B0ACDBEB0A34D47C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_AddOnActiveBindingChangeListener_mC470F870182CEDDF291595E2B0ACDBEB0A34D47C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6201));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6202));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6203));
		// sourceMap[inputSource].onActiveBindingChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6204));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6206));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6206));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6207));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onActiveBindingChange_m6187F6A9C25E278771AB9620CC3A622C2DA6B91C(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6207));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6205));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnActiveBindingChangeListener(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnActiveBindingChangeListener_m11F50D6606A3B231202E7D515BBE10A8966C04AC (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnActiveBindingChangeListener_m11F50D6606A3B231202E7D515BBE10A8966C04AC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_RemoveOnActiveBindingChangeListener_m11F50D6606A3B231202E7D515BBE10A8966C04AC_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6208));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6209));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6210));
		// sourceMap[inputSource].onActiveBindingChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6211));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6213));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6213));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6214));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onActiveBindingChange_mBCD97A3A9E5EF5A9D861D8540468DDA5347D386D(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6214));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6212));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnChangeListener(Valve.VR.SteamVR_Action_Single_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnChangeListener_m6237EE838A5DCF5554F66582A94676E1677882C2 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnChangeListener_m6237EE838A5DCF5554F66582A94676E1677882C2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_AddOnChangeListener_m6237EE838A5DCF5554F66582A94676E1677882C2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6215));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6216));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6217));
		// sourceMap[inputSource].onChange += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6218));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6220));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6220));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6221));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6221));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6219));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnChangeListener(Valve.VR.SteamVR_Action_Single_ChangeHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnChangeListener_m8A7A3A5D41982BE2C3C2339BA76BE273E1811477 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnChangeListener_m8A7A3A5D41982BE2C3C2339BA76BE273E1811477_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_RemoveOnChangeListener_m8A7A3A5D41982BE2C3C2339BA76BE273E1811477_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6222));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6223));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6224));
		// sourceMap[inputSource].onChange -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6225));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6227));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6227));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6228));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6228));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6226));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnUpdateListener(Valve.VR.SteamVR_Action_Single_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnUpdateListener_m4FF9671C2A36838AE6540EB0AA147E1070E156EF (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnUpdateListener_m4FF9671C2A36838AE6540EB0AA147E1070E156EF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_AddOnUpdateListener_m4FF9671C2A36838AE6540EB0AA147E1070E156EF_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6229));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6230));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6231));
		// sourceMap[inputSource].onUpdate += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6232));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6234));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6234));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6235));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6235));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6233));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnUpdateListener(Valve.VR.SteamVR_Action_Single_UpdateHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnUpdateListener_m07A534D20CE531C158C55A52E9890833AC928E94 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnUpdateListener_m07A534D20CE531C158C55A52E9890833AC928E94_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_RemoveOnUpdateListener_m07A534D20CE531C158C55A52E9890833AC928E94_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6236));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6237));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6238));
		// sourceMap[inputSource].onUpdate -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6239));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6241));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6241));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6242));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6242));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6240));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::AddOnAxisListener(Valve.VR.SteamVR_Action_Single_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_AddOnAxisListener_m4155FA132B1D8D345B8E0A916049412919087DC3 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___functionToCall0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_AddOnAxisListener_m4155FA132B1D8D345B8E0A916049412919087DC3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToCall0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_AddOnAxisListener_m4155FA132B1D8D345B8E0A916049412919087DC3_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6243));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6244));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6245));
		// sourceMap[inputSource].onAxis += functionToCall;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6246));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6248));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6248));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_3 = ___functionToCall0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6249));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6249));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6247));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::RemoveOnAxisListener(Valve.VR.SteamVR_Action_Single_AxisHandler,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_RemoveOnAxisListener_m4C693DB70D179DCA4E2A96DA7AAA6802DBA69D02 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___functionToStopCalling0, int32_t ___inputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_RemoveOnAxisListener_m4C693DB70D179DCA4E2A96DA7AAA6802DBA69D02_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___functionToStopCalling0), (&___inputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_RemoveOnAxisListener_m4C693DB70D179DCA4E2A96DA7AAA6802DBA69D02_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6250));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6251));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6252));
		// sourceMap[inputSource].onAxis -= functionToStopCalling;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6253));
		SteamVR_Action_Single_Source_Map_tBD46D15F4FCB5A4B6BDA2B1FE96035D4DDBDBA37 * L_0 = ((SteamVR_Action_2_t6C5A72BCD96947140E949B195C2578D4AE46E170 *)__this)->get_sourceMap_4();
		int32_t L_1 = ___inputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6255));
		NullCheck(L_0);
		SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * L_2 = SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72(L_0, L_1, /*hidden argument*/SteamVR_Action_Source_Map_1_get_Item_m303FDBA93004D8CE7E49B6F079D27B5CB7AC9B72_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6255));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_3 = ___functionToStopCalling0;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6256));
		NullCheck(L_2);
		SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6256));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6254));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m8223F5E473177BE4E4768121775790E88C42F37D (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m8223F5E473177BE4E4768121775790E88C42F37D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnBeforeSerialize_m8223F5E473177BE4E4768121775790E88C42F37D_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6257));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6258));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6259));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6260));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single::UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m4DD9E6A600F937A3C391B083A236CC6669DE19E0 (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m4DD9E6A600F937A3C391B083A236CC6669DE19E0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_UnityEngine_ISerializationCallbackReceiver_OnAfterDeserialize_m4DD9E6A600F937A3C391B083A236CC6669DE19E0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6261));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6262));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6263));
		// InitAfterDeserialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6264));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6266));
		SteamVR_Action_2_InitAfterDeserialize_m6A42B25463661C95EFB21E4291307959C9F0E647(__this, /*hidden argument*/SteamVR_Action_2_InitAfterDeserialize_m6A42B25463661C95EFB21E4291307959C9F0E647_RuntimeMethod_var);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6266));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6265));
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_ActiveChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler__ctor_m190F25E9F151AE962BC2375C53FC86E95E12ED4A (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Single_ActiveChangeHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_Invoke_mB25857B7C1A2F20AA1DD0B4E50BAF973FAE7728A (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, bool ___active2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker2< int32_t, bool >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker2< int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___active2, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						GenericVirtActionInvoker3< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
					else
						VirtActionInvoker3< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___active2);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___active2, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___active2, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Single_ActiveChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Boolean,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ActiveChangeHandler_BeginInvoke_mF13BFC1490F6D843023205C2EEE973E757334212 (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, bool ___active2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ActiveChangeHandler_BeginInvoke_mF13BFC1490F6D843023205C2EEE973E757334212_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___active2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.SteamVR_Action_Single_ActiveChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ActiveChangeHandler_EndInvoke_m009272806A71B80800DCCEC0D40F4E7AB27570E5 (ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_AxisHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler__ctor_m77FDAF7B8C55A5EDDFAE09A7A2FBDE6F71613111 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Single_AxisHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_Invoke_m60A66159540CA8174A7C52BDC8E5E4F7301CFFC1 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Single_AxisHandler::BeginInvoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* AxisHandler_BeginInvoke_m2046E54809E6335910D833CADBA133D4EF372DC3 (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (AxisHandler_BeginInvoke_m2046E54809E6335910D833CADBA133D4EF372DC3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Single_AxisHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void AxisHandler_EndInvoke_m40730E296A8ED933D68857BE951B7BAF2F4A21FF (AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_ChangeHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler__ctor_m8C3023A91594EB9AD495FDAF6B6D9A7CAB842FB4 (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Single_ChangeHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_Invoke_m6672A8D7C2C829DAB05FF96A6B6DCD47C4234FED (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Single_ChangeHandler::BeginInvoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* ChangeHandler_BeginInvoke_m09B25A03BB84C5879140989A4A010C59A6532C45 (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (ChangeHandler_BeginInvoke_m09B25A03BB84C5879140989A4A010C59A6532C45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Single_ChangeHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void ChangeHandler_EndInvoke_m6091CB12E2FE7DA4C19CE26E53B96E94CCC976CA (ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_UpdateHandler::.ctor(System.Object,System.IntPtr)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler__ctor_m615A71B3C759B72EB938C012035EC7AA50040402 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.SteamVR_Action_Single_UpdateHandler::Invoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_Invoke_mEFC67AD99DE1C0D2468FF3D82FCAACA9B5B9B982 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegateArrayToInvoke = __this->get_delegates_11();
	Delegate_t** delegatesToInvoke;
	il2cpp_array_size_t length;
	if (delegateArrayToInvoke != NULL)
	{
		length = delegateArrayToInvoke->max_length;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(delegateArrayToInvoke->GetAddressAtUnchecked(0));
	}
	else
	{
		length = 1;
		delegatesToInvoke = reinterpret_cast<Delegate_t**>(&__this);
	}

	for (il2cpp_array_size_t i = 0; i < length; i++)
	{
		Delegate_t* currentDelegate = delegatesToInvoke[i];
		Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
		RuntimeObject* targetThis = currentDelegate->get_m_target_2();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker3< int32_t, float, float >::Invoke(targetMethod, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker3< int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(&___fromSource1) - 1), ___newAxis2, ___newDelta3, targetMethod);
				}
				typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
			}
		}
		else
		{
			// closed
			if (targetThis != NULL && il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_generic_instance(targetMethod))
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						GenericInterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						GenericVirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(targetMethod, targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
				else
				{
					if (il2cpp_codegen_method_is_interface_method(targetMethod))
						InterfaceActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
					else
						VirtActionInvoker4< SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3);
				}
			}
			else
			{
				if (targetThis == NULL && il2cpp_codegen_class_is_value_type(il2cpp_codegen_method_get_declaring_type(targetMethod)))
				{
					typedef void (*FunctionPointerType) (RuntimeObject*, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)((reinterpret_cast<RuntimeObject*>(___fromAction0) - 1), ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				if (targetThis == NULL)
				{
					typedef void (*FunctionPointerType) (SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *, int32_t, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fromAction0, ___fromSource1, ___newAxis2, ___newDelta3, targetMethod);
				}
			}
		}
	}
}
// System.IAsyncResult Valve.VR.SteamVR_Action_Single_UpdateHandler::BeginInvoke(Valve.VR.SteamVR_Action_Single,Valve.VR.SteamVR_Input_Sources,System.Single,System.Single,System.AsyncCallback,System.Object)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR RuntimeObject* UpdateHandler_BeginInvoke_mFC754024692F24E0BA7233998ED5FC996472F471 (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * ___fromAction0, int32_t ___fromSource1, float ___newAxis2, float ___newDelta3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (UpdateHandler_BeginInvoke_mFC754024692F24E0BA7233998ED5FC996472F471_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___fromAction0;
	__d_args[1] = Box(SteamVR_Input_Sources_tCE41AA589FB3B9516BDE0DFABDCB4AAEA29528F7_il2cpp_TypeInfo_var, &___fromSource1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newAxis2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___newDelta3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.SteamVR_Action_Single_UpdateHandler::EndInvoke(System.IAsyncResult)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void UpdateHandler_EndInvoke_m76D76A8109448944170AC09A70B954DDEFB999BC (UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onAxis(Valve.VR.SteamVR_Action_Single_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_0 = NULL;
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_1 = NULL;
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_add_onAxis_mD6207DBD9D01A9637D16677C7EE3239DEC4B3C3D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = V_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_6 = V_2;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_7 = V_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *>((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_9 = V_0;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_9) == ((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onAxis(Valve.VR.SteamVR_Action_Single_AxisHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_0 = NULL;
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_1 = NULL;
	AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_remove_onAxis_m7AC665F411374B61F073D43948D50EDDE66B7AF2_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_0 = __this->get_onAxis_12();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_1 = V_0;
		V_1 = L_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_2 = V_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)CastclassSealed((RuntimeObject*)L_4, AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843_il2cpp_TypeInfo_var));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 ** L_5 = __this->get_address_of_onAxis_12();
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_6 = V_2;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_7 = V_1;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_8 = InterlockedCompareExchangeImpl<AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *>((AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 **)L_5, L_6, L_7);
		V_0 = L_8;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_9 = V_0;
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_10 = V_1;
		if ((!(((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_9) == ((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onActiveChange(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onActiveChange_m1F6680C2292E111DB5C646ACF18B915E97FCAD65 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onActiveChange_m1F6680C2292E111DB5C646ACF18B915E97FCAD65_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_0 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_1 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_add_onActiveChange_m1F6680C2292E111DB5C646ACF18B915E97FCAD65_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_6 = V_2;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_7 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *>((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_9 = V_0;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onActiveChange(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onActiveChange_m57429A6EDBB434A11FAD387C6A4FE3C1A87D45EF (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onActiveChange_m57429A6EDBB434A11FAD387C6A4FE3C1A87D45EF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_0 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_1 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_remove_onActiveChange_m57429A6EDBB434A11FAD387C6A4FE3C1A87D45EF_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_0 = __this->get_onActiveChange_13();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** L_5 = __this->get_address_of_onActiveChange_13();
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_6 = V_2;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_7 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *>((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_9 = V_0;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onActiveBindingChange(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onActiveBindingChange_m6187F6A9C25E278771AB9620CC3A622C2DA6B91C (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onActiveBindingChange_m6187F6A9C25E278771AB9620CC3A622C2DA6B91C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_0 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_1 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_add_onActiveBindingChange_m6187F6A9C25E278771AB9620CC3A622C2DA6B91C_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_6 = V_2;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_7 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *>((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_9 = V_0;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onActiveBindingChange(Valve.VR.SteamVR_Action_Single_ActiveChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onActiveBindingChange_mBCD97A3A9E5EF5A9D861D8540468DDA5347D386D (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onActiveBindingChange_mBCD97A3A9E5EF5A9D861D8540468DDA5347D386D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_0 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_1 = NULL;
	ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_remove_onActiveBindingChange_mBCD97A3A9E5EF5A9D861D8540468DDA5347D386D_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_0 = __this->get_onActiveBindingChange_14();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_1 = V_0;
		V_1 = L_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_2 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)CastclassSealed((RuntimeObject*)L_4, ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE_il2cpp_TypeInfo_var));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE ** L_5 = __this->get_address_of_onActiveBindingChange_14();
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_6 = V_2;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_7 = V_1;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_8 = InterlockedCompareExchangeImpl<ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *>((ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE **)L_5, L_6, L_7);
		V_0 = L_8;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_9 = V_0;
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_10 = V_1;
		if ((!(((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_9) == ((RuntimeObject*)(ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onChange(Valve.VR.SteamVR_Action_Single_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_0 = NULL;
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_1 = NULL;
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_add_onChange_m069AAC383CD4F163B72BB46667E98FABB5C512C1_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_2 = V_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_6 = V_2;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_7 = V_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *>((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_9 = V_0;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_9) == ((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onChange(Valve.VR.SteamVR_Action_Single_ChangeHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_0 = NULL;
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_1 = NULL;
	ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_remove_onChange_mA6A9C82FD5071E689ADAAF2B4600F040F9F766D5_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_0 = __this->get_onChange_15();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_1 = V_0;
		V_1 = L_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_2 = V_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)CastclassSealed((RuntimeObject*)L_4, ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED_il2cpp_TypeInfo_var));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED ** L_5 = __this->get_address_of_onChange_15();
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_6 = V_2;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_7 = V_1;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_8 = InterlockedCompareExchangeImpl<ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *>((ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED **)L_5, L_6, L_7);
		V_0 = L_8;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_9 = V_0;
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_10 = V_1;
		if ((!(((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_9) == ((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::add_onUpdate(Valve.VR.SteamVR_Action_Single_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_0 = NULL;
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_1 = NULL;
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_add_onUpdate_m4A350FBCC760CA187A1709360F237F3BD715FF77_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_2 = V_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Combine_mC25D2F7DECAFBA6D9A2F9EBA8A77063F0658ECF1(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_6 = V_2;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_7 = V_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *>((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_9 = V_0;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_9) == ((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::remove_onUpdate(Valve.VR.SteamVR_Action_Single_UpdateHandler)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_0 = NULL;
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_1 = NULL;
	UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * V_2 = NULL;
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_remove_onUpdate_mCD24B03F0DDBFB275AD1A829C9C9647C4BCA5E7F_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_0 = __this->get_onUpdate_16();
		V_0 = L_0;
	}

IL_0007:
	{
		CHECK_PAUSE_POINT;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_1 = V_0;
		V_1 = L_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_2 = V_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_3 = ___value0;
		Delegate_t * L_4 = Delegate_Remove_m0B0DB7D1B3AF96B71AFAA72BA0EFE32FBBC2932D(L_2, L_3, /*hidden argument*/NULL);
		V_2 = ((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)CastclassSealed((RuntimeObject*)L_4, UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D_il2cpp_TypeInfo_var));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D ** L_5 = __this->get_address_of_onUpdate_16();
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_6 = V_2;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_7 = V_1;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_8 = InterlockedCompareExchangeImpl<UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *>((UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D **)L_5, L_6, L_7);
		V_0 = L_8;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_9 = V_0;
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_10 = V_1;
		if ((!(((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_9) == ((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_10))))
		{
			goto IL_0007;
		}
	}
	{
		return;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_axis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6267));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6268));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6269));
		// public float axis { get { if (active) return actionData.x; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6270));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6275));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6275));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6271));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// public float axis { get { if (active) return actionData.x; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6272));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_2 = __this->get_address_of_actionData_20();
		float L_3 = L_2->get_x_2();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0019:
	{
		// public float axis { get { if (active) return actionData.x; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6273));
		V_1 = (0.0f);
		goto IL_0021;
	}

IL_0021:
	{
		// public float axis { get { if (active) return actionData.x; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6274));
		float L_4 = V_1;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_lastAxis()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_lastAxis_m3BB3B19BEE34D02E4B2482059D7E7B5F3F752DAF (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_lastAxis_m3BB3B19BEE34D02E4B2482059D7E7B5F3F752DAF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_lastAxis_m3BB3B19BEE34D02E4B2482059D7E7B5F3F752DAF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6276));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6277));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6278));
		// public float lastAxis { get { if (active) return lastActionData.x; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6279));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6284));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6284));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6280));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// public float lastAxis { get { if (active) return lastActionData.x; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6281));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_2 = __this->get_address_of_lastActionData_21();
		float L_3 = L_2->get_x_2();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0019:
	{
		// public float lastAxis { get { if (active) return lastActionData.x; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6282));
		V_1 = (0.0f);
		goto IL_0021;
	}

IL_0021:
	{
		// public float lastAxis { get { if (active) return lastActionData.x; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6283));
		float L_4 = V_1;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_delta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6285));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6286));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6287));
		// public float delta { get { if (active) return actionData.deltaX; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6288));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6293));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6293));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6289));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// public float delta { get { if (active) return actionData.deltaX; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6290));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_2 = __this->get_address_of_actionData_20();
		float L_3 = L_2->get_deltaX_5();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0019:
	{
		// public float delta { get { if (active) return actionData.deltaX; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6291));
		V_1 = (0.0f);
		goto IL_0021;
	}

IL_0021:
	{
		// public float delta { get { if (active) return actionData.deltaX; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6292));
		float L_4 = V_1;
		return L_4;
	}
}
// System.Single Valve.VR.SteamVR_Action_Single_Source::get_lastDelta()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR float SteamVR_Action_Single_Source_get_lastDelta_m4D35501771FFC7984A62619FEF732F456B8F4CFD (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_lastDelta_m4D35501771FFC7984A62619FEF732F456B8F4CFD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	float V_1 = 0.0f;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_lastDelta_m4D35501771FFC7984A62619FEF732F456B8F4CFD_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6294));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6295));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6296));
		// public float lastDelta { get { if (active) return lastActionData.deltaX; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6297));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6302));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6302));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6298));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// public float lastDelta { get { if (active) return lastActionData.deltaX; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6299));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_2 = __this->get_address_of_lastActionData_21();
		float L_3 = L_2->get_deltaX_5();
		V_1 = L_3;
		goto IL_0021;
	}

IL_0019:
	{
		// public float lastDelta { get { if (active) return lastActionData.deltaX; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6300));
		V_1 = (0.0f);
		goto IL_0021;
	}

IL_0021:
	{
		// public float lastDelta { get { if (active) return lastActionData.deltaX; else return 0; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6301));
		float L_4 = V_1;
		return L_4;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_changed()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_changed_m0DEF56E0E974A4A54A1B48147183089962ADD8D4 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_changed_m0DEF56E0E974A4A54A1B48147183089962ADD8D4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_changed_m0DEF56E0E974A4A54A1B48147183089962ADD8D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6303));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6304));
	{
		// public override bool changed { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6305));
		bool L_0 = __this->get_U3CchangedU3Ek__BackingField_17();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::set_changed(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_set_changed_m975DAD579B9F574DE2622AEE8F8B0FB0D483BB29 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_set_changed_m975DAD579B9F574DE2622AEE8F8B0FB0D483BB29_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_set_changed_m975DAD579B9F574DE2622AEE8F8B0FB0D483BB29_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6306));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6307));
	{
		// public override bool changed { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6308));
		bool L_0 = ___value0;
		__this->set_U3CchangedU3Ek__BackingField_17(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_lastChanged()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_lastChanged_m015B96344356A885CA454F8F71753FCB8E26BCEB (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_lastChanged_m015B96344356A885CA454F8F71753FCB8E26BCEB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_lastChanged_m015B96344356A885CA454F8F71753FCB8E26BCEB_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6309));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6310));
	{
		// public override bool lastChanged { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6311));
		bool L_0 = __this->get_U3ClastChangedU3Ek__BackingField_18();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::set_lastChanged(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_set_lastChanged_m01F66502FD0C22144111B65AD8F92C766AF9D636 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_set_lastChanged_m01F66502FD0C22144111B65AD8F92C766AF9D636_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_set_lastChanged_m01F66502FD0C22144111B65AD8F92C766AF9D636_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6312));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6313));
	{
		// public override bool lastChanged { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6314));
		bool L_0 = ___value0;
		__this->set_U3ClastChangedU3Ek__BackingField_18(L_0);
		return;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Single_Source::get_activeOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Single_Source_get_activeOrigin_m6FDD59534C163B6AC7BBE49F4EA127761130FC5E (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_activeOrigin_m6FDD59534C163B6AC7BBE49F4EA127761130FC5E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	uint64_t V_1 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_activeOrigin_m6FDD59534C163B6AC7BBE49F4EA127761130FC5E_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6315));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6316));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6317));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6318));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6323));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6323));
		V_0 = L_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6319));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0019;
		}
	}
	{
		// return actionData.activeOrigin;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6320));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_2 = __this->get_address_of_actionData_20();
		uint64_t L_3 = L_2->get_activeOrigin_1();
		V_1 = L_3;
		goto IL_001e;
	}

IL_0019:
	{
		// return 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6321));
		V_1 = (((int64_t)((int64_t)0)));
		goto IL_001e;
	}

IL_001e:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6322));
		uint64_t L_4 = V_1;
		return L_4;
	}
}
// System.UInt64 Valve.VR.SteamVR_Action_Single_Source::get_lastActiveOrigin()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR uint64_t SteamVR_Action_Single_Source_get_lastActiveOrigin_m4D4DDECE23B149181AF0B67A534B43C5D456E1B9 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_lastActiveOrigin_m4D4DDECE23B149181AF0B67A534B43C5D456E1B9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	uint64_t V_0 = 0;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_lastActiveOrigin_m4D4DDECE23B149181AF0B67A534B43C5D456E1B9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6324));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6325));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6326));
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6327));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_21();
		uint64_t L_1 = L_0->get_activeOrigin_1();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override ulong lastActiveOrigin { get { return lastActionData.activeOrigin; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6328));
		uint64_t L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_active()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_active_m1A1995551D8574BB97828B82688B80ADEEBB3727 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_active_m1A1995551D8574BB97828B82688B80ADEEBB3727_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_active_m1A1995551D8574BB97828B82688B80ADEEBB3727_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6329));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6330));
	int32_t G_B3_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6331));
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6332));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6334));
		bool L_0 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6334));
		if (!L_0)
		{
			goto IL_0021;
		}
	}
	{
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_1 = ((SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 *)__this)->get_action_2();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6335));
		NullCheck(L_1);
		SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * L_2 = VirtFuncInvoker0< SteamVR_ActionSet_t9D647E559B2D35F695CC7613111572186FBCA9F6 * >::Invoke(19 /* Valve.VR.SteamVR_ActionSet Valve.VR.SteamVR_Action::get_actionSet() */, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6335));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6336));
		int32_t L_3 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6336));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6337));
		NullCheck(L_2);
		bool L_4 = SteamVR_ActionSet_IsActive_m9909588615E0191F96E971182B8A52F864F39BEB(L_2, L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6337));
		G_B3_0 = ((int32_t)(L_4));
		goto IL_0022;
	}

IL_0021:
	{
		G_B3_0 = 0;
	}

IL_0022:
	{
		V_0 = (bool)G_B3_0;
		goto IL_0025;
	}

IL_0025:
	{
		// public override bool active { get { return activeBinding && action.actionSet.IsActive(inputSource); } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6333));
		bool L_5 = V_0;
		return L_5;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_activeBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_activeBinding_m1400EDE9F002640A152E2635925F6666EEC806AA (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_activeBinding_m1400EDE9F002640A152E2635925F6666EEC806AA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_activeBinding_m1400EDE9F002640A152E2635925F6666EEC806AA_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6338));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6339));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6340));
		// public override bool activeBinding { get { return actionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6341));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_actionData_20();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool activeBinding { get { return actionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6342));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_lastActive()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_lastActive_mC698067D49CFF214C0E3DFE2843561B40ED7F5D4 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_lastActive_mC698067D49CFF214C0E3DFE2843561B40ED7F5D4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_lastActive_mC698067D49CFF214C0E3DFE2843561B40ED7F5D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6343));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6344));
	{
		// public override bool lastActive { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6345));
		bool L_0 = __this->get_U3ClastActiveU3Ek__BackingField_19();
		return L_0;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::set_lastActive(System.Boolean)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_set_lastActive_mF260D32E1A3743CE519A71245463E212BD5041B6 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, bool ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_set_lastActive_mF260D32E1A3743CE519A71245463E212BD5041B6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_set_lastActive_mF260D32E1A3743CE519A71245463E212BD5041B6_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6346));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6347));
	{
		// public override bool lastActive { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6348));
		bool L_0 = ___value0;
		__this->set_U3ClastActiveU3Ek__BackingField_19(L_0);
		return;
	}
}
// System.Boolean Valve.VR.SteamVR_Action_Single_Source::get_lastActiveBinding()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR bool SteamVR_Action_Single_Source_get_lastActiveBinding_mE75BBB1B630DE00D561B4DFBD17CD656E0D3E350 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_get_lastActiveBinding_mE75BBB1B630DE00D561B4DFBD17CD656E0D3E350_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_get_lastActiveBinding_mE75BBB1B630DE00D561B4DFBD17CD656E0D3E350_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6349));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6350));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6351));
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6352));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_0 = __this->get_address_of_lastActionData_21();
		bool L_1 = L_0->get_bActive_0();
		V_0 = L_1;
		goto IL_000f;
	}

IL_000f:
	{
		// public override bool lastActiveBinding { get { return lastActionData.bActive; } }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6353));
		bool L_2 = V_0;
		return L_2;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::Preinitialize(Valve.VR.SteamVR_Action,Valve.VR.SteamVR_Input_Sources)
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_Preinitialize_m87FA95C685A8CE7AF09A0200945376B06056A6EE (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * ___wrappingAction0, int32_t ___forInputSource1, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_Preinitialize_m87FA95C685A8CE7AF09A0200945376B06056A6EE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___wrappingAction0), (&___forInputSource1));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_Preinitialize_m87FA95C685A8CE7AF09A0200945376B06056A6EE_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6354));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6355));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6356));
		// base.Preinitialize(wrappingAction, forInputSource);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6357));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_0 = ___wrappingAction0;
		int32_t L_1 = ___forInputSource1;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6360));
		SteamVR_Action_Source_Preinitialize_mD54CBA24E4881B8742430B3EDF16283316305913(__this, L_0, L_1, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6360));
		// singleAction = (SteamVR_Action_Single)wrappingAction;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6358));
		SteamVR_Action_t272895E0F3F361D1CB8C4560B42CC28B7861C734 * L_2 = ___wrappingAction0;
		__this->set_singleAction_22(((SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 *)CastclassClass((RuntimeObject*)L_2, SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81_il2cpp_TypeInfo_var)));
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6359));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::Initialize()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_Initialize_m19B01804BE3D508029178256FA59CAE7E0C663C1 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_Initialize_m19B01804BE3D508029178256FA59CAE7E0C663C1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	bool V_0 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_Initialize_m19B01804BE3D508029178256FA59CAE7E0C663C1_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6361));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6362));
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6363));
		// base.Initialize();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6364));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6369));
		SteamVR_Action_In_Source_Initialize_m8CC254F78B69011CCE42C3E64A38B481FEC5F795(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6369));
		// if (actionData_size == 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6365));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var);
		uint32_t L_0 = ((SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var))->get_actionData_size_10();
		V_0 = (bool)((((int32_t)L_0) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6366));
		bool L_1 = V_0;
		if (!L_1)
		{
			goto IL_0028;
		}
	}
	{
		// actionData_size = (uint)Marshal.SizeOf(typeof(InputAnalogActionData_t));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6367));
		RuntimeTypeHandle_t7B542280A22F0EC4EAC2061C29178845847A8B2D  L_2 = { reinterpret_cast<intptr_t> (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C_0_0_0_var) };
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6370));
		IL2CPP_RUNTIME_CLASS_INIT(Type_t_il2cpp_TypeInfo_var);
		Type_t * L_3 = Type_GetTypeFromHandle_m9DC58ADF0512987012A8A016FB64B068F3B1AFF6(L_2, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6370));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6371));
		IL2CPP_RUNTIME_CLASS_INIT(Marshal_tC795CE9CC2FFBA41EDB1AC1C0FEC04607DFA8A40_il2cpp_TypeInfo_var);
		int32_t L_4 = Marshal_SizeOf_m4F7DA827FA7A720395E6FDD2ABE78D4B00D43130(L_3, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6371));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var);
		((SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var))->set_actionData_size_10(L_4);
	}

IL_0028:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6368));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::UpdateValue()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source_UpdateValue_m33E85789043F4C950EA13896E2EA2E737351BE88 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source_UpdateValue_m33E85789043F4C950EA13896E2EA2E737351BE88_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	int32_t V_0 = 0;
	bool V_1 = false;
	uint64_t V_2 = 0;
	bool V_3 = false;
	bool V_4 = false;
	bool V_5 = false;
	bool V_6 = false;
	bool V_7 = false;
	bool V_8 = false;
	bool V_9 = false;
	bool V_10 = false;
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_LOCALS(methodExecutionContextLocals, (&V_0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source_UpdateValue_m33E85789043F4C950EA13896E2EA2E737351BE88_RuntimeMethod_var, methodExecutionContextThis, NULL, methodExecutionContextLocals);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6372));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6373));
	int32_t G_B6_0 = 0;
	int32_t G_B20_0 = 0;
	int32_t G_B25_0 = 0;
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6374));
		// lastActionData = actionData;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6375));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C  L_0 = __this->get_actionData_20();
		__this->set_lastActionData_21(L_0);
		// lastActive = active;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6376));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6415));
		bool L_1 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6415));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6416));
		VirtActionInvoker1< bool >::Invoke(15 /* System.Void Valve.VR.SteamVR_Action_Source::set_lastActive(System.Boolean) */, __this, L_1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6416));
		// EVRInputError err = OpenVR.Input.GetAnalogActionData(handle, ref actionData, actionData_size, SteamVR_Input_Source.GetHandle(inputSource));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6377));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6417));
		IL2CPP_RUNTIME_CLASS_INIT(OpenVR_tE75A98955EC4AA4B219CE822AA43E79E4CB99DB3_il2cpp_TypeInfo_var);
		CVRInput_t2BE4417A3C1EA0C6CF647B0706BF37F886CE599B * L_2 = OpenVR_get_Input_m904FD790D785E944EE58513F589E862530386414(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6417));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6418));
		uint64_t L_3 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6418));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_4 = __this->get_address_of_actionData_20();
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var);
		uint32_t L_5 = ((SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var))->get_actionData_size_10();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6419));
		int32_t L_6 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6419));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6420));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Input_Source_tAFDB40851F8E134E08DD2DD0BC1C1770705E81D0_il2cpp_TypeInfo_var);
		uint64_t L_7 = SteamVR_Input_Source_GetHandle_mEA0F6E33E3CB937C11859B35CDB283523240E185(L_6, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6420));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6421));
		NullCheck(L_2);
		int32_t L_8 = CVRInput_GetAnalogActionData_m363EF49EA0485B0A4FF93C37842AC2CF8D21041A(L_2, L_3, (InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C *)L_4, L_5, L_7, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6421));
		V_0 = L_8;
		// if (err != EVRInputError.None)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6378));
		int32_t L_9 = V_0;
		V_1 = (bool)((!(((uint32_t)L_9) <= ((uint32_t)0)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6379));
		bool L_10 = V_1;
		if (!L_10)
		{
			goto IL_009c;
		}
	}
	{
		// Debug.LogError("<b>[SteamVR]</b> GetAnalogActionData error (" + fullPath + "): " + err.ToString() + " handle: " + handle.ToString());
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6380));
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_11 = (StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E*)SZArrayNew(StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E_il2cpp_TypeInfo_var, (uint32_t)6);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_12 = L_11;
		NullCheck(L_12);
		ArrayElementTypeCheck (L_12, _stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		(L_12)->SetAt(static_cast<il2cpp_array_size_t>(0), (String_t*)_stringLiteralAC897ED588F0446677581414C46F231807AB2556);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_13 = L_12;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6422));
		String_t* L_14 = SteamVR_Action_Source_get_fullPath_mB0C33E6C1B4F91E908236055FFAE027ECB3ED996(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6422));
		NullCheck(L_13);
		ArrayElementTypeCheck (L_13, L_14);
		(L_13)->SetAt(static_cast<il2cpp_array_size_t>(1), (String_t*)L_14);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_15 = L_13;
		NullCheck(L_15);
		ArrayElementTypeCheck (L_15, _stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		(L_15)->SetAt(static_cast<il2cpp_array_size_t>(2), (String_t*)_stringLiteralE6D56E05F32996CA7E5AE21BC90D49044C0BF356);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_16 = L_15;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6423));
		RuntimeObject * L_17 = Box(EVRInputError_tC8741BE3044407E8FA26F282526B259D93DBF22F_il2cpp_TypeInfo_var, (&V_0));
		NullCheck(L_17);
		String_t* L_18 = VirtFuncInvoker0< String_t* >::Invoke(3 /* System.String System.Object::ToString() */, L_17);
		V_0 = *(int32_t*)UnBox(L_17);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6423));
		NullCheck(L_16);
		ArrayElementTypeCheck (L_16, L_18);
		(L_16)->SetAt(static_cast<il2cpp_array_size_t>(3), (String_t*)L_18);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_19 = L_16;
		NullCheck(L_19);
		ArrayElementTypeCheck (L_19, _stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		(L_19)->SetAt(static_cast<il2cpp_array_size_t>(4), (String_t*)_stringLiteral18B39452A606090B97AA8D84240CC83BE3E5D62B);
		StringU5BU5D_t933FB07893230EA91C40FF900D5400665E87B14E* L_20 = L_19;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6424));
		uint64_t L_21 = SteamVR_Action_Source_get_handle_mE4C63F9ADB5ACA5E72265B62C0908ACF8EF73A01(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6424));
		V_2 = L_21;
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6425));
		String_t* L_22 = UInt64_ToString_mF0E40B7459C207B89A1C8C04CE7F183AC0E6D672((uint64_t*)(&V_2), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6425));
		NullCheck(L_20);
		ArrayElementTypeCheck (L_20, L_22);
		(L_20)->SetAt(static_cast<il2cpp_array_size_t>(5), (String_t*)L_22);
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6426));
		String_t* L_23 = String_Concat_m232E857CA5107EA6AC52E7DD7018716C021F237B(L_20, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6426));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6427));
		IL2CPP_RUNTIME_CLASS_INIT(Debug_t7B5FCB117E2FD63B6838BC52821B252E2BFB61C4_il2cpp_TypeInfo_var);
		Debug_LogError_m3BCF9B78263152261565DCA9DB7D55F0C391ED29(L_23, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6427));
	}

IL_009c:
	{
		// updateTime = Time.realtimeSinceStartup;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6381));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6428));
		float L_24 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6428));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6429));
		SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline(__this, L_24, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6429));
		// changed = false;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6382));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6430));
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6430));
		// if (active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6383));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6431));
		bool L_25 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6431));
		V_3 = L_25;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6384));
		bool L_26 = V_3;
		if (!L_26)
		{
			goto IL_01ba;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6385));
		// if (delta > changeTolerance || delta < -changeTolerance)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6386));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6432));
		float L_27 = SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6432));
		float L_28 = __this->get_changeTolerance_11();
		if ((((float)L_27) > ((float)L_28)))
		{
			goto IL_00dd;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6433));
		float L_29 = SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6433));
		float L_30 = __this->get_changeTolerance_11();
		G_B6_0 = ((((float)L_29) < ((float)((-L_30))))? 1 : 0);
		goto IL_00de;
	}

IL_00dd:
	{
		G_B6_0 = 1;
	}

IL_00de:
	{
		V_4 = (bool)G_B6_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6387));
		bool L_31 = V_4;
		if (!L_31)
		{
			goto IL_0139;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6388));
		// changed = true;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6389));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6434));
		VirtActionInvoker1< bool >::Invoke(32 /* System.Void Valve.VR.SteamVR_Action_In_Source::set_changed(System.Boolean) */, __this, (bool)1);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6434));
		// changedTime = Time.realtimeSinceStartup + actionData.fUpdateTime; //fUpdateTime is the time from the time the action was called that the action changed
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6390));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6435));
		float L_32 = Time_get_realtimeSinceStartup_mCA1086EC9DFCF135F77BC46D3B7127711EA3DE03(/*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6435));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_33 = __this->get_address_of_actionData_20();
		float L_34 = L_33->get_fUpdateTime_8();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6436));
		SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline(__this, ((float)il2cpp_codegen_add((float)L_32, (float)L_34)), /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6436));
		// if (onChange != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6391));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_35 = __this->get_onChange_15();
		V_5 = (bool)((!(((RuntimeObject*)(ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED *)L_35) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6392));
		bool L_36 = V_5;
		if (!L_36)
		{
			goto IL_0138;
		}
	}
	{
		// onChange.Invoke(singleAction, inputSource, axis, delta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6393));
		ChangeHandler_tF837F67A16B6ED5F9B2C676AC0AF9C611397DFED * L_37 = __this->get_onChange_15();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_38 = __this->get_singleAction_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6437));
		int32_t L_39 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6437));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6438));
		float L_40 = SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6438));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6439));
		float L_41 = SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6439));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6440));
		NullCheck(L_37);
		ChangeHandler_Invoke_m6672A8D7C2C829DAB05FF96A6B6DCD47C4234FED(L_37, L_38, L_39, L_40, L_41, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6440));
	}

IL_0138:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6394));
	}

IL_0139:
	{
		// if (axis != 0)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6395));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6441));
		float L_42 = SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6441));
		V_6 = (bool)((((int32_t)((((float)L_42) == ((float)(0.0f)))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6396));
		bool L_43 = V_6;
		if (!L_43)
		{
			goto IL_0184;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6397));
		// if (onAxis != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6398));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_44 = __this->get_onAxis_12();
		V_7 = (bool)((!(((RuntimeObject*)(AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 *)L_44) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6399));
		bool L_45 = V_7;
		if (!L_45)
		{
			goto IL_0183;
		}
	}
	{
		// onAxis.Invoke(singleAction, inputSource, axis, delta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6400));
		AxisHandler_tB065AC6B40691A33562DB817EBD29E5721A64843 * L_46 = __this->get_onAxis_12();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_47 = __this->get_singleAction_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6442));
		int32_t L_48 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6442));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6443));
		float L_49 = SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6443));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6444));
		float L_50 = SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6444));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6445));
		NullCheck(L_46);
		AxisHandler_Invoke_m60A66159540CA8174A7C52BDC8E5E4F7301CFFC1(L_46, L_47, L_48, L_49, L_50, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6445));
	}

IL_0183:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6401));
	}

IL_0184:
	{
		// if (onUpdate != null)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6402));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_51 = __this->get_onUpdate_16();
		V_8 = (bool)((!(((RuntimeObject*)(UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D *)L_51) <= ((RuntimeObject*)(RuntimeObject *)NULL)))? 1 : 0);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6403));
		bool L_52 = V_8;
		if (!L_52)
		{
			goto IL_01b9;
		}
	}
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6404));
		// onUpdate.Invoke(singleAction, inputSource, axis, delta);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6405));
		UpdateHandler_t4011C6F65732B2D2AD73A21EBF2ADD943897886D * L_53 = __this->get_onUpdate_16();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_54 = __this->get_singleAction_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6446));
		int32_t L_55 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6446));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6447));
		float L_56 = SteamVR_Action_Single_Source_get_axis_mC59B31FCC2C644494AEDADF40ED1A5B1F07B5EF2(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6447));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6448));
		float L_57 = SteamVR_Action_Single_Source_get_delta_m38414B33CCB3F4527E2B988237444873108325A0(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6448));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6449));
		NullCheck(L_53);
		UpdateHandler_Invoke_mEFC67AD99DE1C0D2468FF3D82FCAACA9B5B9B982(L_53, L_54, L_55, L_56, L_57, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6449));
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6406));
	}

IL_01b9:
	{
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6407));
	}

IL_01ba:
	{
		// if (onActiveBindingChange != null && lastActiveBinding != activeBinding)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6408));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_58 = __this->get_onActiveBindingChange_14();
		if (!L_58)
		{
			goto IL_01d5;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6450));
		bool L_59 = VirtFuncInvoker0< bool >::Invoke(16 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActiveBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6450));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6451));
		bool L_60 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6451));
		G_B20_0 = ((((int32_t)((((int32_t)L_59) == ((int32_t)L_60))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_01d6;
	}

IL_01d5:
	{
		G_B20_0 = 0;
	}

IL_01d6:
	{
		V_9 = (bool)G_B20_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6409));
		bool L_61 = V_9;
		if (!L_61)
		{
			goto IL_01fa;
		}
	}
	{
		// onActiveBindingChange.Invoke(singleAction, inputSource, activeBinding);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6410));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_62 = __this->get_onActiveBindingChange_14();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_63 = __this->get_singleAction_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6452));
		int32_t L_64 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6452));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6453));
		bool L_65 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6453));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6454));
		NullCheck(L_62);
		ActiveChangeHandler_Invoke_mB25857B7C1A2F20AA1DD0B4E50BAF973FAE7728A(L_62, L_63, L_64, L_65, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6454));
	}

IL_01fa:
	{
		// if (onActiveChange != null && lastActive != active)
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6411));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_66 = __this->get_onActiveChange_13();
		if (!L_66)
		{
			goto IL_0215;
		}
	}
	{
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6455));
		bool L_67 = VirtFuncInvoker0< bool >::Invoke(14 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_lastActive() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6455));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6456));
		bool L_68 = VirtFuncInvoker0< bool >::Invoke(12 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_active() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6456));
		G_B25_0 = ((((int32_t)((((int32_t)L_67) == ((int32_t)L_68))? 1 : 0)) == ((int32_t)0))? 1 : 0);
		goto IL_0216;
	}

IL_0215:
	{
		G_B25_0 = 0;
	}

IL_0216:
	{
		V_10 = (bool)G_B25_0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6412));
		bool L_69 = V_10;
		if (!L_69)
		{
			goto IL_023a;
		}
	}
	{
		// onActiveChange.Invoke(singleAction, inputSource, activeBinding);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6413));
		ActiveChangeHandler_t616C275F08D4D5422790F80C44EDEAA3F094C8AE * L_70 = __this->get_onActiveChange_13();
		SteamVR_Action_Single_tE548CF5EE507681A93F996409CB4B176D0710D81 * L_71 = __this->get_singleAction_22();
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6457));
		int32_t L_72 = SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6457));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6458));
		bool L_73 = VirtFuncInvoker0< bool >::Invoke(13 /* System.Boolean Valve.VR.SteamVR_Action_Source::get_activeBinding() */, __this);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6458));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6459));
		NullCheck(L_70);
		ActiveChangeHandler_Invoke_mB25857B7C1A2F20AA1DD0B4E50BAF973FAE7728A(L_70, L_71, L_72, L_73, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6459));
	}

IL_023a:
	{
		// }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6414));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::.ctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source__ctor_m03FB42F617454AB8391E54E28CB798A5856D60C0 (SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source__ctor_m03FB42F617454AB8391E54E28CB798A5856D60C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source__ctor_m03FB42F617454AB8391E54E28CB798A5856D60C0_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6460));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6461));
	{
		// public float changeTolerance = Mathf.Epsilon;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6462));
		IL2CPP_RUNTIME_CLASS_INIT(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var);
		float L_0 = ((Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_StaticFields*)il2cpp_codegen_static_fields_for(Mathf_tFBDE6467D269BFE410605C7D806FD9991D4A89CB_il2cpp_TypeInfo_var))->get_Epsilon_0();
		__this->set_changeTolerance_11(L_0);
		// protected InputAnalogActionData_t actionData = new InputAnalogActionData_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6463));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_1 = __this->get_address_of_actionData_20();
		il2cpp_codegen_initobj(L_1, sizeof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C ));
		// protected InputAnalogActionData_t lastActionData = new InputAnalogActionData_t();
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6464));
		InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C * L_2 = __this->get_address_of_lastActionData_21();
		il2cpp_codegen_initobj(L_2, sizeof(InputAnalogActionData_t_t14E9AA21212F14E11EE05E0C5D5D37705B14CB0C ));
		STORE_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6465));
		IL2CPP_RUNTIME_CLASS_INIT(SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB_il2cpp_TypeInfo_var);
		SteamVR_Action_In_Source__ctor_mFF9B46DF32121E562139E277818FB636DCA2A816(__this, /*hidden argument*/NULL);
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6465));
		return;
	}
}
// System.Void Valve.VR.SteamVR_Action_Single_Source::.cctor()
IL2CPP_EXTERN_C IL2CPP_METHOD_ATTR void SteamVR_Action_Single_Source__cctor_m596BE481DDFC3520E3FF84BBF43FA2AEFEAAB375 (const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Single_Source__cctor_m596BE481DDFC3520E3FF84BBF43FA2AEFEAAB375_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Single_Source__cctor_m596BE481DDFC3520E3FF84BBF43FA2AEFEAAB375_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6466));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 6467));
	{
		// protected static uint actionData_size = 0;
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 6468));
		((SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_StaticFields*)il2cpp_codegen_static_fields_for(SteamVR_Action_Single_Source_t2C0EDE53B99D53CE9674FDB744F6F899D72A022F_il2cpp_TypeInfo_var))->set_actionData_size_10(0);
		return;
	}
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_allActions_m174E766373DFF1E8B6C37DD59D1F091FA87D7162_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3868));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3869));
	{
		// public SteamVR_Action[] allActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3870));
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_0 = __this->get_U3CallActionsU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_nonVisualInActions_m182A6C7AD5EF42247ED40236F13E9940CD104540_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3874));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3875));
	{
		// public ISteamVR_Action_In[] nonVisualInActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3876));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_0 = __this->get_U3CnonVisualInActionsU3Ek__BackingField_1();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_visualActions_m309C7FD2967C16E1DAE2F2B263A6486EC617BF16_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3880));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3881));
	{
		// public ISteamVR_Action_In[] visualActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3882));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_0 = __this->get_U3CvisualActionsU3Ek__BackingField_2();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_poseActions_m6F122AFD0C6FA6DB051A0986F02FC13B3A07D594_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3886));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3887));
	{
		// public SteamVR_Action_Pose[] poseActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3888));
		SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* L_0 = __this->get_U3CposeActionsU3Ek__BackingField_3();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_skeletonActions_m14DBB8DECE757C91EDB64037D8F14E1E3C4EABE5_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3892));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3893));
	{
		// public SteamVR_Action_Skeleton[] skeletonActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3894));
		SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* L_0 = __this->get_U3CskeletonActionsU3Ek__BackingField_4();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_outActionArray_mD1734B9668CDAAF826D7FEBD3D6B6C833F868E40_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3898));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3899));
	{
		// public ISteamVR_Action_Out[] outActionArray { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3900));
		ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* L_0 = __this->get_U3CoutActionArrayU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5BSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_fullPath_mBE3D5D3E17522CFCA40642C8415CE79453152F5B_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3904));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3905));
	{
		// public string fullPath { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3906));
		String_t* L_0 = __this->get_U3CfullPathU3Ek__BackingField_6();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR String_t* SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554ASteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_usage_m281B4DFADD2DE8FFBB1F26DC192BBD2AAC51554A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3910));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3911));
	{
		// public string usage { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3912));
		String_t* L_0 = __this->get_U3CusageU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR uint64_t SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_get_handle_m933FD0333922FB1C8E42B3F68BF4F85DB7F5B9C4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3916));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3917));
	{
		// public ulong handle { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3918));
		uint64_t L_0 = __this->get_U3ChandleU3Ek__BackingField_8();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, String_t* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6CSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_fullPath_m9F5EB64C5B9C8C6A6CF20D7D1817DC4AD2717B6C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3907));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3908));
	{
		// public string fullPath { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3909));
		String_t* L_0 = ___value0;
		__this->set_U3CfullPathU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937CSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_allActions_mAFD484350322E78B3D1C21C9308284D1ED48937C_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3871));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3872));
	{
		// public SteamVR_Action[] allActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3873));
		SteamVR_ActionU5BU5D_tEC1A53652514EC91CD9B299E87348746BA59DEAB* L_0 = ___value0;
		__this->set_U3CallActionsU3Ek__BackingField_0(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7ASteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_nonVisualInActions_mED2F84AC905E8536D128451C20C8CCB7F80E0B7A_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3877));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3878));
	{
		// public ISteamVR_Action_In[] nonVisualInActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3879));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_0 = ___value0;
		__this->set_U3CnonVisualInActionsU3Ek__BackingField_1(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_visualActions_mF93624153B7567AB6A1E1CA71F90AE5F8E932DA1_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3883));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3884));
	{
		// public ISteamVR_Action_In[] visualActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3885));
		ISteamVR_Action_InU5BU5D_t885FD4873503D2E67016E079D86F2143691C9A8B* L_0 = ___value0;
		__this->set_U3CvisualActionsU3Ek__BackingField_2(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_poseActions_mB9BF774FDE65B05CBF575D8E683BC76D9F8EB251_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3889));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3890));
	{
		// public SteamVR_Action_Pose[] poseActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3891));
		SteamVR_Action_PoseU5BU5D_t0EF45D53BDC6643E07E8EAC0545D47DB35CCE968* L_0 = ___value0;
		__this->set_U3CposeActionsU3Ek__BackingField_3(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061DSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_skeletonActions_m19414AA0BB8B73B28614B6329F869B7C907A061D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3895));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3896));
	{
		// public SteamVR_Action_Skeleton[] skeletonActions { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3897));
		SteamVR_Action_SkeletonU5BU5D_tE7AAA1525F7C292821AB6BD3A1A14BDC0B91FC56* L_0 = ___value0;
		__this->set_U3CskeletonActionsU3Ek__BackingField_4(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_outActionArray_mAF7FBF4EE6553001FE891A95A659989EBD7D66B8_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3901));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3902));
	{
		// public ISteamVR_Action_Out[] outActionArray { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3903));
		ISteamVR_Action_OutU5BU5D_t7A49A166FF69691341BA55E5A16540FE292A37C9* L_0 = ___value0;
		__this->set_U3CoutActionArrayU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B_inline (SteamVR_ActionSet_Data_tDA03CB718A3B3F5805D6D9C399D57E56AF9DA529 * __this, uint64_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68BSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_ActionSet_Data_set_handle_mF6CB66BFF4E7C39D6E6A7FEEF26F702E096DA68B_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3919));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3920));
	{
		// public ulong handle { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3921));
		uint64_t L_0 = ___value0;
		__this->set_U3ChandleU3Ek__BackingField_8(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_inline (SteamVR_Action_Source_t9D7428CDE39924074518EE6233D9A4FAB0C33CB0 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Source_get_inputSource_mAA1928183BB06E5C8CF950F65BA80635C25535D4_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3501));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 3502));
	{
		// public SteamVR_Input_Sources inputSource { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 3503));
		int32_t L_0 = __this->get_U3CinputSourceU3Ek__BackingField_0();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DASteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_set_changedTime_mD1EE7D0BD28058E1901FF671FB77587F2FCA35DA_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5048));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5049));
	{
		// public float changedTime { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5050));
		float L_0 = ___value0;
		__this->set_U3CchangedTimeU3Ek__BackingField_6(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, float ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_set_updateTime_mDA27AEC2F90C6036B8E6979F74E68528316D1322_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5011));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5012));
	{
		// public float updateTime { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5013));
		float L_0 = ___value0;
		__this->set_U3CupdateTimeU3Ek__BackingField_5(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR int32_t SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264ASteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_lastOriginGetFrame_mC84DC6E9F01FA6868379E84C46075A1A0789264A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5051));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5052));
	{
		// protected int lastOriginGetFrame { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5053));
		int32_t L_0 = __this->get_U3ClastOriginGetFrameU3Ek__BackingField_7();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, int32_t ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_set_lastOriginGetFrame_m4519190D9383893CF51070BEC9FD5074CA3FAA73_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5054));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5055));
	{
		// protected int lastOriginGetFrame { get; set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5056));
		int32_t L_0 = ___value0;
		__this->set_U3ClastOriginGetFrameU3Ek__BackingField_7(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_localPosition_mE065A826D8D1A8CF44D9E7F0D038F24D70985833_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5697));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5698));
	{
		// public Vector3 localPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5699));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClocalPositionU3Ek__BackingField_23();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FDSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastLocalPosition_mD3657748BDAF335187B86EA7FE7D48E79FE585FD_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5712));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5713));
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5714));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastLocalPositionU3Ek__BackingField_25(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2ASteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_localRotation_m307D9DD92DFFFCC30446A71D9BD15674A797ED2A_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5703));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5704));
	{
		// public Quaternion localRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5705));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClocalRotationU3Ek__BackingField_24();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastLocalRotation_mD73515C798688F00F50231B1D96C633FB5C66161_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5718));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5719));
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5720));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3ClastLocalRotationU3Ek__BackingField_26(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BFSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_velocity_m2B71BB7981006080D113442CB374529602A310BF_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5721));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5722));
	{
		// public Vector3 velocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5723));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CvelocityU3Ek__BackingField_27();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44DSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastVelocity_mC82CBCEB17BC4DB41C30273DE55A5B6CE9C2C44D_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5730));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5731));
	{
		// public Vector3 lastVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5732));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastVelocityU3Ek__BackingField_28(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_angularVelocity_mACAA45CB05DB94C9292ED147F3156109DAFA0209_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5733));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5734));
	{
		// public Vector3 angularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5735));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3CangularVelocityU3Ek__BackingField_29();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_lastAngularVelocity_m6AB62CBF0CA4920B8EB2C901E5254B66757C53D2_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5742));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5743));
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5744));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClastAngularVelocityU3Ek__BackingField_30(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR float SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9_inline (SteamVR_Action_In_Source_t6C3FA81DC7F53D302E49E09F5791E612AC7832AB * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_In_Source_get_updateTime_m382370EEA7C181B050BF718DBCD8476067A12CA9_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5008));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5009));
	{
		// public float updateTime { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5010));
		float L_0 = __this->get_U3CupdateTimeU3Ek__BackingField_5();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_localPosition_m9FFA15725C6E506327F57EEC560DB13C8F2A5018_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5700));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5701));
	{
		// public Vector3 localPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5702));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3ClocalPositionU3Ek__BackingField_23(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_localRotation_m4EC8BEC8216EE891596BD11134C93D07C9B83181_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5706));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5707));
	{
		// public Quaternion localRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5708));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = ___value0;
		__this->set_U3ClocalRotationU3Ek__BackingField_24(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_velocity_mBF140D89527AC1EE4EC6DF1314F35986F2335918_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5724));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5725));
	{
		// public Vector3 velocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5726));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CvelocityU3Ek__BackingField_27(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR void SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  ___value0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088ESteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_PARAMS(methodExecutionContextParameters, (&___value0));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_set_angularVelocity_m76648CE39EB6345B2C6E8E40A5C8CB4862E7088E_RuntimeMethod_var, methodExecutionContextThis, methodExecutionContextParameters, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5736));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5737));
	{
		// public Vector3 angularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5738));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = ___value0;
		__this->set_U3CangularVelocityU3Ek__BackingField_29(L_0);
		return;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastLocalPosition_mB748F9D4600498E9BACCEBE5C8F00DED8125C307_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5709));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5710));
	{
		// public Vector3 lastLocalPosition { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5711));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastLocalPositionU3Ek__BackingField_25();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastLocalRotation_m15622BCE4A3D32548EBFE7DC98F8751352617660_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5715));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5716));
	{
		// public Quaternion lastLocalRotation { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5717));
		Quaternion_t319F3319A7D43FFA5D819AD6C0A98851F0095357  L_0 = __this->get_U3ClastLocalRotationU3Ek__BackingField_26();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastVelocity_mB9FD7955140F713C63842433E1E50D498EAD0A21_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5727));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5728));
	{
		// public Vector3 lastVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5729));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastVelocityU3Ek__BackingField_28();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline  IL2CPP_METHOD_ATTR Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_inline (SteamVR_Action_Pose_Source_t56D2300E6E866DAB00504F844B60F4556A4F0E27 * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55FSteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_THIS(methodExecutionContextThis, (&__this));
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, SteamVR_Action_Pose_Source_get_lastAngularVelocity_m3EE729ECF16DA55CFE069E25EB9099A80667C55F_RuntimeMethod_var, methodExecutionContextThis, NULL, NULL);
	CHECK_METHOD_ENTRY_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5739));
	CHECK_METHOD_EXIT_SEQ_POINT(methodExitChecker, methodExecutionContext, (g_sequencePointsSteamVR + 5740));
	{
		// public Vector3 lastAngularVelocity { get; protected set; }
		CHECK_SEQ_POINT(methodExecutionContext, (g_sequencePointsSteamVR + 5741));
		Vector3_tDCF05E21F632FE2BA260C06E0D10CA81513E6720  L_0 = __this->get_U3ClastAngularVelocityU3Ek__BackingField_30();
		return L_0;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFE_gshared_inline (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, int32_t ___index0, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFESteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Item_m27A3A8A20AD09E01A82CC9824850D89C789D9EFE_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = ___index0;
		int32_t L_1 = (int32_t)__this->get__size_2();
		if ((!(((uint32_t)L_0) >= ((uint32_t)L_1))))
		{
			goto IL_000e;
		}
	}
	{
		ThrowHelper_ThrowArgumentOutOfRangeException_mBA2AF20A35144E0C43CD721A22EAC9FCA15D6550(/*hidden argument*/NULL);
	}

IL_000e:
	{
		VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5* L_2 = (VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5*)__this->get__items_1();
		int32_t L_3 = ___index0;
		VRActiveActionSet_t_t56FCB976F5C956FAEA9EB2A069D1E6DF21CB1D38  L_4 = IL2CPP_ARRAY_UNSAFE_LOAD((VRActiveActionSet_tU5BU5D_t2D5643D6F85DAE8CC600EF80D45C90EFC71ADBD5*)L_2, (int32_t)L_3);
		return L_4;
	}
}
IL2CPP_EXTERN_C inline IL2CPP_METHOD_ATTR int32_t List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7_gshared_inline (List_1_t28419BA09CF36232DDA7E21DFA4212622087E8CA * __this, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7SteamVR10_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	DECLARE_METHOD_EXEC_CTX(methodExecutionContext, List_1_get_Count_m1B8121E28F3FF8A787DE080C826D052CB36626E7_RuntimeMethod_var, NULL, NULL, NULL);
	CHECK_PAUSE_POINT;
	{
		int32_t L_0 = (int32_t)__this->get__size_2();
		return L_0;
	}
}
